{"ast":null,"code":"var _jsxFileName = \"/Users/matheuscunha/USP/Plantshop/ps/src/packages/home/src/components/HomePage/HomePage.tsx\";\nimport React from 'react';\nimport Product from '../../../../../base-components/product/src/components/Product/Product';\nimport ProductList from '../../../../../base-components/product-list/src/components/ProductList/ProductList';\nimport { connect } from 'react-redux';\nimport ScrollMenu from 'react-horizontal-scrolling-menu';\nimport * as styles from './styles';\nimport ManageArrow from '../../../../../base-components/ManageArrow';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst HomePage = props => {\n  const splitProducts = products => {\n    const productsMap = new Map();\n    products.forEach(product => {\n      if (productsMap.has(product.type)) {\n        const typeList = productsMap.get(product.type);\n        typeList.push(product);\n        productsMap.set(product.type, typeList);\n      } else {\n        productsMap.set(product.type, [product]);\n      }\n    });\n    return productsMap;\n  };\n\n  const titleType = type => {\n    switch (type) {\n      case 'Planta':\n        return 'Plantas';\n\n      case 'Flor':\n        return 'Flores';\n\n      case 'Buque':\n        return 'Buquês';\n\n      case 'Vaso':\n        return 'Vasos';\n\n      default:\n        return '';\n    }\n\n    ;\n  };\n\n  const renderProductTypeList = products => {\n    const lists = [];\n    products.forEach((productsType, title) => {\n      lists.push( /*#__PURE__*/_jsxDEV(ProductList, {\n        title: titleType(title),\n        products: productsType\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 15\n      }, this));\n    });\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: lists\n    }, void 0, false);\n  };\n\n  const renderProduts = product => {\n    return /*#__PURE__*/_jsxDEV(Product, {\n      product: product\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 4\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.homePage,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \" Promo\\xE7\\xF5es \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(ScrollMenu, {\n      data: props.products.map(renderProduts),\n      arrowLeft: /*#__PURE__*/_jsxDEV(ManageArrow, {\n        direction: \"left\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 16\n      }, this),\n      arrowRight: /*#__PURE__*/_jsxDEV(ManageArrow, {\n        direction: \"right\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this),\n      alignCenter: false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }, this), renderProductTypeList(splitProducts(props.products))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 3\n  }, this);\n};\n\n_c = HomePage;\n\nconst mapStateToProps = state => ({\n  products: state.products\n});\n\nconst mapDispatchToProps = dispatch => ({});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(HomePage);\n\nvar _c;\n\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"sources":["/Users/matheuscunha/USP/Plantshop/ps/src/packages/home/src/components/HomePage/HomePage.tsx"],"names":["React","Product","ProductList","connect","ScrollMenu","styles","ManageArrow","HomePage","props","splitProducts","products","productsMap","Map","forEach","product","has","type","typeList","get","push","set","titleType","renderProductTypeList","lists","productsType","title","renderProduts","homePage","map","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { ReactNode } from 'react';\nimport Product from '../../../../../base-components/product/src/components/Product/Product';\nimport ProductList from '../../../../../base-components/product-list/src/components/ProductList/ProductList';\nimport { connect } from 'react-redux';\nimport { Dispatch } from 'redux';\nimport { ApplicationState, ProductModel } from '../../../../../store/types';\nimport ScrollMenu from 'react-horizontal-scrolling-menu';\nimport * as styles from './styles';\nimport ManageArrow from '../../../../../base-components/ManageArrow';\n\nexport interface HomePageProps {\n  \tproducts: ProductModel[],\n}\n\nconst HomePage: React.FC<HomePageProps> = (props) => {\n\n\tconst splitProducts = (products: ProductModel[]) => {\n\t\t\n\t\tconst productsMap: Map<string, ProductModel[]> = new Map();\n\t\tproducts.forEach((product) => {\n\t\t\tif (productsMap.has(product.type)){\n\t\t\t\tconst typeList: ProductModel[] = productsMap.get(product.type)!;\n\t\t\t\ttypeList.push(product);\n\t\t\t\tproductsMap.set(product.type, typeList);\n\t\t\t} else {\n\t\t\t\tproductsMap.set(product.type, [product]);\n\t\t\t}\n\t\t});\n\n\t\treturn productsMap;\n\t}\n\n\tconst titleType = (type:string) => {\n\t\tswitch(type){\n\t\t\tcase 'Planta':\n\t\t\t\treturn 'Plantas';\n\t\t\tcase 'Flor':\n\t\t\t\treturn 'Flores';\n\t\t\tcase 'Buque':\n\t\t\t\treturn 'Buquês';\n\t\t\tcase 'Vaso':\n\t\t\t\treturn 'Vasos';\n\t\t\tdefault:\n\t\t\t\treturn '';\n\t\t};\n\t};\n\n\tconst renderProductTypeList = (products:Map<string, ProductModel[]>) => {\n\t\tconst lists: ReactNode[] = [];\n\n\t\tproducts.forEach((productsType, title) => {\n\t\t\tlists.push(<ProductList title={titleType(title)} products={productsType} />);\n\t\t});\n\n\t\treturn (\n\t\t\t<>{lists}</>\n\t\t)\n\t}\n\n\tconst renderProduts = (product: ProductModel) =>{\n\t\treturn(\n\t\t\t<Product product={product}/>\n\t\t);\n\t}\n\n\treturn (\n\t\t<div className={styles.homePage}>\n\t\t\t<h1> Promoções </h1>\n\t\t\t\t<ScrollMenu\n\t\t\t\tdata={props.products.map(renderProduts)}\n\t\t\t\tarrowLeft={<ManageArrow direction=\"left\" />}\n\t\t\t\tarrowRight={<ManageArrow direction=\"right\" />}\n\t\t\t\talignCenter={false}\n\t\t\t\t/>\n\t\t\t{renderProductTypeList(splitProducts(props.products))}\n\t\t</div>\n\t);\n};\n\ninterface DispatchProps {}\n\nconst mapStateToProps = (state: ApplicationState): HomePageProps => ({\n  \tproducts: state.products\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch): DispatchProps => ({});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(HomePage);\n"]},"metadata":{},"sourceType":"module"}