{"ast":null,"code":"import produce, { enableMapSet } from 'immer';\nimport { mockedUsers } from '../mock-objects/usersList';\nimport { initialPossibleState } from './types';\nimport { ActionTypes } from './actionTypes';\nexport const initialState = {\n  loading: initialPossibleState,\n  error: initialPossibleState,\n  success: initialPossibleState,\n  user: null,\n  products: [],\n  cartProducts: new Map(),\n  rentOrders: [],\n  rentedProducts: [],\n  usersList: mockedUsers,\n  orders: []\n};\n\nconst reducer = (state = initialState, action) => {\n  enableMapSet();\n\n  switch (action.type) {\n    case ActionTypes.LOAD_USER_REQUEST:\n      return produce(state, draft => {\n        draft.loading.user = true;\n      });\n\n    case ActionTypes.LOAD_USER_SUCCESS:\n      return produce(state, draft => {\n        draft.loading.user = false;\n        draft.error.user = false;\n        localStorage.setItem('@plantshop/email', action.user.email);\n        localStorage.setItem('@plantshop/password', action.user.password);\n        draft.user = action.user;\n      });\n\n    case ActionTypes.LOAD_USER_ERROR:\n      return produce(state, draft => {\n        draft.loading.user = false;\n        draft.error.user = true;\n      });\n\n    case ActionTypes.LOAD_USER_RESET:\n      return produce(state, draft => {\n        draft.loading.user = false;\n        draft.error.user = false;\n      });\n\n    case ActionTypes.LOAD_ALL_PRODUCTS_REQUEST:\n      return produce(state, draft => {\n        draft.loading.allProducts = true;\n        draft.error.allProducts = false;\n      });\n\n    case ActionTypes.LOAD_ALL_PRODUCTS_SUCCESS:\n      return produce(state, draft => {\n        draft.loading.allProducts = false;\n        draft.error.allProducts = false;\n        draft.products = action.products;\n      });\n\n    case ActionTypes.LOAD_ALL_PRODUCTS_ERROR:\n      return produce(state, draft => {\n        draft.loading.allProducts = false;\n        draft.error.allProducts = true;\n      });\n\n    case ActionTypes.ADD_PRODUCT_TO_CART_REQUEST:\n      return produce(state, draft => {\n        if (state.cartProducts.has(action.product.id)) {\n          const selectedProduct = state.cartProducts.get(action.product.id);\n          draft.cartProducts.set(action.product.id, { ...selectedProduct,\n            quantity: selectedProduct.quantity + 1\n          });\n        } else {\n          draft.cartProducts.set(action.product.id, action.product);\n        }\n      });\n\n    case ActionTypes.REMOVE_PRODUCT_FROM_CART_RQUEST:\n      return produce(state, draft => {\n        if (state.cartProducts.has(action.id)) {\n          const selectedProduct = state.cartProducts.get(action.id);\n          draft.cartProducts.delete(action.id);\n        }\n      });\n\n    case ActionTypes.PLACE_PURCHASE_ORDER_REQUEST:\n      return produce(state, draft => {\n        draft.loading.placePurchaseOrder = true;\n        draft.error.placePurchaseOrder = false;\n        draft.success.placePurchaseOrder = false;\n      });\n\n    case ActionTypes.PLACE_PURCHASE_ORDER_SUCCESS:\n      return produce(state, draft => {\n        draft.loading.placePurchaseOrder = false;\n        draft.error.placePurchaseOrder = false;\n        draft.success.placePurchaseOrder = true;\n        draft.cartProducts = new Map();\n      });\n\n    case ActionTypes.PLACE_PURCHASE_ORDER_ERROR:\n      return produce(state, draft => {\n        draft.loading.placePurchaseOrder = false;\n        draft.error.placePurchaseOrder = true;\n        draft.success.placePurchaseOrder = false;\n      });\n\n    case ActionTypes.PLACE_PURCHASE_ORDER_NOT_ASKED:\n      return produce(state, draft => {\n        draft.loading.placePurchaseOrder = false;\n        draft.error.placePurchaseOrder = false;\n        draft.success.placePurchaseOrder = false;\n      });\n\n    case ActionTypes.CLEAR_PRODUCT_IN_CART_REQUEST:\n      return produce(state, draft => {\n        draft.cartProducts = new Map();\n        draft.rentOrders = [];\n      });\n\n    case ActionTypes.REMOVE_RENT_ORDER_REQUEST:\n      return produce(state, draft => {\n        draft.rentOrders = [];\n        state.rentOrders.forEach(order => {\n          if (order.orderId !== action.orderId) {\n            draft.rentOrders.push(order);\n          }\n        });\n      });\n\n    case ActionTypes.SIGN_UP_USER_REQUEST:\n      return produce(state, draft => {\n        draft.loading.signUp = true;\n      });\n\n    case ActionTypes.SIGN_UP_USER_SUCCESS:\n      return produce(state, draft => {\n        draft.loading.signUp = false;\n        draft.success.signUp = true;\n      });\n\n    case ActionTypes.SIGN_UP_USER_ERROR:\n      return produce(state, draft => {\n        draft.loading.signUp = false;\n        draft.error.signUp = true;\n      });\n\n    case ActionTypes.SIGN_UP_USER_RESET:\n      return produce(state, draft => {\n        draft.loading.signUp = false;\n        draft.error.signUp = false;\n        draft.success.signUp = false;\n      });\n\n    case ActionTypes.ADD_INVENTORY_REQUEST:\n      return produce(state, draft => {\n        draft.loading.addInventory = true;\n      });\n\n    case ActionTypes.ADD_INVENTORY_SUCCESS:\n      return produce(state, draft => {\n        draft.loading.addInventory = false;\n        draft.success.addInventory = true;\n      });\n\n    case ActionTypes.ADD_INVENTORY_ERROR:\n      return produce(state, draft => {\n        draft.loading.addInventory = false;\n        draft.error.addInventory = true;\n      });\n\n    case ActionTypes.REMOVE_INVENTORY_REQUEST:\n      return produce(state, draft => {\n        draft.loading.removeInventory = true;\n      });\n\n    case ActionTypes.REMOVE_INVENTORY_SUCCESS:\n      return produce(state, draft => {\n        draft.loading.removeInventory = false;\n        draft.success.removeInventory = true;\n      });\n\n    case ActionTypes.REMOVE_INVENTORY_ERROR:\n      return produce(state, draft => {\n        draft.loading.removeInventory = false;\n        draft.error.removeInventory = true;\n      });\n\n    case ActionTypes.INVENTORY_RESET:\n      return produce(state, draft => {\n        draft.loading.removeInventory = false;\n        draft.success.removeInventory = false;\n        draft.error.removeInventory = false;\n        draft.loading.addInventory = false;\n        draft.success.addInventory = false;\n        draft.error.addInventory = false;\n        draft.loading.removeProduct = false;\n        draft.error.removeProduct = false;\n        draft.success.removeProduct = false;\n      });\n\n    case ActionTypes.RENT_PRODUCT_REQUEST:\n      return produce(state, draft => {\n        draft.rentOrders.push(action.rentOrder);\n      });\n\n    case ActionTypes.PLACE_RENT_ORDERS_REQUEST:\n      return produce(state, draft => {\n        draft.error.placeRentOrders = false;\n        draft.success.placeRentOrders = false;\n        draft.loading.placeRentOrders = true;\n      });\n\n    case ActionTypes.PLACE_RENT_ORDERS_SUCCESS:\n      return produce(state, draft => {\n        draft.error.placeRentOrders = false;\n        draft.success.placeRentOrders = true;\n        draft.loading.placeRentOrders = false;\n        draft.rentOrders = [];\n      });\n\n    case ActionTypes.PLACE_RENT_ORDERS_ERROR:\n      return produce(state, draft => {\n        draft.error.placeRentOrders = true;\n        draft.success.placeRentOrders = false;\n        draft.loading.placeRentOrders = false;\n      });\n\n    case ActionTypes.LOAD_ALL_ORDERS_REQUEST:\n      return produce(state, draft => {\n        draft.error.loadAllOrders = false;\n        draft.success.loadAllOrders = false;\n        draft.loading.loadAllOrders = true;\n      });\n\n    case ActionTypes.LOAD_ALL_ORDERS_SUCCESS:\n      return produce(state, draft => {\n        draft.error.loadAllOrders = false;\n        draft.success.loadAllOrders = true;\n        draft.loading.loadAllOrders = false;\n        draft.orders = action.purchaseOrders;\n        draft.rentedProducts = action.rentOrders;\n      });\n\n    case ActionTypes.LOAD_ALL_ORDERS_ERROR:\n      return produce(state, draft => {\n        draft.error.loadAllOrders = true;\n        draft.success.loadAllOrders = false;\n        draft.loading.loadAllOrders = false;\n      });\n\n    case ActionTypes.REMOVE_PRODUCT_REQUEST:\n      return produce(state, draft => {\n        draft.loading.removeProduct = true;\n      });\n\n    case ActionTypes.REMOVE_PRODUCT_SUCCESS:\n      return produce(state, draft => {\n        draft.loading.removeProduct = false;\n        draft.success.removeProduct = true;\n      });\n\n    case ActionTypes.REMOVE_PRODUCT_ERROR:\n      return produce(state, draft => {\n        draft.loading.removeProduct = false;\n        draft.error.removeProduct = true;\n      });\n\n    case ActionTypes.EDIT_USER_REQUEST:\n      return produce(state, draft => {\n        draft.loading.editUser = true;\n        draft.success.editUser = false;\n        draft.error.editUser = false;\n      });\n\n    case ActionTypes.EDIT_USER_SUCCESS:\n      return produce(state, draft => {\n        draft.loading.editUser = false;\n        draft.success.editUser = true;\n      });\n\n    case ActionTypes.EDIT_USER_ERROR:\n      return produce(state, draft => {\n        draft.loading.editUser = false;\n        draft.error.editUser = true;\n      });\n\n    case ActionTypes.MINUS_PRODUCT_IN_CART_REQUEST:\n      return produce(state, draft => {\n        if (state.cartProducts.has(action.id)) {\n          const selectedProduct = state.cartProducts.get(action.id);\n\n          if (selectedProduct.quantity === 1) {\n            draft.cartProducts.delete(action.id);\n          } else if (selectedProduct.quantity > 1) {\n            draft.cartProducts.set(action.id, { ...selectedProduct,\n              quantity: selectedProduct.quantity - 1\n            });\n          }\n        }\n      });\n\n    case ActionTypes.PLUS_PRODUCT_IN_CART_REQUEST:\n      return produce(state, draft => {\n        state.products.forEach(product => {\n          if (state.cartProducts.has(action.id)) {\n            const selectedProduct = state.cartProducts.get(action.id);\n\n            if (product.id === action.id && product.quantity - selectedProduct.quantity > 0) {\n              draft.cartProducts.set(action.id, { ...selectedProduct,\n                quantity: selectedProduct.quantity + 1\n              });\n            }\n          }\n        });\n      });\n\n    case ActionTypes.ADD_ADMIN_REQUEST:\n      return produce(state, draft => {\n        draft.loading.addAdmin = true;\n      });\n\n    case ActionTypes.ADD_ADMIN_SUCCESS:\n      return produce(state, draft => {\n        draft.loading.addAdmin = false;\n        draft.success.addAdmin = true;\n      });\n\n    case ActionTypes.ADD_ADMIN_ERROR:\n      return produce(state, draft => {\n        draft.loading.addAdmin = false;\n        draft.error.addAdmin = true;\n      });\n\n    case ActionTypes.ADD_ADMIN_RESET:\n      return produce(state, draft => {\n        draft.loading.addAdmin = false;\n        draft.success.addAdmin = false;\n        draft.error.addAdmin = false;\n      });\n\n    case ActionTypes.ADD_PRODUCT_REQUEST:\n      return produce(state, draft => {\n        draft.loading.addProduct = true;\n      });\n\n    case ActionTypes.ADD_PRODUCT_SUCCESS:\n      return produce(state, draft => {\n        draft.loading.addProduct = false;\n        draft.success.addProduct = true;\n      });\n\n    case ActionTypes.ADD_PRODUCT_ERROR:\n      return produce(state, draft => {\n        draft.loading.addProduct = false;\n        draft.error.addProduct = true;\n      });\n\n    case ActionTypes.ADD_PRODUCT_RESET:\n      return produce(state, draft => {\n        draft.loading.addProduct = false;\n        draft.error.addProduct = false;\n        draft.success.addProduct = false;\n      });\n\n    case ActionTypes.LOG_OUT_REQUEST:\n      return produce(state, draft => {\n        localStorage.removeItem('@plantshop/email');\n        localStorage.removeItem('@plantshop/password');\n        draft.loading.user = false;\n        draft.error.user = false;\n        draft.user = null;\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/matheuscunha/USP/Plantshop/src/store/reducer.ts"],"names":["produce","enableMapSet","mockedUsers","initialPossibleState","ActionTypes","initialState","loading","error","success","user","products","cartProducts","Map","rentOrders","rentedProducts","usersList","orders","reducer","state","action","type","LOAD_USER_REQUEST","draft","LOAD_USER_SUCCESS","localStorage","setItem","email","password","LOAD_USER_ERROR","LOAD_USER_RESET","LOAD_ALL_PRODUCTS_REQUEST","allProducts","LOAD_ALL_PRODUCTS_SUCCESS","LOAD_ALL_PRODUCTS_ERROR","ADD_PRODUCT_TO_CART_REQUEST","has","product","id","selectedProduct","get","set","quantity","REMOVE_PRODUCT_FROM_CART_RQUEST","delete","PLACE_PURCHASE_ORDER_REQUEST","placePurchaseOrder","PLACE_PURCHASE_ORDER_SUCCESS","PLACE_PURCHASE_ORDER_ERROR","PLACE_PURCHASE_ORDER_NOT_ASKED","CLEAR_PRODUCT_IN_CART_REQUEST","REMOVE_RENT_ORDER_REQUEST","forEach","order","orderId","push","SIGN_UP_USER_REQUEST","signUp","SIGN_UP_USER_SUCCESS","SIGN_UP_USER_ERROR","SIGN_UP_USER_RESET","ADD_INVENTORY_REQUEST","addInventory","ADD_INVENTORY_SUCCESS","ADD_INVENTORY_ERROR","REMOVE_INVENTORY_REQUEST","removeInventory","REMOVE_INVENTORY_SUCCESS","REMOVE_INVENTORY_ERROR","INVENTORY_RESET","removeProduct","RENT_PRODUCT_REQUEST","rentOrder","PLACE_RENT_ORDERS_REQUEST","placeRentOrders","PLACE_RENT_ORDERS_SUCCESS","PLACE_RENT_ORDERS_ERROR","LOAD_ALL_ORDERS_REQUEST","loadAllOrders","LOAD_ALL_ORDERS_SUCCESS","purchaseOrders","LOAD_ALL_ORDERS_ERROR","REMOVE_PRODUCT_REQUEST","REMOVE_PRODUCT_SUCCESS","REMOVE_PRODUCT_ERROR","EDIT_USER_REQUEST","editUser","EDIT_USER_SUCCESS","EDIT_USER_ERROR","MINUS_PRODUCT_IN_CART_REQUEST","PLUS_PRODUCT_IN_CART_REQUEST","ADD_ADMIN_REQUEST","addAdmin","ADD_ADMIN_SUCCESS","ADD_ADMIN_ERROR","ADD_ADMIN_RESET","ADD_PRODUCT_REQUEST","addProduct","ADD_PRODUCT_SUCCESS","ADD_PRODUCT_ERROR","ADD_PRODUCT_RESET","LOG_OUT_REQUEST","removeItem"],"mappings":"AAAA,OAAOA,OAAP,IAAkBC,YAAlB,QAAsC,OAAtC;AACA,SAASC,WAAT,QAA4B,2BAA5B;AACA,SAA2BC,oBAA3B,QAAuD,SAAvD;AAEA,SAASC,WAAT,QAA4B,eAA5B;AAEA,OAAO,MAAMC,YAA8B,GAAG;AAC5CC,EAAAA,OAAO,EAAEH,oBADmC;AAE5CI,EAAAA,KAAK,EAAEJ,oBAFqC;AAG5CK,EAAAA,OAAO,EAAEL,oBAHmC;AAI5CM,EAAAA,IAAI,EAAE,IAJsC;AAK5CC,EAAAA,QAAQ,EAAE,EALkC;AAM5CC,EAAAA,YAAY,EAAE,IAAIC,GAAJ,EAN8B;AAO5CC,EAAAA,UAAU,EAAE,EAPgC;AAQ5CC,EAAAA,cAAc,EAAE,EAR4B;AAS5CC,EAAAA,SAAS,EAAEb,WATiC;AAU5Cc,EAAAA,MAAM,EAAE;AAVoC,CAAvC;;AAaP,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGb,YAAT,EAAuBc,MAAvB,KAAqD;AACnElB,EAAAA,YAAY;;AAEZ,UAAQkB,MAAM,CAACC,IAAf;AACE,SAAKhB,WAAW,CAACiB,iBAAjB;AACE,aAAOrB,OAAO,CAACkB,KAAD,EAAQI,KAAK,IAAI;AAC7BA,QAAAA,KAAK,CAAChB,OAAN,CAAcG,IAAd,GAAqB,IAArB;AACD,OAFa,CAAd;;AAGF,SAAKL,WAAW,CAACmB,iBAAjB;AACE,aAAOvB,OAAO,CAACkB,KAAD,EAAQI,KAAK,IAAI;AAC/BA,QAAAA,KAAK,CAAChB,OAAN,CAAcG,IAAd,GAAqB,KAArB;AACAa,QAAAA,KAAK,CAACf,KAAN,CAAYE,IAAZ,GAAmB,KAAnB;AACAe,QAAAA,YAAY,CAACC,OAAb,CAAqB,kBAArB,EAAyCN,MAAM,CAACV,IAAP,CAAYiB,KAArD;AACAF,QAAAA,YAAY,CAACC,OAAb,CAAqB,qBAArB,EAA4CN,MAAM,CAACV,IAAP,CAAYkB,QAAxD;AACAL,QAAAA,KAAK,CAACb,IAAN,GAAaU,MAAM,CAACV,IAApB;AACD,OANe,CAAd;;AAOF,SAAKL,WAAW,CAACwB,eAAjB;AACE,aAAO5B,OAAO,CAACkB,KAAD,EAAQI,KAAK,IAAI;AAC7BA,QAAAA,KAAK,CAAChB,OAAN,CAAcG,IAAd,GAAqB,KAArB;AACAa,QAAAA,KAAK,CAACf,KAAN,CAAYE,IAAZ,GAAmB,IAAnB;AACD,OAHa,CAAd;;AAIF,SAAKL,WAAW,CAACyB,eAAjB;AACE,aAAO7B,OAAO,CAACkB,KAAD,EAAQI,KAAK,IAAI;AAC7BA,QAAAA,KAAK,CAAChB,OAAN,CAAcG,IAAd,GAAqB,KAArB;AACAa,QAAAA,KAAK,CAACf,KAAN,CAAYE,IAAZ,GAAmB,KAAnB;AACD,OAHa,CAAd;;AAIF,SAAKL,WAAW,CAAC0B,yBAAjB;AACE,aAAO9B,OAAO,CAACkB,KAAD,EAAQI,KAAK,IAAI;AAC7BA,QAAAA,KAAK,CAAChB,OAAN,CAAcyB,WAAd,GAA4B,IAA5B;AACAT,QAAAA,KAAK,CAACf,KAAN,CAAYwB,WAAZ,GAA0B,KAA1B;AACD,OAHa,CAAd;;AAIA,SAAK3B,WAAW,CAAC4B,yBAAjB;AACE,aAAOhC,OAAO,CAACkB,KAAD,EAAQI,KAAK,IAAI;AAC/BA,QAAAA,KAAK,CAAChB,OAAN,CAAcyB,WAAd,GAA4B,KAA5B;AACAT,QAAAA,KAAK,CAACf,KAAN,CAAYwB,WAAZ,GAA0B,KAA1B;AACAT,QAAAA,KAAK,CAACZ,QAAN,GAAiBS,MAAM,CAACT,QAAxB;AACD,OAJe,CAAd;;AAKJ,SAAKN,WAAW,CAAC6B,uBAAjB;AACE,aAAOjC,OAAO,CAACkB,KAAD,EAAQI,KAAK,IAAI;AAC7BA,QAAAA,KAAK,CAAChB,OAAN,CAAcyB,WAAd,GAA4B,KAA5B;AACAT,QAAAA,KAAK,CAACf,KAAN,CAAYwB,WAAZ,GAA0B,IAA1B;AACD,OAHa,CAAd;;AAIF,SAAK3B,WAAW,CAAC8B,2BAAjB;AACE,aAAOlC,OAAO,CAACkB,KAAD,EAAQI,KAAK,IAAI;AAC7B,YAAGJ,KAAK,CAACP,YAAN,CAAmBwB,GAAnB,CAAuBhB,MAAM,CAACiB,OAAP,CAAeC,EAAtC,CAAH,EAA6C;AAC3C,gBAAMC,eAAe,GAAGpB,KAAK,CAACP,YAAN,CAAmB4B,GAAnB,CAAuBpB,MAAM,CAACiB,OAAP,CAAeC,EAAtC,CAAxB;AACAf,UAAAA,KAAK,CAACX,YAAN,CAAmB6B,GAAnB,CAAuBrB,MAAM,CAACiB,OAAP,CAAeC,EAAtC,EAA0C,EAAC,GAAGC,eAAJ;AAAqBG,YAAAA,QAAQ,EAAEH,eAAe,CAACG,QAAhB,GAA2B;AAA1D,WAA1C;AACD,SAHD,MAGO;AACLnB,UAAAA,KAAK,CAACX,YAAN,CAAmB6B,GAAnB,CAAuBrB,MAAM,CAACiB,OAAP,CAAeC,EAAtC,EAA0ClB,MAAM,CAACiB,OAAjD;AACD;AACF,OAPa,CAAd;;AAQF,SAAKhC,WAAW,CAACsC,+BAAjB;AACE,aAAO1C,OAAO,CAACkB,KAAD,EAAQI,KAAK,IAAI;AAC7B,YAAGJ,KAAK,CAACP,YAAN,CAAmBwB,GAAnB,CAAuBhB,MAAM,CAACkB,EAA9B,CAAH,EAAqC;AACnC,gBAAMC,eAAe,GAAGpB,KAAK,CAACP,YAAN,CAAmB4B,GAAnB,CAAuBpB,MAAM,CAACkB,EAA9B,CAAxB;AACAf,UAAAA,KAAK,CAACX,YAAN,CAAmBgC,MAAnB,CAA0BxB,MAAM,CAACkB,EAAjC;AACD;AACF,OALa,CAAd;;AAMF,SAAKjC,WAAW,CAACwC,4BAAjB;AACE,aAAO5C,OAAO,CAACkB,KAAD,EAAQI,KAAK,IAAI;AAC7BA,QAAAA,KAAK,CAAChB,OAAN,CAAcuC,kBAAd,GAAmC,IAAnC;AACAvB,QAAAA,KAAK,CAACf,KAAN,CAAYsC,kBAAZ,GAAiC,KAAjC;AACAvB,QAAAA,KAAK,CAACd,OAAN,CAAcqC,kBAAd,GAAmC,KAAnC;AACD,OAJa,CAAd;;AAKF,SAAKzC,WAAW,CAAC0C,4BAAjB;AACE,aAAO9C,OAAO,CAACkB,KAAD,EAAQI,KAAK,IAAI;AAC7BA,QAAAA,KAAK,CAAChB,OAAN,CAAcuC,kBAAd,GAAmC,KAAnC;AACAvB,QAAAA,KAAK,CAACf,KAAN,CAAYsC,kBAAZ,GAAiC,KAAjC;AACAvB,QAAAA,KAAK,CAACd,OAAN,CAAcqC,kBAAd,GAAmC,IAAnC;AACAvB,QAAAA,KAAK,CAACX,YAAN,GAAqB,IAAIC,GAAJ,EAArB;AACD,OALa,CAAd;;AAMF,SAAKR,WAAW,CAAC2C,0BAAjB;AACE,aAAO/C,OAAO,CAACkB,KAAD,EAAQI,KAAK,IAAI;AAC7BA,QAAAA,KAAK,CAAChB,OAAN,CAAcuC,kBAAd,GAAmC,KAAnC;AACAvB,QAAAA,KAAK,CAACf,KAAN,CAAYsC,kBAAZ,GAAiC,IAAjC;AACAvB,QAAAA,KAAK,CAACd,OAAN,CAAcqC,kBAAd,GAAmC,KAAnC;AACD,OAJa,CAAd;;AAKF,SAAKzC,WAAW,CAAC4C,8BAAjB;AACE,aAAOhD,OAAO,CAACkB,KAAD,EAAQI,KAAK,IAAI;AAC7BA,QAAAA,KAAK,CAAChB,OAAN,CAAcuC,kBAAd,GAAmC,KAAnC;AACAvB,QAAAA,KAAK,CAACf,KAAN,CAAYsC,kBAAZ,GAAiC,KAAjC;AACAvB,QAAAA,KAAK,CAACd,OAAN,CAAcqC,kBAAd,GAAmC,KAAnC;AACD,OAJa,CAAd;;AAKF,SAAKzC,WAAW,CAAC6C,6BAAjB;AACE,aAAOjD,OAAO,CAACkB,KAAD,EAAQI,KAAK,IAAI;AAC7BA,QAAAA,KAAK,CAACX,YAAN,GAAqB,IAAIC,GAAJ,EAArB;AACAU,QAAAA,KAAK,CAACT,UAAN,GAAmB,EAAnB;AACD,OAHa,CAAd;;AAIF,SAAKT,WAAW,CAAC8C,yBAAjB;AACE,aAAOlD,OAAO,CAACkB,KAAD,EAAQI,KAAK,IAAI;AAC7BA,QAAAA,KAAK,CAACT,UAAN,GAAmB,EAAnB;AACAK,QAAAA,KAAK,CAACL,UAAN,CAAiBsC,OAAjB,CAA0BC,KAAD,IAAW;AAClC,cAAGA,KAAK,CAACC,OAAN,KAAkBlC,MAAM,CAACkC,OAA5B,EAAqC;AACnC/B,YAAAA,KAAK,CAACT,UAAN,CAAiByC,IAAjB,CAAsBF,KAAtB;AACD;AACF,SAJD;AAKD,OAPa,CAAd;;AAQF,SAAKhD,WAAW,CAACmD,oBAAjB;AACE,aAAOvD,OAAO,CAACkB,KAAD,EAAQI,KAAK,IAAI;AAC7BA,QAAAA,KAAK,CAAChB,OAAN,CAAckD,MAAd,GAAuB,IAAvB;AACD,OAFa,CAAd;;AAGF,SAAKpD,WAAW,CAACqD,oBAAjB;AACE,aAAOzD,OAAO,CAACkB,KAAD,EAAQI,KAAK,IAAI;AAC7BA,QAAAA,KAAK,CAAChB,OAAN,CAAckD,MAAd,GAAuB,KAAvB;AACAlC,QAAAA,KAAK,CAACd,OAAN,CAAcgD,MAAd,GAAuB,IAAvB;AACD,OAHa,CAAd;;AAIF,SAAKpD,WAAW,CAACsD,kBAAjB;AACE,aAAO1D,OAAO,CAACkB,KAAD,EAAQI,KAAK,IAAI;AAC7BA,QAAAA,KAAK,CAAChB,OAAN,CAAckD,MAAd,GAAuB,KAAvB;AACAlC,QAAAA,KAAK,CAACf,KAAN,CAAYiD,MAAZ,GAAqB,IAArB;AACD,OAHa,CAAd;;AAIF,SAAKpD,WAAW,CAACuD,kBAAjB;AACE,aAAO3D,OAAO,CAACkB,KAAD,EAAQI,KAAK,IAAI;AAC7BA,QAAAA,KAAK,CAAChB,OAAN,CAAckD,MAAd,GAAuB,KAAvB;AACAlC,QAAAA,KAAK,CAACf,KAAN,CAAYiD,MAAZ,GAAqB,KAArB;AACAlC,QAAAA,KAAK,CAACd,OAAN,CAAcgD,MAAd,GAAuB,KAAvB;AACD,OAJa,CAAd;;AAKF,SAAKpD,WAAW,CAACwD,qBAAjB;AACE,aAAO5D,OAAO,CAACkB,KAAD,EAAQI,KAAK,IAAI;AAC7BA,QAAAA,KAAK,CAAChB,OAAN,CAAcuD,YAAd,GAA6B,IAA7B;AACD,OAFa,CAAd;;AAGF,SAAKzD,WAAW,CAAC0D,qBAAjB;AACE,aAAO9D,OAAO,CAACkB,KAAD,EAAQI,KAAK,IAAI;AAC7BA,QAAAA,KAAK,CAAChB,OAAN,CAAcuD,YAAd,GAA6B,KAA7B;AACAvC,QAAAA,KAAK,CAACd,OAAN,CAAcqD,YAAd,GAA6B,IAA7B;AACD,OAHa,CAAd;;AAIF,SAAKzD,WAAW,CAAC2D,mBAAjB;AACE,aAAO/D,OAAO,CAACkB,KAAD,EAAQI,KAAK,IAAI;AAC7BA,QAAAA,KAAK,CAAChB,OAAN,CAAcuD,YAAd,GAA6B,KAA7B;AACAvC,QAAAA,KAAK,CAACf,KAAN,CAAYsD,YAAZ,GAA2B,IAA3B;AACD,OAHa,CAAd;;AAIF,SAAKzD,WAAW,CAAC4D,wBAAjB;AACE,aAAOhE,OAAO,CAACkB,KAAD,EAAQI,KAAK,IAAI;AAC7BA,QAAAA,KAAK,CAAChB,OAAN,CAAc2D,eAAd,GAAgC,IAAhC;AACD,OAFa,CAAd;;AAGF,SAAK7D,WAAW,CAAC8D,wBAAjB;AACE,aAAOlE,OAAO,CAACkB,KAAD,EAAQI,KAAK,IAAI;AAC7BA,QAAAA,KAAK,CAAChB,OAAN,CAAc2D,eAAd,GAAgC,KAAhC;AACA3C,QAAAA,KAAK,CAACd,OAAN,CAAcyD,eAAd,GAAgC,IAAhC;AACD,OAHa,CAAd;;AAIF,SAAK7D,WAAW,CAAC+D,sBAAjB;AACE,aAAOnE,OAAO,CAACkB,KAAD,EAAQI,KAAK,IAAI;AAC7BA,QAAAA,KAAK,CAAChB,OAAN,CAAc2D,eAAd,GAAgC,KAAhC;AACA3C,QAAAA,KAAK,CAACf,KAAN,CAAY0D,eAAZ,GAA8B,IAA9B;AACD,OAHa,CAAd;;AAIF,SAAK7D,WAAW,CAACgE,eAAjB;AACE,aAAOpE,OAAO,CAACkB,KAAD,EAAQI,KAAK,IAAI;AAC7BA,QAAAA,KAAK,CAAChB,OAAN,CAAc2D,eAAd,GAAgC,KAAhC;AACA3C,QAAAA,KAAK,CAACd,OAAN,CAAcyD,eAAd,GAAgC,KAAhC;AACA3C,QAAAA,KAAK,CAACf,KAAN,CAAY0D,eAAZ,GAA8B,KAA9B;AACA3C,QAAAA,KAAK,CAAChB,OAAN,CAAcuD,YAAd,GAA6B,KAA7B;AACAvC,QAAAA,KAAK,CAACd,OAAN,CAAcqD,YAAd,GAA6B,KAA7B;AACAvC,QAAAA,KAAK,CAACf,KAAN,CAAYsD,YAAZ,GAA2B,KAA3B;AACAvC,QAAAA,KAAK,CAAChB,OAAN,CAAc+D,aAAd,GAA8B,KAA9B;AACA/C,QAAAA,KAAK,CAACf,KAAN,CAAY8D,aAAZ,GAA4B,KAA5B;AACA/C,QAAAA,KAAK,CAACd,OAAN,CAAc6D,aAAd,GAA8B,KAA9B;AACD,OAVa,CAAd;;AAWF,SAAKjE,WAAW,CAACkE,oBAAjB;AACE,aAAOtE,OAAO,CAACkB,KAAD,EAAQI,KAAK,IAAI;AAC7BA,QAAAA,KAAK,CAACT,UAAN,CAAiByC,IAAjB,CAAsBnC,MAAM,CAACoD,SAA7B;AACD,OAFa,CAAd;;AAGF,SAAKnE,WAAW,CAACoE,yBAAjB;AACE,aAAOxE,OAAO,CAACkB,KAAD,EAAQI,KAAK,IAAI;AAC7BA,QAAAA,KAAK,CAACf,KAAN,CAAYkE,eAAZ,GAA8B,KAA9B;AACAnD,QAAAA,KAAK,CAACd,OAAN,CAAciE,eAAd,GAAgC,KAAhC;AACAnD,QAAAA,KAAK,CAAChB,OAAN,CAAcmE,eAAd,GAAgC,IAAhC;AACD,OAJa,CAAd;;AAKF,SAAKrE,WAAW,CAACsE,yBAAjB;AACE,aAAO1E,OAAO,CAACkB,KAAD,EAAQI,KAAK,IAAI;AAC7BA,QAAAA,KAAK,CAACf,KAAN,CAAYkE,eAAZ,GAA8B,KAA9B;AACAnD,QAAAA,KAAK,CAACd,OAAN,CAAciE,eAAd,GAAgC,IAAhC;AACAnD,QAAAA,KAAK,CAAChB,OAAN,CAAcmE,eAAd,GAAgC,KAAhC;AACAnD,QAAAA,KAAK,CAACT,UAAN,GAAmB,EAAnB;AACD,OALa,CAAd;;AAMF,SAAKT,WAAW,CAACuE,uBAAjB;AACE,aAAO3E,OAAO,CAACkB,KAAD,EAAQI,KAAK,IAAI;AAC7BA,QAAAA,KAAK,CAACf,KAAN,CAAYkE,eAAZ,GAA8B,IAA9B;AACAnD,QAAAA,KAAK,CAACd,OAAN,CAAciE,eAAd,GAAgC,KAAhC;AACAnD,QAAAA,KAAK,CAAChB,OAAN,CAAcmE,eAAd,GAAgC,KAAhC;AACD,OAJa,CAAd;;AAKF,SAAKrE,WAAW,CAACwE,uBAAjB;AACE,aAAO5E,OAAO,CAACkB,KAAD,EAAQI,KAAK,IAAI;AAC7BA,QAAAA,KAAK,CAACf,KAAN,CAAYsE,aAAZ,GAA4B,KAA5B;AACAvD,QAAAA,KAAK,CAACd,OAAN,CAAcqE,aAAd,GAA8B,KAA9B;AACAvD,QAAAA,KAAK,CAAChB,OAAN,CAAcuE,aAAd,GAA8B,IAA9B;AACD,OAJa,CAAd;;AAKF,SAAKzE,WAAW,CAAC0E,uBAAjB;AACE,aAAO9E,OAAO,CAACkB,KAAD,EAAQI,KAAK,IAAI;AAC7BA,QAAAA,KAAK,CAACf,KAAN,CAAYsE,aAAZ,GAA4B,KAA5B;AACAvD,QAAAA,KAAK,CAACd,OAAN,CAAcqE,aAAd,GAA8B,IAA9B;AACAvD,QAAAA,KAAK,CAAChB,OAAN,CAAcuE,aAAd,GAA8B,KAA9B;AACAvD,QAAAA,KAAK,CAACN,MAAN,GAAeG,MAAM,CAAC4D,cAAtB;AACAzD,QAAAA,KAAK,CAACR,cAAN,GAAuBK,MAAM,CAACN,UAA9B;AACD,OANa,CAAd;;AAOF,SAAKT,WAAW,CAAC4E,qBAAjB;AACE,aAAOhF,OAAO,CAACkB,KAAD,EAAQI,KAAK,IAAI;AAC7BA,QAAAA,KAAK,CAACf,KAAN,CAAYsE,aAAZ,GAA4B,IAA5B;AACAvD,QAAAA,KAAK,CAACd,OAAN,CAAcqE,aAAd,GAA8B,KAA9B;AACAvD,QAAAA,KAAK,CAAChB,OAAN,CAAcuE,aAAd,GAA8B,KAA9B;AACD,OAJa,CAAd;;AAKF,SAAKzE,WAAW,CAAC6E,sBAAjB;AACE,aAAOjF,OAAO,CAACkB,KAAD,EAAQI,KAAK,IAAI;AAC7BA,QAAAA,KAAK,CAAChB,OAAN,CAAc+D,aAAd,GAA8B,IAA9B;AACH,OAFe,CAAd;;AAGF,SAAKjE,WAAW,CAAC8E,sBAAjB;AACE,aAAOlF,OAAO,CAACkB,KAAD,EAAQI,KAAK,IAAI;AAC7BA,QAAAA,KAAK,CAAChB,OAAN,CAAc+D,aAAd,GAA8B,KAA9B;AACA/C,QAAAA,KAAK,CAACd,OAAN,CAAc6D,aAAd,GAA8B,IAA9B;AACH,OAHe,CAAd;;AAIF,SAAKjE,WAAW,CAAC+E,oBAAjB;AACE,aAAOnF,OAAO,CAACkB,KAAD,EAAQI,KAAK,IAAI;AAC7BA,QAAAA,KAAK,CAAChB,OAAN,CAAc+D,aAAd,GAA8B,KAA9B;AACA/C,QAAAA,KAAK,CAACf,KAAN,CAAY8D,aAAZ,GAA4B,IAA5B;AACH,OAHe,CAAd;;AAIF,SAAKjE,WAAW,CAACgF,iBAAjB;AACE,aAAOpF,OAAO,CAACkB,KAAD,EAAQI,KAAK,IAAI;AAC7BA,QAAAA,KAAK,CAAChB,OAAN,CAAc+E,QAAd,GAAyB,IAAzB;AACA/D,QAAAA,KAAK,CAACd,OAAN,CAAc6E,QAAd,GAAyB,KAAzB;AACA/D,QAAAA,KAAK,CAACf,KAAN,CAAY8E,QAAZ,GAAuB,KAAvB;AACD,OAJa,CAAd;;AAKF,SAAKjF,WAAW,CAACkF,iBAAjB;AACE,aAAOtF,OAAO,CAACkB,KAAD,EAAQI,KAAK,IAAI;AAC7BA,QAAAA,KAAK,CAAChB,OAAN,CAAc+E,QAAd,GAAyB,KAAzB;AACA/D,QAAAA,KAAK,CAACd,OAAN,CAAc6E,QAAd,GAAyB,IAAzB;AACD,OAHa,CAAd;;AAIF,SAAKjF,WAAW,CAACmF,eAAjB;AACE,aAAOvF,OAAO,CAACkB,KAAD,EAAQI,KAAK,IAAI;AAC7BA,QAAAA,KAAK,CAAChB,OAAN,CAAc+E,QAAd,GAAyB,KAAzB;AACA/D,QAAAA,KAAK,CAACf,KAAN,CAAY8E,QAAZ,GAAuB,IAAvB;AACD,OAHa,CAAd;;AAIF,SAAKjF,WAAW,CAACoF,6BAAjB;AACE,aAAOxF,OAAO,CAACkB,KAAD,EAAQI,KAAK,IAAI;AAC7B,YAAGJ,KAAK,CAACP,YAAN,CAAmBwB,GAAnB,CAAuBhB,MAAM,CAACkB,EAA9B,CAAH,EAAqC;AACnC,gBAAMC,eAAe,GAAGpB,KAAK,CAACP,YAAN,CAAmB4B,GAAnB,CAAuBpB,MAAM,CAACkB,EAA9B,CAAxB;;AACA,cAAGC,eAAe,CAACG,QAAhB,KAA6B,CAAhC,EAAkC;AAChCnB,YAAAA,KAAK,CAACX,YAAN,CAAmBgC,MAAnB,CAA0BxB,MAAM,CAACkB,EAAjC;AACD,WAFD,MAEM,IAAGC,eAAe,CAACG,QAAhB,GAA2B,CAA9B,EAAgC;AACpCnB,YAAAA,KAAK,CAACX,YAAN,CAAmB6B,GAAnB,CAAuBrB,MAAM,CAACkB,EAA9B,EAAkC,EAAC,GAAGC,eAAJ;AAAqBG,cAAAA,QAAQ,EAAEH,eAAe,CAACG,QAAhB,GAA2B;AAA1D,aAAlC;AACD;AACF;AACF,OATa,CAAd;;AAUF,SAAKrC,WAAW,CAACqF,4BAAjB;AACE,aAAOzF,OAAO,CAACkB,KAAD,EAAQI,KAAK,IAAI;AAC7BJ,QAAAA,KAAK,CAACR,QAAN,CAAeyC,OAAf,CAAuBf,OAAO,IAAI;AAChC,cAAGlB,KAAK,CAACP,YAAN,CAAmBwB,GAAnB,CAAuBhB,MAAM,CAACkB,EAA9B,CAAH,EAAqC;AACnC,kBAAMC,eAAe,GAAGpB,KAAK,CAACP,YAAN,CAAmB4B,GAAnB,CAAuBpB,MAAM,CAACkB,EAA9B,CAAxB;;AACA,gBAAGD,OAAO,CAACC,EAAR,KAAelB,MAAM,CAACkB,EAAtB,IAA4BD,OAAO,CAACK,QAAR,GAAmBH,eAAe,CAACG,QAAnC,GAA8C,CAA7E,EAA+E;AAC7EnB,cAAAA,KAAK,CAACX,YAAN,CAAmB6B,GAAnB,CAAuBrB,MAAM,CAACkB,EAA9B,EAAkC,EAAC,GAAGC,eAAJ;AAAqBG,gBAAAA,QAAQ,EAAEH,eAAe,CAACG,QAAhB,GAA2B;AAA1D,eAAlC;AACD;AACF;AACF,SAPD;AAQD,OATa,CAAd;;AAUF,SAAKrC,WAAW,CAACsF,iBAAjB;AACE,aAAO1F,OAAO,CAACkB,KAAD,EAAQI,KAAK,IAAI;AAC7BA,QAAAA,KAAK,CAAChB,OAAN,CAAcqF,QAAd,GAAyB,IAAzB;AACD,OAFa,CAAd;;AAGF,SAAKvF,WAAW,CAACwF,iBAAjB;AACE,aAAO5F,OAAO,CAACkB,KAAD,EAAQI,KAAK,IAAI;AAC7BA,QAAAA,KAAK,CAAChB,OAAN,CAAcqF,QAAd,GAAyB,KAAzB;AACArE,QAAAA,KAAK,CAACd,OAAN,CAAcmF,QAAd,GAAyB,IAAzB;AACD,OAHa,CAAd;;AAIF,SAAKvF,WAAW,CAACyF,eAAjB;AACE,aAAO7F,OAAO,CAACkB,KAAD,EAAQI,KAAK,IAAI;AAC7BA,QAAAA,KAAK,CAAChB,OAAN,CAAcqF,QAAd,GAAyB,KAAzB;AACArE,QAAAA,KAAK,CAACf,KAAN,CAAYoF,QAAZ,GAAuB,IAAvB;AACD,OAHa,CAAd;;AAIF,SAAKvF,WAAW,CAAC0F,eAAjB;AACE,aAAO9F,OAAO,CAACkB,KAAD,EAAQI,KAAK,IAAI;AAC7BA,QAAAA,KAAK,CAAChB,OAAN,CAAcqF,QAAd,GAAyB,KAAzB;AACArE,QAAAA,KAAK,CAACd,OAAN,CAAcmF,QAAd,GAAyB,KAAzB;AACArE,QAAAA,KAAK,CAACf,KAAN,CAAYoF,QAAZ,GAAuB,KAAvB;AACD,OAJa,CAAd;;AAKF,SAAKvF,WAAW,CAAC2F,mBAAjB;AACE,aAAO/F,OAAO,CAACkB,KAAD,EAAQI,KAAK,IAAI;AAC7BA,QAAAA,KAAK,CAAChB,OAAN,CAAc0F,UAAd,GAA2B,IAA3B;AACD,OAFa,CAAd;;AAGF,SAAK5F,WAAW,CAAC6F,mBAAjB;AACE,aAAOjG,OAAO,CAACkB,KAAD,EAAQI,KAAK,IAAI;AAC7BA,QAAAA,KAAK,CAAChB,OAAN,CAAc0F,UAAd,GAA2B,KAA3B;AACA1E,QAAAA,KAAK,CAACd,OAAN,CAAcwF,UAAd,GAA2B,IAA3B;AACD,OAHa,CAAd;;AAIF,SAAK5F,WAAW,CAAC8F,iBAAjB;AACE,aAAOlG,OAAO,CAACkB,KAAD,EAAQI,KAAK,IAAI;AAC7BA,QAAAA,KAAK,CAAChB,OAAN,CAAc0F,UAAd,GAA2B,KAA3B;AACA1E,QAAAA,KAAK,CAACf,KAAN,CAAYyF,UAAZ,GAAyB,IAAzB;AACD,OAHa,CAAd;;AAIF,SAAK5F,WAAW,CAAC+F,iBAAjB;AACE,aAAOnG,OAAO,CAACkB,KAAD,EAAQI,KAAK,IAAI;AAC7BA,QAAAA,KAAK,CAAChB,OAAN,CAAc0F,UAAd,GAA2B,KAA3B;AACA1E,QAAAA,KAAK,CAACf,KAAN,CAAYyF,UAAZ,GAAyB,KAAzB;AACA1E,QAAAA,KAAK,CAACd,OAAN,CAAcwF,UAAd,GAA2B,KAA3B;AACD,OAJa,CAAd;;AAKF,SAAK5F,WAAW,CAACgG,eAAjB;AACE,aAAOpG,OAAO,CAACkB,KAAD,EAAQI,KAAK,IAAI;AAC7BE,QAAAA,YAAY,CAAC6E,UAAb,CAAwB,kBAAxB;AACA7E,QAAAA,YAAY,CAAC6E,UAAb,CAAwB,qBAAxB;AACA/E,QAAAA,KAAK,CAAChB,OAAN,CAAcG,IAAd,GAAqB,KAArB;AACAa,QAAAA,KAAK,CAACf,KAAN,CAAYE,IAAZ,GAAmB,KAAnB;AACAa,QAAAA,KAAK,CAACb,IAAN,GAAa,IAAb;AACD,OANa,CAAd;;AAOF;AACE,aAAOS,KAAP;AA1SJ;AA4SD,CA/SD;;AAiTA,eAAeD,OAAf","sourcesContent":["import produce, { enableMapSet } from 'immer';\nimport { mockedUsers } from '../mock-objects/usersList';\nimport { ApplicationState, initialPossibleState } from './types';\nimport { ApplicationAction } from './actions';\nimport { ActionTypes } from './actionTypes';\n\nexport const initialState: ApplicationState = {\n  loading: initialPossibleState,\n  error: initialPossibleState,\n  success: initialPossibleState,\n  user: null,\n  products: [],\n  cartProducts: new Map(),\n  rentOrders: [],\n  rentedProducts: [],\n  usersList: mockedUsers,\n  orders: [],\n}\n\nconst reducer = (state = initialState, action: ApplicationAction) => {\n  enableMapSet();\n  \n  switch (action.type) {\n    case ActionTypes.LOAD_USER_REQUEST:\n      return produce(state, draft => {\n        draft.loading.user = true;\n      });\n    case ActionTypes.LOAD_USER_SUCCESS:\n      return produce(state, draft => {\n      draft.loading.user = false;\n      draft.error.user = false;\n      localStorage.setItem('@plantshop/email', action.user.email);\n      localStorage.setItem('@plantshop/password', action.user.password);\n      draft.user = action.user;\n    });\n    case ActionTypes.LOAD_USER_ERROR:\n      return produce(state, draft => {\n        draft.loading.user = false;\n        draft.error.user = true;\n      });\n    case ActionTypes.LOAD_USER_RESET:\n      return produce(state, draft => {\n        draft.loading.user = false;\n        draft.error.user = false;\n      });\n    case ActionTypes.LOAD_ALL_PRODUCTS_REQUEST:\n      return produce(state, draft => {\n        draft.loading.allProducts = true;\n        draft.error.allProducts = false;\n      });\n      case ActionTypes.LOAD_ALL_PRODUCTS_SUCCESS:\n        return produce(state, draft => {\n        draft.loading.allProducts = false;\n        draft.error.allProducts = false;\n        draft.products = action.products;\n      });\n    case ActionTypes.LOAD_ALL_PRODUCTS_ERROR:\n      return produce(state, draft => {\n        draft.loading.allProducts = false;\n        draft.error.allProducts = true;\n      });\n    case ActionTypes.ADD_PRODUCT_TO_CART_REQUEST:\n      return produce(state, draft => {\n        if(state.cartProducts.has(action.product.id)){\n          const selectedProduct = state.cartProducts.get(action.product.id)!;\n          draft.cartProducts.set(action.product.id, {...selectedProduct, quantity: selectedProduct.quantity + 1})\n        } else {\n          draft.cartProducts.set(action.product.id, action.product);\n        }\n      });\n    case ActionTypes.REMOVE_PRODUCT_FROM_CART_RQUEST:\n      return produce(state, draft => {\n        if(state.cartProducts.has(action.id)){\n          const selectedProduct = state.cartProducts.get(action.id)!;\n          draft.cartProducts.delete(action.id);          \n        }\n      });\n    case ActionTypes.PLACE_PURCHASE_ORDER_REQUEST:\n      return produce(state, draft => {\n        draft.loading.placePurchaseOrder = true;\n        draft.error.placePurchaseOrder = false;\n        draft.success.placePurchaseOrder = false;\n      });\n    case ActionTypes.PLACE_PURCHASE_ORDER_SUCCESS:\n      return produce(state, draft => {\n        draft.loading.placePurchaseOrder = false;\n        draft.error.placePurchaseOrder = false;\n        draft.success.placePurchaseOrder = true;\n        draft.cartProducts = new Map();\n      });\n    case ActionTypes.PLACE_PURCHASE_ORDER_ERROR:\n      return produce(state, draft => {\n        draft.loading.placePurchaseOrder = false;\n        draft.error.placePurchaseOrder = true;\n        draft.success.placePurchaseOrder = false;\n      });\n    case ActionTypes.PLACE_PURCHASE_ORDER_NOT_ASKED:\n      return produce(state, draft => {\n        draft.loading.placePurchaseOrder = false;\n        draft.error.placePurchaseOrder = false;\n        draft.success.placePurchaseOrder = false;\n      });\n    case ActionTypes.CLEAR_PRODUCT_IN_CART_REQUEST:\n      return produce(state, draft => {\n        draft.cartProducts = new Map();\n        draft.rentOrders = [];\n      });\n    case ActionTypes.REMOVE_RENT_ORDER_REQUEST:\n      return produce(state, draft => {\n        draft.rentOrders = [];\n        state.rentOrders.forEach((order) => {\n          if(order.orderId !== action.orderId) {\n            draft.rentOrders.push(order);\n          }\n        });\n      });\n    case ActionTypes.SIGN_UP_USER_REQUEST:\n      return produce(state, draft => {\n        draft.loading.signUp = true;\n      });\n    case ActionTypes.SIGN_UP_USER_SUCCESS:\n      return produce(state, draft => {\n        draft.loading.signUp = false;\n        draft.success.signUp = true; \n      });\n    case ActionTypes.SIGN_UP_USER_ERROR:\n      return produce(state, draft => {\n        draft.loading.signUp = false;\n        draft.error.signUp = true;\n      });\n    case ActionTypes.SIGN_UP_USER_RESET:\n      return produce(state, draft => {\n        draft.loading.signUp = false;\n        draft.error.signUp = false;\n        draft.success.signUp = false;\n      });\n    case ActionTypes.ADD_INVENTORY_REQUEST:\n      return produce(state, draft => {\n        draft.loading.addInventory = true;\n      });\n    case ActionTypes.ADD_INVENTORY_SUCCESS:\n      return produce(state, draft => {\n        draft.loading.addInventory = false;\n        draft.success.addInventory = true;\n      });\n    case ActionTypes.ADD_INVENTORY_ERROR:\n      return produce(state, draft => {\n        draft.loading.addInventory = false;\n        draft.error.addInventory = true;\n      });\n    case ActionTypes.REMOVE_INVENTORY_REQUEST:\n      return produce(state, draft => {\n        draft.loading.removeInventory = true;\n      });\n    case ActionTypes.REMOVE_INVENTORY_SUCCESS:\n      return produce(state, draft => {\n        draft.loading.removeInventory = false;\n        draft.success.removeInventory = true;\n      });\n    case ActionTypes.REMOVE_INVENTORY_ERROR:\n      return produce(state, draft => {\n        draft.loading.removeInventory = false;\n        draft.error.removeInventory = true;\n      });\n    case ActionTypes.INVENTORY_RESET:\n      return produce(state, draft => {\n        draft.loading.removeInventory = false;\n        draft.success.removeInventory = false;\n        draft.error.removeInventory = false;\n        draft.loading.addInventory = false;\n        draft.success.addInventory = false;\n        draft.error.addInventory = false;\n        draft.loading.removeProduct = false;\n        draft.error.removeProduct = false;\n        draft.success.removeProduct = false;\n      }); \n    case ActionTypes.RENT_PRODUCT_REQUEST:\n      return produce(state, draft => {\n        draft.rentOrders.push(action.rentOrder);\n      });\n    case ActionTypes.PLACE_RENT_ORDERS_REQUEST:\n      return produce(state, draft => {\n        draft.error.placeRentOrders = false;\n        draft.success.placeRentOrders = false;\n        draft.loading.placeRentOrders = true;\n      });\n    case ActionTypes.PLACE_RENT_ORDERS_SUCCESS:\n      return produce(state, draft => {\n        draft.error.placeRentOrders = false;\n        draft.success.placeRentOrders = true;\n        draft.loading.placeRentOrders = false;\n        draft.rentOrders = [];\n      });\n    case ActionTypes.PLACE_RENT_ORDERS_ERROR:\n      return produce(state, draft => {\n        draft.error.placeRentOrders = true;\n        draft.success.placeRentOrders = false;\n        draft.loading.placeRentOrders = false;\n      });\n    case ActionTypes.LOAD_ALL_ORDERS_REQUEST:\n      return produce(state, draft => {\n        draft.error.loadAllOrders = false;\n        draft.success.loadAllOrders = false;\n        draft.loading.loadAllOrders = true;\n      });\n    case ActionTypes.LOAD_ALL_ORDERS_SUCCESS:\n      return produce(state, draft => {\n        draft.error.loadAllOrders = false;\n        draft.success.loadAllOrders = true;\n        draft.loading.loadAllOrders = false;\n        draft.orders = action.purchaseOrders;\n        draft.rentedProducts = action.rentOrders;\n      });\n    case ActionTypes.LOAD_ALL_ORDERS_ERROR:\n      return produce(state, draft => {\n        draft.error.loadAllOrders = true;\n        draft.success.loadAllOrders = false;\n        draft.loading.loadAllOrders = false;\n      });\n    case ActionTypes.REMOVE_PRODUCT_REQUEST:\n      return produce(state, draft => {\n        draft.loading.removeProduct = true;\n    }); \n    case ActionTypes.REMOVE_PRODUCT_SUCCESS:\n      return produce(state, draft => {\n        draft.loading.removeProduct = false;\n        draft.success.removeProduct = true;\n    }); \n    case ActionTypes.REMOVE_PRODUCT_ERROR:\n      return produce(state, draft => {\n        draft.loading.removeProduct = false;\n        draft.error.removeProduct = true;\n    }); \n    case ActionTypes.EDIT_USER_REQUEST:\n      return produce(state, draft => {\n        draft.loading.editUser = true;\n        draft.success.editUser = false;\n        draft.error.editUser = false;\n      });\n    case ActionTypes.EDIT_USER_SUCCESS:\n      return produce(state, draft => {\n        draft.loading.editUser = false;\n        draft.success.editUser = true;\n      });\n    case ActionTypes.EDIT_USER_ERROR:\n      return produce(state, draft => {\n        draft.loading.editUser = false;\n        draft.error.editUser = true;\n      });\n    case ActionTypes.MINUS_PRODUCT_IN_CART_REQUEST:\n      return produce(state, draft => {\n        if(state.cartProducts.has(action.id)){\n          const selectedProduct = state.cartProducts.get(action.id)!;\n          if(selectedProduct.quantity === 1){\n            draft.cartProducts.delete(action.id);\n          }else if(selectedProduct.quantity > 1){\n            draft.cartProducts.set(action.id, {...selectedProduct, quantity: selectedProduct.quantity - 1})\n          }\n        }\n      });\n    case ActionTypes.PLUS_PRODUCT_IN_CART_REQUEST:\n      return produce(state, draft => {\n        state.products.forEach(product => {\n          if(state.cartProducts.has(action.id)){\n            const selectedProduct = state.cartProducts.get(action.id)!;\n            if(product.id === action.id && product.quantity - selectedProduct.quantity > 0){\n              draft.cartProducts.set(action.id, {...selectedProduct, quantity: selectedProduct.quantity + 1})\n            }\n          }\n        });\n      });\n    case ActionTypes.ADD_ADMIN_REQUEST:\n      return produce(state, draft => {\n        draft.loading.addAdmin = true;\n      });\n    case ActionTypes.ADD_ADMIN_SUCCESS:\n      return produce(state, draft => {\n        draft.loading.addAdmin = false;\n        draft.success.addAdmin = true;\n      });\n    case ActionTypes.ADD_ADMIN_ERROR:\n      return produce(state, draft => {\n        draft.loading.addAdmin = false;\n        draft.error.addAdmin = true;\n      });\n    case ActionTypes.ADD_ADMIN_RESET:\n      return produce(state, draft => {\n        draft.loading.addAdmin = false;\n        draft.success.addAdmin = false;\n        draft.error.addAdmin = false;\n      });\n    case ActionTypes.ADD_PRODUCT_REQUEST:\n      return produce(state, draft => {\n        draft.loading.addProduct = true;\n      });\n    case ActionTypes.ADD_PRODUCT_SUCCESS:\n      return produce(state, draft => {\n        draft.loading.addProduct = false;\n        draft.success.addProduct = true;\n      });\n    case ActionTypes.ADD_PRODUCT_ERROR:\n      return produce(state, draft => {\n        draft.loading.addProduct = false;\n        draft.error.addProduct = true;\n      });\n    case ActionTypes.ADD_PRODUCT_RESET:\n      return produce(state, draft => {\n        draft.loading.addProduct = false;\n        draft.error.addProduct = false;\n        draft.success.addProduct = false;\n      });\n    case ActionTypes.LOG_OUT_REQUEST:\n      return produce(state, draft => {\n        localStorage.removeItem('@plantshop/email');\n        localStorage.removeItem('@plantshop/password');\n        draft.loading.user = false;\n        draft.error.user = false;\n        draft.user = null;\n      });\n    default:\n      return state;\n  }\n}\n\nexport default reducer;"]},"metadata":{},"sourceType":"module"}