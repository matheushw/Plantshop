{"ast":null,"code":"import produce, { enableMapSet } from 'immer';\nimport { mockedUsers } from '../mock-objects/usersList';\nimport { ActionTypes } from './actionTypes';\nexport const initialState = {\n  loading: {\n    loadAllOrders: false,\n    placeRentOrders: false,\n    placePurchaseOrder: false,\n    user: false,\n    allProducts: false,\n    signUp: false\n  },\n  error: {\n    loadAllOrders: false,\n    placeRentOrders: false,\n    placePurchaseOrder: false,\n    user: false,\n    allProducts: false,\n    signUp: false\n  },\n  success: {\n    loadAllOrders: false,\n    placeRentOrders: false,\n    placePurchaseOrder: false,\n    signUp: false\n  },\n  user: null,\n  products: [],\n  cartProducts: new Map(),\n  rentOrders: [],\n  rentedProducts: [],\n  usersList: mockedUsers,\n  orders: []\n};\n\nconst reducer = (state = initialState, action) => {\n  enableMapSet();\n\n  switch (action.type) {\n    case ActionTypes.LOAD_USER_REQUEST:\n      return produce(state, draft => {\n        draft.loading.user = true;\n        draft.error.user = false;\n      });\n\n    case ActionTypes.LOAD_USER_SUCCESS:\n      return produce(state, draft => {\n        draft.loading.user = false;\n        draft.error.user = false;\n        draft.user = action.user;\n      });\n\n    case ActionTypes.LOAD_USER_ERROR:\n      return produce(state, draft => {\n        draft.loading.user = false;\n        draft.error.user = true;\n      });\n\n    case ActionTypes.LOAD_ALL_PRODUCTS_REQUEST:\n      return produce(state, draft => {\n        draft.loading.allProducts = true;\n        draft.error.allProducts = false;\n      });\n\n    case ActionTypes.LOAD_ALL_PRODUCTS_SUCCESS:\n      return produce(state, draft => {\n        draft.loading.allProducts = false;\n        draft.error.allProducts = false;\n        draft.products = action.products;\n      });\n\n    case ActionTypes.LOAD_ALL_PRODUCTS_ERROR:\n      return produce(state, draft => {\n        draft.loading.allProducts = false;\n        draft.error.allProducts = true;\n      });\n\n    case ActionTypes.ADD_PRODUCT_TO_CART_REQUEST:\n      return produce(state, draft => {\n        if (state.cartProducts.has(action.product.id)) {\n          const selectedProduct = state.cartProducts.get(action.product.id);\n          draft.cartProducts.set(action.product.id, { ...selectedProduct,\n            quantity: selectedProduct.quantity + 1\n          });\n        } else {\n          draft.cartProducts.set(action.product.id, action.product);\n        }\n      });\n\n    case ActionTypes.REMOVE_PRODUCT_FROM_CART_RQUEST:\n      return produce(state, draft => {\n        if (state.cartProducts.has(action.id)) {\n          const selectedProduct = state.cartProducts.get(action.id);\n          draft.cartProducts.delete(action.id);\n        }\n      });\n\n    case ActionTypes.PLACE_PURCHASE_ORDER_REQUEST:\n      return produce(state, draft => {\n        draft.loading.placePurchaseOrder = true;\n        draft.error.placePurchaseOrder = false;\n        draft.success.placePurchaseOrder = false;\n      });\n\n    case ActionTypes.PLACE_PURCHASE_ORDER_SUCCESS:\n      return produce(state, draft => {\n        draft.loading.placePurchaseOrder = false;\n        draft.error.placePurchaseOrder = true;\n        draft.success.placePurchaseOrder = false;\n      });\n\n    case ActionTypes.PLACE_PURCHASE_ORDER_ERROR:\n      return produce(state, draft => {\n        draft.loading.placePurchaseOrder = false;\n        draft.error.placePurchaseOrder = false;\n        draft.success.placePurchaseOrder = true;\n      });\n\n    case ActionTypes.CLEAR_PRODUCT_IN_CART_REQUEST:\n      return produce(state, draft => {\n        draft.cartProducts = new Map();\n        draft.rentOrders = [];\n      });\n    // case \"removeRentOrder\":\n    // case ActionTypes.:\n    //   return produce(state, draft => {\n    //     draft.rentOrders = [];\n    //     state.rentOrders.forEach((order) => {\n    //       if(order.orderId !== action.orderId) {\n    //         draft.rentOrders.push(order);\n    //       }\n    //     });\n    //   });\n\n    case ActionTypes.SING_UP_USER_REQUEST:\n      return produce(state, draft => {\n        draft.loading.signUp = true;\n        draft.error.signUp = false;\n        draft.success.signUp = false;\n      });\n\n    case ActionTypes.SING_UP_USER_SUCCESS:\n      return produce(state, draft => {\n        draft.loading.signUp = false;\n        draft.error.signUp = false;\n        draft.success.signUp = true;\n      });\n\n    case ActionTypes.SING_UP_USER_ERROR:\n      return produce(state, draft => {\n        draft.loading.signUp = false;\n        draft.error.signUp = true;\n        draft.success.signUp = false;\n      });\n    // case \"addInventory\":\n    // case ActionTypes.:\n    //   return produce(state, draft => {\n    //     draft.products.forEach((product, index) => {\n    //       if(product.id === action.productId){\n    //         draft.products[index].quantity++;\n    //       }\n    //     })\n    //   });\n    // case \"removeInventory\":\n    // case ActionTypes.:\n    //   return produce(state, draft => {\n    //     draft.products.forEach((product, index) => {\n    //       if(product.id === action.productId){\n    //         draft.products[index].quantity--;\n    //       }\n    //     })\n    //   });\n    // case \"rentProduct\":\n\n    case ActionTypes.RENT_PRODUCT_REQUEST:\n      return produce(state, draft => {\n        draft.rentOrders.push(action.rentOrder);\n      });\n\n    case ActionTypes.PLACE_RENT_ORDERS_REQUEST:\n      return produce(state, draft => {\n        draft.error.placeRentOrders = false;\n        draft.success.placeRentOrders = false;\n        draft.loading.placeRentOrders = true;\n      });\n\n    case ActionTypes.PLACE_RENT_ORDERS_SUCCESS:\n      return produce(state, draft => {\n        draft.error.placeRentOrders = false;\n        draft.success.placeRentOrders = true;\n        draft.loading.placeRentOrders = false;\n      });\n\n    case ActionTypes.PLACE_RENT_ORDERS_ERROR:\n      return produce(state, draft => {\n        draft.error.placeRentOrders = true;\n        draft.success.placeRentOrders = false;\n        draft.loading.placeRentOrders = false;\n      });\n\n    case ActionTypes.LOAD_ALL_ORDERS_REQUEST:\n      return produce(state, draft => {\n        draft.error.loadAllOrders = false;\n        draft.success.loadAllOrders = false;\n        draft.loading.loadAllOrders = true;\n      });\n\n    case ActionTypes.LOAD_ALL_ORDERS_SUCCESS:\n      return produce(state, draft => {\n        draft.error.loadAllOrders = false;\n        draft.success.loadAllOrders = true;\n        draft.loading.loadAllOrders = false;\n      });\n\n    case ActionTypes.LOAD_ALL_ORDERS_ERROR:\n      return produce(state, draft => {\n        draft.error.loadAllOrders = true;\n        draft.success.loadAllOrders = false;\n        draft.loading.loadAllOrders = false;\n      });\n    // case \"removeProduct\":\n    // case ActionTypes.:\n    //   const newProductsArray: ProductModel[] = [];\n    //   return produce(state, draft => {\n    //     draft.products.forEach((product, index) => {\n    //       if(product.id !== action.productId){\n    //         newProductsArray.push(product);\n    //       }\n    //     })\n    //     draft.products = newProductsArray;\n    //   });\n    // case \"editUser\":\n    // case ActionTypes.:\n    //   return produce(state, draft => {\n    //     draft.usersList = [];\n    //     let edited: boolean = false;\n    //     state.usersList.forEach((user) => {\n    //       if(!edited && user.id === action.id){\n    //         const newUser: User = {\n    //           id: action.id,\n    //           email: action.email,\n    //           password: user.password,\n    //           name: action.name,\n    //           address: action.address,\n    //           phoneNumber: action.phoneNumber,\n    //           role: user.role,\n    //         }\n    //         edited = true;\n    //         draft.user = newUser;\n    //         draft.usersList.push(newUser);\n    //       } else {\n    //         draft.usersList.push(user);\n    //       }\n    //     });\n    //   });\n    // case \"addAdmin\":\n    // case ActionTypes.:\n    //     return produce(state, draft => {\n    //       const admin: User = {\n    //           id: (state.usersList.length).toString(),\n    //           email: action.email,\n    //           password: action.password,\n    //           name: action.name,\n    //           address: action.address,\n    //           phoneNumber: action.phoneNumber,\n    //           role: 'admin',\n    //       }\n    //       draft.usersList.push(admin); \n    //     });\n    // case \"registerProduct\":\n    // case ActionTypes.:\n    //   return produce(state, draft => {\n    //     const product: ProductModel = {\n    //       id: (state.products.length+1).toString(),\n    //       img: action.img,\n    //       name: action.name,\n    //       price: action.price,\n    //       quantity: action.quantity,\n    //       type: action.category,\n    //       description: action.description,\n    //     }\n    //     draft.products.push(product);\n    //   });\n    // case \"minusProductInCart\":\n    // case ActionTypes.:\n    //   return produce(state, draft => {\n    //     if(state.cartProducts.has(action.id)){\n    //       const selectedProduct = state.cartProducts.get(action.id)!;\n    //       if(selectedProduct.quantity === 1){\n    //         draft.cartProducts.delete(action.id);\n    //       }else if(selectedProduct.quantity > 1){\n    //         draft.cartProducts.set(action.id, {...selectedProduct, quantity: selectedProduct.quantity - 1})\n    //       }\n    //     }\n    //   });\n    // case \"plusProductInCart\":\n    // case ActionTypes.:\n    //   return produce(state, draft => {\n    //     state.products.forEach(product => {\n    //       if(state.cartProducts.has(action.id)){\n    //         const selectedProduct = state.cartProducts.get(action.id)!;\n    //         if(product.id === action.id && product.quantity - selectedProduct.quantity > 0){\n    //           draft.cartProducts.set(action.id, {...selectedProduct, quantity: selectedProduct.quantity + 1})\n    //         }\n    //       }\n    //     });\n    //   });\n    // case ActionTypes.LOG_OUT_REQUEST:\n    //   return produce(state, draft => {\n    //     draft.loading = true;\n    //     draft.user = null;\n    //   });\n    // case ActionTypes.LOG_OUT_SUCCESS:\n    //   return produce(state, draft => {\n    //     draft.loading = false;\n    //     draft.user = null;\n    //   });\n    // case ActionTypes.LOG_OUT_ERROR:\n    //   return produce(state, draft => {\n    //     draft.loading = false;\n    //     draft.error = true;\n    //     draft.user = null;\n    //   });\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/matheuscunha/USP/Plantshop/src/store/reducer.ts"],"names":["produce","enableMapSet","mockedUsers","ActionTypes","initialState","loading","loadAllOrders","placeRentOrders","placePurchaseOrder","user","allProducts","signUp","error","success","products","cartProducts","Map","rentOrders","rentedProducts","usersList","orders","reducer","state","action","type","LOAD_USER_REQUEST","draft","LOAD_USER_SUCCESS","LOAD_USER_ERROR","LOAD_ALL_PRODUCTS_REQUEST","LOAD_ALL_PRODUCTS_SUCCESS","LOAD_ALL_PRODUCTS_ERROR","ADD_PRODUCT_TO_CART_REQUEST","has","product","id","selectedProduct","get","set","quantity","REMOVE_PRODUCT_FROM_CART_RQUEST","delete","PLACE_PURCHASE_ORDER_REQUEST","PLACE_PURCHASE_ORDER_SUCCESS","PLACE_PURCHASE_ORDER_ERROR","CLEAR_PRODUCT_IN_CART_REQUEST","SING_UP_USER_REQUEST","SING_UP_USER_SUCCESS","SING_UP_USER_ERROR","RENT_PRODUCT_REQUEST","push","rentOrder","PLACE_RENT_ORDERS_REQUEST","PLACE_RENT_ORDERS_SUCCESS","PLACE_RENT_ORDERS_ERROR","LOAD_ALL_ORDERS_REQUEST","LOAD_ALL_ORDERS_SUCCESS","LOAD_ALL_ORDERS_ERROR"],"mappings":"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","sourcesContent":["import produce, { enableMapSet } from 'immer';\nimport { mockedUsers } from '../mock-objects/usersList';\nimport { products } from '../mock-objects/products';\nimport { ApplicationState, User, Order, ProductOrder, ProductModel } from './types';\nimport { ApplicationAction } from './actions';\nimport { ActionTypes } from './actionTypes';\n\nexport const initialState: ApplicationState = {\n  loading: {\n    loadAllOrders: false,\n    placeRentOrders: false,\n    placePurchaseOrder: false,\n    user: false,\n    allProducts: false,\n    signUp: false,\n  },\n  error: {\n    loadAllOrders: false,\n    placeRentOrders: false,\n    placePurchaseOrder: false,\n    user: false,\n    allProducts: false,\n    signUp: false,\n  },\n  success: {\n    loadAllOrders: false,\n    placeRentOrders: false,\n    placePurchaseOrder: false,\n    signUp: false,\n  },\n  user: null,\n  products: [],\n  cartProducts: new Map(),\n  rentOrders: [],\n  rentedProducts: [],\n  usersList: mockedUsers,\n  orders: [],\n}\n\nconst reducer = (state = initialState, action: ApplicationAction) => {\n  enableMapSet();\n  \n  switch (action.type) {\n    case ActionTypes.LOAD_USER_REQUEST:\n      return produce(state, draft => {\n        draft.loading.user = true;\n        draft.error.user = false;\n      });\n      case ActionTypes.LOAD_USER_SUCCESS:\n        return produce(state, draft => {\n        draft.loading.user = false;\n        draft.error.user = false;\n        draft.user = action.user;\n      });\n    case ActionTypes.LOAD_USER_ERROR:\n      return produce(state, draft => {\n        draft.loading.user = false;\n        draft.error.user = true;\n      });\n    case ActionTypes.LOAD_ALL_PRODUCTS_REQUEST:\n      return produce(state, draft => {\n        draft.loading.allProducts = true;\n        draft.error.allProducts = false;\n      });\n      case ActionTypes.LOAD_ALL_PRODUCTS_SUCCESS:\n        return produce(state, draft => {\n        draft.loading.allProducts = false;\n        draft.error.allProducts = false;\n        draft.products = action.products;\n      });\n    case ActionTypes.LOAD_ALL_PRODUCTS_ERROR:\n      return produce(state, draft => {\n        draft.loading.allProducts = false;\n        draft.error.allProducts = true;\n      });\n    case ActionTypes.ADD_PRODUCT_TO_CART_REQUEST:\n      return produce(state, draft => {\n        if(state.cartProducts.has(action.product.id)){\n          const selectedProduct = state.cartProducts.get(action.product.id)!;\n          draft.cartProducts.set(action.product.id, {...selectedProduct, quantity: selectedProduct.quantity + 1})\n        } else {\n          draft.cartProducts.set(action.product.id, action.product);\n        }\n      });\n    case ActionTypes.REMOVE_PRODUCT_FROM_CART_RQUEST:\n      return produce(state, draft => {\n        if(state.cartProducts.has(action.id)){\n          const selectedProduct = state.cartProducts.get(action.id)!;\n          draft.cartProducts.delete(action.id);          \n        }\n      });\n    case ActionTypes.PLACE_PURCHASE_ORDER_REQUEST:\n      return produce(state, draft => {\n        draft.loading.placePurchaseOrder = true;\n        draft.error.placePurchaseOrder = false;\n        draft.success.placePurchaseOrder = false;\n      });\n    case ActionTypes.PLACE_PURCHASE_ORDER_SUCCESS:\n      return produce(state, draft => {\n        draft.loading.placePurchaseOrder = false;\n        draft.error.placePurchaseOrder = true;\n        draft.success.placePurchaseOrder = false;\n      });\n    case ActionTypes.PLACE_PURCHASE_ORDER_ERROR:\n      return produce(state, draft => {\n        draft.loading.placePurchaseOrder = false;\n        draft.error.placePurchaseOrder = false;\n        draft.success.placePurchaseOrder = true;\n      });\n    case ActionTypes.CLEAR_PRODUCT_IN_CART_REQUEST:\n      return produce(state, draft => {\n        draft.cartProducts = new Map();\n        draft.rentOrders = [];\n      });\n    // case \"removeRentOrder\":\n    // case ActionTypes.:\n    //   return produce(state, draft => {\n    //     draft.rentOrders = [];\n    //     state.rentOrders.forEach((order) => {\n    //       if(order.orderId !== action.orderId) {\n    //         draft.rentOrders.push(order);\n    //       }\n    //     });\n    //   });\n    case ActionTypes.SING_UP_USER_REQUEST:\n      return produce(state, draft => {\n        draft.loading.signUp = true;\n        draft.error.signUp = false;\n        draft.success.signUp = false;\n      });\n    case ActionTypes.SING_UP_USER_SUCCESS:\n      return produce(state, draft => {\n        draft.loading.signUp = false;\n        draft.error.signUp = false;\n        draft.success.signUp = true; \n      });\n    case ActionTypes.SING_UP_USER_ERROR:\n      return produce(state, draft => {\n        draft.loading.signUp = false;\n        draft.error.signUp = true;\n        draft.success.signUp = false;\n      });\n    // case \"addInventory\":\n    // case ActionTypes.:\n    //   return produce(state, draft => {\n    //     draft.products.forEach((product, index) => {\n    //       if(product.id === action.productId){\n    //         draft.products[index].quantity++;\n    //       }\n    //     })\n    //   });\n\n    // case \"removeInventory\":\n    // case ActionTypes.:\n    //   return produce(state, draft => {\n    //     draft.products.forEach((product, index) => {\n    //       if(product.id === action.productId){\n    //         draft.products[index].quantity--;\n    //       }\n    //     })\n    //   });\n    // case \"rentProduct\":\n    case ActionTypes.RENT_PRODUCT_REQUEST:\n      return produce(state, draft => {\n        draft.rentOrders.push(action.rentOrder);\n      });\n    case ActionTypes.PLACE_RENT_ORDERS_REQUEST:\n      return produce(state, draft => {\n        draft.error.placeRentOrders = false;\n        draft.success.placeRentOrders = false;\n        draft.loading.placeRentOrders = true;\n      });\n    case ActionTypes.PLACE_RENT_ORDERS_SUCCESS:\n      return produce(state, draft => {\n        draft.error.placeRentOrders = false;\n        draft.success.placeRentOrders = true;\n        draft.loading.placeRentOrders = false;\n      });\n    case ActionTypes.PLACE_RENT_ORDERS_ERROR:\n      return produce(state, draft => {\n        draft.error.placeRentOrders = true;\n        draft.success.placeRentOrders = false;\n        draft.loading.placeRentOrders = false;\n      });\n    case ActionTypes.LOAD_ALL_ORDERS_REQUEST:\n      return produce(state, draft => {\n        draft.error.loadAllOrders = false;\n        draft.success.loadAllOrders = false;\n        draft.loading.loadAllOrders = true;\n      });\n    case ActionTypes.LOAD_ALL_ORDERS_SUCCESS:\n      return produce(state, draft => {\n        draft.error.loadAllOrders = false;\n        draft.success.loadAllOrders = true;\n        draft.loading.loadAllOrders = false;\n      });\n    case ActionTypes.LOAD_ALL_ORDERS_ERROR:\n      return produce(state, draft => {\n        draft.error.loadAllOrders = true;\n        draft.success.loadAllOrders = false;\n        draft.loading.loadAllOrders = false;\n      });\n    // case \"removeProduct\":\n    // case ActionTypes.:\n    //   const newProductsArray: ProductModel[] = [];\n    //   return produce(state, draft => {\n    //     draft.products.forEach((product, index) => {\n    //       if(product.id !== action.productId){\n    //         newProductsArray.push(product);\n    //       }\n    //     })\n\n    //     draft.products = newProductsArray;\n    //   });\n      \n    // case \"editUser\":\n    // case ActionTypes.:\n    //   return produce(state, draft => {\n    //     draft.usersList = [];\n    //     let edited: boolean = false;\n    //     state.usersList.forEach((user) => {\n    //       if(!edited && user.id === action.id){\n    //         const newUser: User = {\n    //           id: action.id,\n    //           email: action.email,\n    //           password: user.password,\n    //           name: action.name,\n    //           address: action.address,\n    //           phoneNumber: action.phoneNumber,\n    //           role: user.role,\n    //         }\n    //         edited = true;\n    //         draft.user = newUser;\n    //         draft.usersList.push(newUser);\n            \n    //       } else {\n    //         draft.usersList.push(user);\n    //       }\n    //     });\n    //   });\n    // case \"addAdmin\":\n    // case ActionTypes.:\n    //     return produce(state, draft => {\n    //       const admin: User = {\n    //           id: (state.usersList.length).toString(),\n    //           email: action.email,\n    //           password: action.password,\n    //           name: action.name,\n    //           address: action.address,\n    //           phoneNumber: action.phoneNumber,\n    //           role: 'admin',\n    //       }\n    //       draft.usersList.push(admin); \n    //     });\n    // case \"registerProduct\":\n    // case ActionTypes.:\n    //   return produce(state, draft => {\n    //     const product: ProductModel = {\n    //       id: (state.products.length+1).toString(),\n    //       img: action.img,\n    //       name: action.name,\n    //       price: action.price,\n    //       quantity: action.quantity,\n    //       type: action.category,\n    //       description: action.description,\n    //     }\n    //     draft.products.push(product);\n    //   });\n    // case \"minusProductInCart\":\n    // case ActionTypes.:\n    //   return produce(state, draft => {\n    //     if(state.cartProducts.has(action.id)){\n    //       const selectedProduct = state.cartProducts.get(action.id)!;\n    //       if(selectedProduct.quantity === 1){\n    //         draft.cartProducts.delete(action.id);\n    //       }else if(selectedProduct.quantity > 1){\n    //         draft.cartProducts.set(action.id, {...selectedProduct, quantity: selectedProduct.quantity - 1})\n    //       }\n    //     }\n    //   });\n    // case \"plusProductInCart\":\n    // case ActionTypes.:\n    //   return produce(state, draft => {\n    //     state.products.forEach(product => {\n    //       if(state.cartProducts.has(action.id)){\n    //         const selectedProduct = state.cartProducts.get(action.id)!;\n    //         if(product.id === action.id && product.quantity - selectedProduct.quantity > 0){\n    //           draft.cartProducts.set(action.id, {...selectedProduct, quantity: selectedProduct.quantity + 1})\n    //         }\n    //       }\n    //     });\n    //   });\n    // case ActionTypes.LOG_OUT_REQUEST:\n    //   return produce(state, draft => {\n    //     draft.loading = true;\n    //     draft.user = null;\n    //   });\n    // case ActionTypes.LOG_OUT_SUCCESS:\n    //   return produce(state, draft => {\n    //     draft.loading = false;\n    //     draft.user = null;\n    //   });\n    // case ActionTypes.LOG_OUT_ERROR:\n    //   return produce(state, draft => {\n    //     draft.loading = false;\n    //     draft.error = true;\n    //     draft.user = null;\n    //   });\n    default:\n      return state;\n  }\n}\n\nexport default reducer;"]},"metadata":{},"sourceType":"module"}