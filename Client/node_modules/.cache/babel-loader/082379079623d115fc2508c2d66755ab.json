{"ast":null,"code":"var _jsxFileName = \"/Users/matheuscunha/USP/Plantshop/ps/src/packages/cart/src/components/ChartPage/ChartPage.tsx\";\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { clearCart, placeOrder, removeProductToChart, removeRentOrder } from '../../../../../store/actions';\nimport ChartProduct from '../ChartProduct/ChartProduct';\nimport * as styles from './styles';\nimport ReactNotification, { store } from 'react-notifications-component';\nimport 'react-notifications-component/dist/theme.css';\nimport ChartRent from '../ChartRent/ChartRent';\nimport ProductList from '../ProductList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ChartPage = props => {\n  const getFinalPrice = () => {\n    let finalPrice = 0.0;\n    props.cartProducts.forEach(product => {\n      finalPrice += parseFloat(product.price) * product.quantity;\n    });\n    props.rentOrders.forEach(rentOrder => finalPrice += parseFloat(rentOrder.total));\n    return finalPrice;\n  };\n\n  const placeOrder = () => {\n    props.placeOrder();\n    props.clearCart();\n    store.addNotification({\n      title: \"Pedido feito com sucesso!\",\n      message: \" \",\n      type: \"success\",\n      insert: \"top\",\n      container: \"top-left\",\n      animationIn: [\"animate__animated\", \"animate__fadeIn\"],\n      animationOut: [\"animate__animated\", \"animate__fadeOut\"],\n      dismiss: {\n        duration: 2000,\n        onScreen: false\n      }\n    });\n  };\n\n  const notifyLogin = () => {\n    store.addNotification({\n      title: \"Por favor faÃ§a login antes de finalizar a compra.\",\n      message: \" \",\n      type: \"warning\",\n      insert: \"top\",\n      container: \"top-left\",\n      animationIn: [\"animate__animated\", \"animate__fadeIn\"],\n      animationOut: [\"animate__animated\", \"animate__fadeOut\"],\n      dismiss: {\n        duration: 2000,\n        onScreen: false\n      }\n    });\n  };\n\n  const renderRentOrder = (rentOrder, idx) => {\n    return /*#__PURE__*/_jsxDEV(ChartRent, {\n      removeRentOrder: props.removeRentOrder,\n      rentOrder: rentOrder\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this);\n  };\n\n  const renderProduts = cartProducts => {\n    const cartProductElements = [];\n    cartProducts.forEach(cartProduct => {\n      cartProductElements.push( /*#__PURE__*/_jsxDEV(ChartProduct, {\n        img: cartProduct.img,\n        name: cartProduct.name,\n        price: cartProduct.price,\n        quantity: cartProduct.quantity,\n        id: cartProduct.id,\n        removeProduct: props.removeProduct\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this));\n    });\n    return cartProductElements;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.productDisplay,\n    children: [/*#__PURE__*/_jsxDEV(ReactNotification, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Seus Produtos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.productList,\n      children: [props.cartProducts.size !== 0 && /*#__PURE__*/_jsxDEV(ProductList, {\n        products: renderProduts(props.cartProducts),\n        title: \"Compras\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 43\n      }, this), props.rentOrders.length !== 0 && /*#__PURE__*/_jsxDEV(ProductList, {\n        products: props.rentOrders.map(renderRentOrder),\n        title: \"Alugueis\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 43\n      }, this), props.cartProducts.size === 0 && props.rentOrders.length === 0 && /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Voc\\xEA n\\xE3o tem nenhum produto no carrinho :(\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 76\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), (props.cartProducts.size !== 0 || props.rentOrders.length !== 0) && /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Total: \", \"R$ \" + getFinalPrice().toFixed(2)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 76\n    }, this), (props.cartProducts.size !== 0 || props.rentOrders.length !== 0) && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Continuar comprando\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 24\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }, this), props.user !== null && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: placeOrder,\n        children: \"Finalizar compra\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 35\n      }, this), props.user === null && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: notifyLogin,\n        children: \"Finalizar compra\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 35\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n};\n\n_c = ChartPage;\n\nconst mapStateToProps = state => ({\n  cartProducts: state.cartProducts,\n  rentOrders: state.rentOrders,\n  user: state.user\n});\n\nconst mapDispatchToProps = dispatch => ({\n  removeProduct: id => {\n    dispatch(removeProductToChart(id));\n  },\n  placeOrder: () => {\n    dispatch(placeOrder());\n  },\n  clearCart: () => {\n    dispatch(clearCart());\n  },\n  removeRentOrder: rentOrderId => {\n    dispatch(removeRentOrder(rentOrderId));\n  }\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ChartPage);\n\nvar _c;\n\n$RefreshReg$(_c, \"ChartPage\");","map":{"version":3,"sources":["/Users/matheuscunha/USP/Plantshop/ps/src/packages/cart/src/components/ChartPage/ChartPage.tsx"],"names":["connect","Link","clearCart","placeOrder","removeProductToChart","removeRentOrder","ChartProduct","styles","ReactNotification","store","ChartRent","ProductList","ChartPage","props","getFinalPrice","finalPrice","cartProducts","forEach","product","parseFloat","price","quantity","rentOrders","rentOrder","total","addNotification","title","message","type","insert","container","animationIn","animationOut","dismiss","duration","onScreen","notifyLogin","renderRentOrder","idx","renderProduts","cartProductElements","cartProduct","push","img","name","id","removeProduct","productDisplay","productList","size","length","map","toFixed","user","mapStateToProps","state","mapDispatchToProps","dispatch","rentOrderId"],"mappings":"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","sourcesContent":["import { connect } from 'react-redux'\nimport { Dispatch } from 'redux'\nimport { Link } from 'react-router-dom'\nimport { clearCart, placeOrder, removeProductToChart, removeRentOrder } from '../../../../../store/actions'\nimport { ApplicationState, ProductModel, RentOrder, User} from '../../../../../store/types'\nimport ChartProduct  from '../ChartProduct/ChartProduct'\nimport * as styles from './styles'\nimport ReactNotification, { store } from 'react-notifications-component'\nimport 'react-notifications-component/dist/theme.css'\nimport ChartRent from '../ChartRent/ChartRent'\nimport ProductList from '../ProductList'\nimport { ReactElement } from 'react'\n\nexport interface ChartPageProps{\n  user: User | null;\n  cartProducts: Map<string, ProductModel>;\n  rentOrders: RentOrder[];\n  removeProduct: (id: string) => void;\n  removeRentOrder: (rentOrderId: number) => void;\n  placeOrder: () => void;\n  clearCart: () => void;\n}\n\nconst ChartPage: React.FC<ChartPageProps> = (props) => {\n\n  const getFinalPrice = () => {\n    let finalPrice: number = 0.0;\n\n    props.cartProducts.forEach((product) => {\n      finalPrice += parseFloat(product.price) * product.quantity;\n    });\n\n    props.rentOrders.forEach((rentOrder) => finalPrice += parseFloat(rentOrder.total));\n\n    return finalPrice;\n  }\n\n  const placeOrder = () => {\n\n    props.placeOrder();\n    props.clearCart();\n\n    store.addNotification({\n      title: \"Pedido feito com sucesso!\",\n      message: \" \",\n      type: \"success\",\n      insert: \"top\",\n      container: \"top-left\",\n      animationIn: [\"animate__animated\", \"animate__fadeIn\"],\n      animationOut: [\"animate__animated\", \"animate__fadeOut\"],\n      dismiss: {\n        duration: 2000,\n        onScreen: false\n      }\n      });\n  }\n  const notifyLogin = () => {\n      store.addNotification({\n        title: \"Por favor faÃ§a login antes de finalizar a compra.\",\n        message: \" \",\n        type: \"warning\",\n        insert: \"top\",\n        container: \"top-left\",\n        animationIn: [\"animate__animated\", \"animate__fadeIn\"],\n        animationOut: [\"animate__animated\", \"animate__fadeOut\"],\n        dismiss: {\n          duration: 2000,\n          onScreen: false\n        }\n      });\n  }\n\n  const renderRentOrder = (rentOrder: RentOrder, idx: number) => {\n    return (<ChartRent removeRentOrder={props.removeRentOrder} rentOrder={rentOrder}/>);\n  }\n\n  const renderProduts = (cartProducts: Map<string, ProductModel>) =>{\n\n    const cartProductElements: ReactElement[] = [];\n\n    cartProducts.forEach((cartProduct) => {\n      cartProductElements.push(\n        <ChartProduct \n          img={cartProduct.img} \n          name={cartProduct.name} \n          price={cartProduct.price} \n          quantity={cartProduct.quantity}\n          id={cartProduct.id} \n          removeProduct={props.removeProduct} \n        />);\n    });\n\n    return(cartProductElements);\n  }\n\n  return(\n    <div className={styles.productDisplay}>\n      <ReactNotification/>\n      <h1>Seus Produtos</h1>\n\n      \n      <div className={styles.productList}>\n        {/* {props.cartProducts.size !== 0 && renderProduts(props.cartProducts)} */}\n        {props.cartProducts.size !== 0 && <ProductList products={renderProduts(props.cartProducts)} title={\"Compras\"} />}\n        {/* {props.rentOrders.length !== 0 && props.rentOrders.map(renderRentOrder)} */}\n\n        {props.rentOrders.length !== 0 && <ProductList products={props.rentOrders.map(renderRentOrder)} title={\"Alugueis\"}/>}\n        {props.cartProducts.size === 0 && props.rentOrders.length === 0 && <h2>VocÃª nÃ£o tem nenhum produto no carrinho :(</h2>}\n      </div>\n      \n      {(props.cartProducts.size !== 0 || props.rentOrders.length !== 0) && <h1>Total: {\"R$ \" + getFinalPrice().toFixed(2)}</h1>}\n      {(props.cartProducts.size !== 0 || props.rentOrders.length !== 0) &&\n        <div>\n          <Link to=\"/\"><button>Continuar comprando</button></Link>\n          {props.user !== null && <button onClick={placeOrder}>Finalizar compra</button>}\n          {props.user === null && <button onClick={notifyLogin}>Finalizar compra</button>}\n        </div>\n      }\n    </div>\n  );\n}\n\ninterface DispatchProps {\n  removeProduct: (id: string) => void;\n  removeRentOrder: (rentOrderId: number) => void;\n  placeOrder: () => void;\n  clearCart: () => void;\n}\n\ninterface StateProps{\n  cartProducts: Map<string, ProductModel>;\n  rentOrders: RentOrder[];\n  user: User | null;\n}\n\nconst mapStateToProps = (state: ApplicationState): StateProps => ({\n  cartProducts: state.cartProducts,\n  rentOrders: state.rentOrders,\n  user: state.user\n  \n});\n\nconst mapDispatchToProps = (dispatch: Dispatch): DispatchProps => ({\n  removeProduct:(id) => {dispatch(removeProductToChart(id))},\n  placeOrder:() => {dispatch(placeOrder())},\n  clearCart: () => {dispatch(clearCart())},\n  removeRentOrder:(rentOrderId) => {dispatch(removeRentOrder(rentOrderId))}\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ChartPage);"]},"metadata":{},"sourceType":"module"}