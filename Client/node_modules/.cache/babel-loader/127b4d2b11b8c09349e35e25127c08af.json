{"ast":null,"code":"var _jsxFileName = \"/Users/matheuscunha/USP/Plantshop/ps/src/base-components/product/src/components/DetailProductPage/DetailProductPage.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport * as styles from './styles';\nimport { useParams } from \"react-router-dom\";\nimport { connect } from 'react-redux';\nimport { addProductToChart } from '../../../../../store/actions';\nimport ReactNotification, { store } from 'react-notifications-component';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DetailProductPage = props => {\n  _s();\n\n  const productProps = useParams();\n  const selectedProduct = props.products.find(product => product.id === productProps.id);\n\n  const addProduct = () => {\n    props.addProduct(selectedProduct);\n    store.addNotification({\n      title: \"Produto adicionado no carrinho!\",\n      type: \"success\",\n      insert: \"top\",\n      container: \"top-right\",\n      animationIn: [\"animate__animated\", \"animate__fadeIn\"],\n      animationOut: [\"animate__animated\", \"animate__fadeOut\"],\n      dismiss: {\n        duration: 2000,\n        onScreen: true\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.product,\n    children: [/*#__PURE__*/_jsxDEV(ReactNotification, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: selectedProduct === null || selectedProduct === void 0 ? void 0 : selectedProduct.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      className: styles.productImage,\n      src: selectedProduct === null || selectedProduct === void 0 ? void 0 : selectedProduct.img,\n      alt: \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: styles.title,\n      children: selectedProduct === null || selectedProduct === void 0 ? void 0 : selectedProduct.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), selectedProduct === null || selectedProduct === void 0 ? void 0 : selectedProduct.description, /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: styles.price,\n      children: [\"R$\", selectedProduct === null || selectedProduct === void 0 ? void 0 : selectedProduct.price]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"material-icons-outlined \" + styles.cartIcon,\n      onClick: addProduct,\n      children: \" add_shopping_cart \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n\n_s(DetailProductPage, \"qwLqDtUsm+VP6k9mCQFcwoVmTDo=\", false, function () {\n  return [useParams];\n});\n\n_c = DetailProductPage;\n\nconst mapStateToProps = state => ({\n  products: state.products\n});\n\nconst mapDispatchToProps = dispatch => ({\n  addProduct: product => {\n    dispatch(addProductToChart(product));\n  }\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DetailProductPage);\n\nvar _c;\n\n$RefreshReg$(_c, \"DetailProductPage\");","map":{"version":3,"sources":["/Users/matheuscunha/USP/Plantshop/ps/src/base-components/product/src/components/DetailProductPage/DetailProductPage.tsx"],"names":["React","styles","useParams","connect","addProductToChart","ReactNotification","store","DetailProductPage","props","productProps","selectedProduct","products","find","product","id","addProduct","addNotification","title","type","insert","container","animationIn","animationOut","dismiss","duration","onScreen","name","productImage","img","description","price","cartIcon","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,MAAZ,MAAwB,UAAxB;AACA,SAASC,SAAT,QAA0B,kBAA1B;AAGA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,iBAAT,QAAkC,8BAAlC;AACA,OAAOC,iBAAP,IAA4BC,KAA5B,QAAyC,+BAAzC;;;AAUA,MAAMC,iBAAmD,GAAIC,KAAD,IAAW;AAAA;;AACrE,QAAMC,YAAY,GAAIP,SAAS,EAA/B;AACA,QAAMQ,eAAe,GAAGF,KAAK,CAACG,QAAN,CAAeC,IAAf,CAAqBC,OAAD,IAAaA,OAAO,CAACC,EAAR,KAAeL,YAAY,CAACK,EAA7D,CAAxB;;AAEA,QAAMC,UAAU,GAAG,MAAM;AACvBP,IAAAA,KAAK,CAACO,UAAN,CAAiBL,eAAjB;AACAJ,IAAAA,KAAK,CAACU,eAAN,CAAsB;AACpBC,MAAAA,KAAK,EAAE,iCADa;AAEpBC,MAAAA,IAAI,EAAE,SAFc;AAGpBC,MAAAA,MAAM,EAAE,KAHY;AAIpBC,MAAAA,SAAS,EAAE,WAJS;AAKpBC,MAAAA,WAAW,EAAE,CAAC,mBAAD,EAAsB,iBAAtB,CALO;AAMpBC,MAAAA,YAAY,EAAE,CAAC,mBAAD,EAAsB,kBAAtB,CANM;AAOpBC,MAAAA,OAAO,EAAE;AACPC,QAAAA,QAAQ,EAAE,IADH;AAEPC,QAAAA,QAAQ,EAAE;AAFH;AAPW,KAAtB;AAYD,GAdD;;AAgBA,sBACE;AAAK,IAAA,SAAS,EAAExB,MAAM,CAACY,OAAvB;AAAA,4BACE,QAAC,iBAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,gBAAKH,eAAL,aAAKA,eAAL,uBAAKA,eAAe,CAAEgB;AAAtB;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAK,MAAA,SAAS,EAAEzB,MAAM,CAAC0B,YAAvB;AAAqC,MAAA,GAAG,EAAEjB,eAAF,aAAEA,eAAF,uBAAEA,eAAe,CAAEkB,GAA3D;AAAgE,MAAA,GAAG,EAAC;AAApE;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE;AAAI,MAAA,SAAS,EAAE3B,MAAM,CAACgB,KAAtB;AAAA,gBAA8BP,eAA9B,aAA8BA,eAA9B,uBAA8BA,eAAe,CAAEgB;AAA/C;AAAA;AAAA;AAAA;AAAA,YAJF,EAKGhB,eALH,aAKGA,eALH,uBAKGA,eAAe,CAAEmB,WALpB,eAME;AAAI,MAAA,SAAS,EAAE5B,MAAM,CAAC6B,KAAtB;AAAA,uBAAgCpB,eAAhC,aAAgCA,eAAhC,uBAAgCA,eAAe,CAAEoB,KAAjD;AAAA;AAAA;AAAA;AAAA;AAAA,YANF,eAOE;AAAQ,MAAA,SAAS,EAAE,6BAA6B7B,MAAM,CAAC8B,QAAvD;AAAiE,MAAA,OAAO,EAAEhB,UAA1E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CA/BD;;GAAMR,iB;UACkBL,S;;;KADlBK,iB;;AAwCN,MAAMyB,eAAe,GAAIC,KAAD,KAA0C;AAChEtB,EAAAA,QAAQ,EAAEsB,KAAK,CAACtB;AADgD,CAA1C,CAAxB;;AAIA,MAAMuB,kBAAkB,GAAIC,QAAD,KAAwC;AACjEpB,EAAAA,UAAU,EAAEF,OAAD,IAAa;AAACsB,IAAAA,QAAQ,CAAC/B,iBAAiB,CAACS,OAAD,CAAlB,CAAR;AAAqC;AADG,CAAxC,CAA3B;;AAIA,eAAeV,OAAO,CAAC6B,eAAD,EAAkBE,kBAAlB,CAAP,CAA6C3B,iBAA7C,CAAf","sourcesContent":["import React from 'react';\nimport * as styles from './styles';\nimport { useParams } from \"react-router-dom\";\nimport { ApplicationState, ProductModel } from '../../../../../store/types';\nimport { Dispatch } from 'redux';\nimport { connect } from 'react-redux';\nimport { addProductToChart } from '../../../../../store/actions';\nimport ReactNotification, { store } from 'react-notifications-component'\nexport interface DetailProductPageProps {\n  products: ProductModel[];\n  addProduct: (product: ProductModel) => void;\n}\n\ninterface ReceivedProps{\n  id: string;\n}\n\nconst DetailProductPage: React.FC<DetailProductPageProps> = (props) => {\n  const productProps  = useParams<ReceivedProps>();\n  const selectedProduct = props.products.find((product) => product.id === productProps.id);\n\n  const addProduct = () => {\n    props.addProduct(selectedProduct!);\n    store.addNotification({\n      title: \"Produto adicionado no carrinho!\",\n      type: \"success\",\n      insert: \"top\",\n      container: \"top-right\",\n      animationIn: [\"animate__animated\", \"animate__fadeIn\"],\n      animationOut: [\"animate__animated\", \"animate__fadeOut\"],\n      dismiss: {\n        duration: 2000,\n        onScreen: true\n      }\n    });\n  }\n\n  return (\n    <div className={styles.product}>\n      <ReactNotification/>\n      <h1>{selectedProduct?.name}</h1>\n      <img className={styles.productImage} src={selectedProduct?.img} alt=\"\"/>\n      <h3 className={styles.title}>{selectedProduct?.name}</h3>\n      {selectedProduct?.description}\n      <h2 className={styles.price}>R${selectedProduct?.price}</h2>\n      <button className={\"material-icons-outlined \" + styles.cartIcon} onClick={addProduct}> add_shopping_cart </button>\n    </div>\n  );\n};\n\ninterface DispatchProps {\n  addProduct: (product: ProductModel) => void;\n}\ninterface StateProps{\n  products: ProductModel[];\n}\n\nconst mapStateToProps = (state: ApplicationState): StateProps => ({\n  products: state.products,\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch): DispatchProps => ({\n  addProduct:(product) => {dispatch(addProductToChart(product))},\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DetailProductPage);"]},"metadata":{},"sourceType":"module"}