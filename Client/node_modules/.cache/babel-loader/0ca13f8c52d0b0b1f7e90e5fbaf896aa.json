{"ast":null,"code":"var _jsxFileName = \"/Users/matheuscunha/USP/Plantshop/ps/src/packages/home/src/components/HomePage/HomePage.tsx\";\nimport React from 'react';\nimport Product from '../../../../../base-components/product/src/components/Product/Product';\nimport ProductList from '../../../../../base-components/product-list/src/components/ProductList/ProductList';\nimport { connect } from 'react-redux';\nimport ScrollMenu from 'react-horizontal-scrolling-menu';\nimport * as styles from './styles';\nimport Arrow from './Arrow';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst HomePage = props => {\n  const splitProducts = products => {\n    const productsMap = new Map();\n    products.forEach(product => {\n      if (productsMap.has(product.type)) {\n        const typeList = productsMap.get(product.type);\n        typeList.push(product);\n        productsMap.set(product.type, typeList);\n      } else {\n        productsMap.set(product.type, [product]);\n      }\n    });\n    return productsMap;\n  };\n\n  const titleType = type => {\n    switch (type) {\n      case 'Planta':\n        return 'Plantas';\n\n      case 'Flor':\n        return 'Flores';\n\n      case 'Buque':\n        return 'Buquês';\n\n      case 'Vaso':\n        return 'Vasos';\n\n      default:\n        return '';\n    }\n\n    ;\n  };\n\n  const renderProductTypeList = products => {\n    const lists = [];\n    products.forEach((productsType, title) => {\n      lists.push( /*#__PURE__*/_jsxDEV(ProductList, {\n        title: titleType(title),\n        products: productsType\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 18\n      }, this));\n    });\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: lists\n    }, void 0, false);\n  };\n\n  const renderProduts = product => {\n    return /*#__PURE__*/_jsxDEV(Product, {\n      product: product\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this) //id={product.id} img={product.img} name={product.name} price={product.price} description={product.description} />\n    ;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.homePage,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \" Promo\\xE7\\xF5es \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ScrollMenu, {\n      data: props.products.map(renderProduts),\n      arrowLeft: /*#__PURE__*/_jsxDEV(Arrow, {\n        direction: \"left\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 22\n      }, this),\n      arrowRight: /*#__PURE__*/_jsxDEV(Arrow, {\n        direction: \"right\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 23\n      }, this),\n      alignCenter: false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this), renderProductTypeList(splitProducts(props.products))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n\n_c = HomePage;\n\nconst mapStateToProps = state => ({\n  products: state.products\n});\n\nconst mapDispatchToProps = dispatch => ({});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(HomePage);\n\nvar _c;\n\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"sources":["/Users/matheuscunha/USP/Plantshop/ps/src/packages/home/src/components/HomePage/HomePage.tsx"],"names":["React","Product","ProductList","connect","ScrollMenu","styles","Arrow","HomePage","props","splitProducts","products","productsMap","Map","forEach","product","has","type","typeList","get","push","set","titleType","renderProductTypeList","lists","productsType","title","renderProduts","homePage","map","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { ReactNode } from 'react';\nimport Product from '../../../../../base-components/product/src/components/Product/Product';\nimport ProductList from '../../../../../base-components/product-list/src/components/ProductList/ProductList';\nimport { connect } from 'react-redux';\nimport { Dispatch } from 'redux';\nimport { ApplicationState, ProductModel } from '../../../../../store/types';\nimport ScrollMenu from 'react-horizontal-scrolling-menu';\nimport * as styles from './styles';\nimport Arrow from './Arrow';\n\nexport interface HomePageProps {\n  products: ProductModel[],\n}\n\nconst HomePage: React.FC<HomePageProps> = (props) => {\n\n  const splitProducts = (products: ProductModel[]) => {\n    const productsMap: Map<string, ProductModel[]> = new Map();\n    products.forEach((product) => {\n      if (productsMap.has(product.type)){\n        const typeList: ProductModel[] = productsMap.get(product.type)!;\n        typeList.push(product);\n        productsMap.set(product.type, typeList);\n      } else {\n        productsMap.set(product.type, [product]);\n      }\n    });\n\n    return productsMap;\n  }\n\n  const titleType = (type:string) => {\n    switch(type){\n        case 'Planta':\n            return 'Plantas';\n        case 'Flor':\n            return 'Flores';\n        case 'Buque':\n            return 'Buquês';\n        case 'Vaso':\n            return 'Vasos';\n        default:\n            return '';\n    };\n  };\n  const renderProductTypeList = (products:Map<string, ProductModel[]>) => {\n    const lists: ReactNode[] = [];\n\n    products.forEach((productsType, title) => {\n      lists.push(<ProductList title={titleType(title)} products={productsType} />);\n    });\n\n    return (\n      <>\n        {lists}\n      </>\n    )\n  }\n\n  const renderProduts = (product: ProductModel) =>{\n    return(\n      <Product product={product}/>\n      //id={product.id} img={product.img} name={product.name} price={product.price} description={product.description} />\n    );\n  }\n\n  return (\n    <div className={styles.homePage}>\n        <h1> Promoções </h1>\n        <ScrollMenu\n          data={props.products.map(renderProduts)}\n          arrowLeft={<Arrow direction=\"left\" />}\n          arrowRight={<Arrow direction=\"right\" />}\n          alignCenter={false}\n        />\n        {renderProductTypeList(splitProducts(props.products))}\n        {\n        /* <ProductList title=\"Buques\" products={mockProducts(\"Buquê X\", \"24.99\")} /> */}\n    </div>\n  );\n};\n\ninterface DispatchProps {}\n\nconst mapStateToProps = (state: ApplicationState): HomePageProps => ({\n  products: state.products\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch): DispatchProps => ({});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(HomePage);\n"]},"metadata":{},"sourceType":"module"}