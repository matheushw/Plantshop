{"ast":null,"code":"var _jsxFileName = \"/Users/matheuscunha/USP/Plantshop/src/packages/cart/src/components/ChartPage/ChartPage.tsx\";\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { clearProductInCartRequest, minusProductInCartRequest, placePurchaseOrderRequest, placeRentOrdersRequest, plusProductInCartRequest, removeProductFromCartRequest, removeRentOrderRequest } from '../../../../../store/actionCreators';\nimport ChartProduct from '../ChartProduct/ChartProduct';\nimport * as styles from './styles';\nimport ReactNotification, { store } from 'react-notifications-component';\nimport 'react-notifications-component/dist/theme.css';\nimport ChartRent from '../ChartRent/ChartRent';\nimport ProductList from '../ProductList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ChartPage = props => {\n  const getFinalPrice = () => {\n    let finalPrice = 0.0;\n    props.cartProducts.forEach(product => {\n      finalPrice += parseFloat(product.price) * product.quantity;\n    });\n    props.rentOrders.forEach(rentOrder => finalPrice += parseFloat(rentOrder.total));\n    return finalPrice;\n  };\n\n  const placePurchaseOrder = () => {\n    if (props.cartProducts.size !== 0) {\n      let totalPrice = 0;\n      let productsOrders = [];\n      props.cartProducts.forEach(product => {\n        totalPrice += parseFloat(product.price) * product.quantity;\n        const newProductOrder = {\n          id: product.id,\n          name: product.name,\n          price: product.price,\n          quantity: product.quantity\n        }; // draft.products.forEach((value, idx) => {\n        //   if(value.id === product.id){\n        //     draft.products[idx].quantity -= product.quantity;\n        //   }\n        // })\n\n        productsOrders.push(newProductOrder);\n      });\n      var day = new Date();\n      var dd = day.getDate().toString();\n      var mm = (day.getMonth() + 1).toString();\n      var yyyy = day.getFullYear().toString();\n\n      if (parseInt(dd) < 10) {\n        dd = '0' + dd;\n      }\n\n      if (parseInt(mm) < 10) {\n        mm = '0' + mm;\n      }\n\n      const newOrder = {\n        productsOrders: productsOrders,\n        date: dd + \"/\" + mm + \"/\" + yyyy,\n        total: totalPrice.toFixed(2),\n        status: \"Preparando para envio!\"\n      };\n      props.placePurchaseOrder(props.user, newOrder);\n    }\n\n    if (props.rentOrders.length !== 0) {\n      props.placeRentOrders(props.rentOrders, props.user);\n    }\n\n    props.clearCart();\n    store.addNotification({\n      title: \"Pedido feito com sucesso!\",\n      message: \" \",\n      type: \"success\",\n      insert: \"top\",\n      container: \"top-left\",\n      animationIn: [\"animate__animated\", \"animate__fadeIn\"],\n      animationOut: [\"animate__animated\", \"animate__fadeOut\"],\n      dismiss: {\n        duration: 2000,\n        onScreen: false\n      }\n    });\n  };\n\n  const notifyLogin = () => {\n    store.addNotification({\n      title: \"Por favor faÃ§a login antes de finalizar a compra.\",\n      message: \" \",\n      type: \"warning\",\n      insert: \"top\",\n      container: \"top-left\",\n      animationIn: [\"animate__animated\", \"animate__fadeIn\"],\n      animationOut: [\"animate__animated\", \"animate__fadeOut\"],\n      dismiss: {\n        duration: 2000,\n        onScreen: false\n      }\n    });\n  };\n\n  const renderRentOrder = (rentOrder, idx) => {\n    return /*#__PURE__*/_jsxDEV(ChartRent, {\n      removeRentOrder: props.removeRentOrder,\n      rentOrder: rentOrder\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }, this);\n  };\n\n  const renderProduts = cartProducts => {\n    const cartProductElements = [];\n    cartProducts.forEach(cartProduct => {\n      cartProductElements.push( /*#__PURE__*/_jsxDEV(ChartProduct, {\n        img: cartProduct.img,\n        name: cartProduct.name,\n        price: cartProduct.price,\n        quantity: cartProduct.quantity,\n        id: cartProduct.id,\n        removeProduct: props.removeProduct,\n        minusProduct: props.minusProduct,\n        plusProduct: props.plusProduct\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this));\n    });\n    return cartProductElements;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.productDisplay,\n    children: [/*#__PURE__*/_jsxDEV(ReactNotification, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Seus Produtos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.productList,\n      children: [props.cartProducts.size !== 0 && /*#__PURE__*/_jsxDEV(ProductList, {\n        products: renderProduts(props.cartProducts),\n        title: \"Compras\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 43\n      }, this), props.rentOrders.length !== 0 && /*#__PURE__*/_jsxDEV(ProductList, {\n        products: props.rentOrders.map(renderRentOrder),\n        title: \"Alugueis\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 43\n      }, this), props.cartProducts.size === 0 && props.rentOrders.length === 0 && /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Voc\\xEA n\\xE3o tem nenhum produto no carrinho :(\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 76\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this), (props.cartProducts.size !== 0 || props.rentOrders.length !== 0) && /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Total: \", \"R$ \" + getFinalPrice().toFixed(2)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 76\n    }, this), (props.cartProducts.size !== 0 || props.rentOrders.length !== 0) && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Continuar comprando\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 24\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 11\n      }, this), props.user !== null && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: placePurchaseOrder,\n        children: \"Finalizar compra\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 35\n      }, this), props.user === null && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: notifyLogin,\n        children: \"Finalizar compra\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 35\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 149,\n    columnNumber: 5\n  }, this);\n};\n\n_c = ChartPage;\n\nconst mapStateToProps = state => ({\n  cartProducts: state.cartProducts,\n  rentOrders: state.rentOrders,\n  user: state.user\n});\n\nconst mapDispatchToProps = dispatch => ({\n  removeProduct: id => {\n    dispatch(removeProductFromCartRequest(id));\n  },\n  placePurchaseOrder: (user, order) => {\n    dispatch(placePurchaseOrderRequest(user, order));\n  },\n  clearCart: () => {\n    dispatch(clearProductInCartRequest());\n  },\n  placeRentOrders: (rentOrders, user) => {\n    dispatch(placeRentOrdersRequest(rentOrders, user));\n  },\n  minusProduct: id => {\n    dispatch(minusProductInCartRequest(id));\n  },\n  plusProduct: id => {\n    dispatch(plusProductInCartRequest(id));\n  },\n  removeRentOrder: rentOrderId => {\n    dispatch(removeRentOrderRequest(rentOrderId));\n  }\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ChartPage);\n\nvar _c;\n\n$RefreshReg$(_c, \"ChartPage\");","map":{"version":3,"sources":["/Users/matheuscunha/USP/Plantshop/src/packages/cart/src/components/ChartPage/ChartPage.tsx"],"names":["connect","Link","clearProductInCartRequest","minusProductInCartRequest","placePurchaseOrderRequest","placeRentOrdersRequest","plusProductInCartRequest","removeProductFromCartRequest","removeRentOrderRequest","ChartProduct","styles","ReactNotification","store","ChartRent","ProductList","ChartPage","props","getFinalPrice","finalPrice","cartProducts","forEach","product","parseFloat","price","quantity","rentOrders","rentOrder","total","placePurchaseOrder","size","totalPrice","productsOrders","newProductOrder","id","name","push","day","Date","dd","getDate","toString","mm","getMonth","yyyy","getFullYear","parseInt","newOrder","date","toFixed","status","user","length","placeRentOrders","clearCart","addNotification","title","message","type","insert","container","animationIn","animationOut","dismiss","duration","onScreen","notifyLogin","renderRentOrder","idx","removeRentOrder","renderProduts","cartProductElements","cartProduct","img","removeProduct","minusProduct","plusProduct","productDisplay","productList","map","mapStateToProps","state","mapDispatchToProps","dispatch","order","rentOrderId"],"mappings":"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","sourcesContent":["import { connect } from 'react-redux'\nimport { Dispatch } from 'redux'\nimport { Link } from 'react-router-dom'\nimport { clearProductInCartRequest, minusProductInCartRequest, placePurchaseOrderRequest, placeRentOrdersRequest, plusProductInCartRequest, removeProductFromCartRequest, removeRentOrderRequest } from '../../../../../store/actionCreators'\nimport { ApplicationState, Order, ProductModel, ProductOrder, RentOrder, User} from '../../../../../store/types'\nimport ChartProduct  from '../ChartProduct/ChartProduct'\nimport * as styles from './styles'\nimport ReactNotification, { store } from 'react-notifications-component'\nimport 'react-notifications-component/dist/theme.css'\nimport ChartRent from '../ChartRent/ChartRent'\nimport ProductList from '../ProductList'\nimport { ReactElement } from 'react'\n\nexport interface ChartPageProps{\n  user: User | null;\n  cartProducts: Map<string, ProductModel>;\n  rentOrders: RentOrder[];\n  removeProduct: (id: string) => void;\n  removeRentOrder: (rentOrderId: number) => void;\n  minusProduct: (id: string) => void;\n\tplusProduct: (id: string) => void;\n  placePurchaseOrder:(user: User, order: Order) => void;\n  placeRentOrders:(rentOrders: RentOrder[], user: User) => void;\n  clearCart: () => void;\n}\n\nconst ChartPage: React.FC<ChartPageProps> = (props) => {\n\n  const getFinalPrice = () => {\n    let finalPrice: number = 0.0;\n\n    props.cartProducts.forEach((product) => {\n      finalPrice += parseFloat(product.price) * product.quantity;\n    });\n\n    props.rentOrders.forEach((rentOrder) => finalPrice += parseFloat(rentOrder.total));\n\n    return finalPrice;\n  }\n\n  const placePurchaseOrder = () => {\n\n    if(props.cartProducts.size !== 0){\n      let totalPrice: number = 0;\n      let productsOrders: ProductOrder[] = [];\n      \n      props.cartProducts.forEach((product) => {\n        totalPrice += parseFloat(product.price) * product.quantity;\n\n        const newProductOrder: ProductOrder = {\n          id: product.id, \n          name: product.name, \n          price: product.price, \n          quantity: product.quantity\n        }\n\n        // draft.products.forEach((value, idx) => {\n        //   if(value.id === product.id){\n        //     draft.products[idx].quantity -= product.quantity;\n        //   }\n        // })\n\n        productsOrders.push(newProductOrder);\n      });\n      \n      var day = new Date();\n      var dd = day.getDate().toString();\n      var mm = (day.getMonth()+1).toString();\n      var yyyy = (day.getFullYear()).toString();\n      if(parseInt(dd) < 10){\n        dd = '0' + dd;\n      } \n      if(parseInt(mm)<10){\n        mm = '0' + mm;\n      } \n\n      const newOrder: Order = {\n        productsOrders: productsOrders,\n        date: dd + \"/\" + mm + \"/\" + yyyy,\n        total: totalPrice.toFixed(2),\n        status: \"Preparando para envio!\",\n      }\n\n      props.placePurchaseOrder(props.user!, newOrder);\n    }\n\n    if(props.rentOrders.length !== 0) {\n      props.placeRentOrders(props.rentOrders, props.user!);\n    }\n\n    props.clearCart();\n\n    store.addNotification({\n      title: \"Pedido feito com sucesso!\",\n      message: \" \",\n      type: \"success\",\n      insert: \"top\",\n      container: \"top-left\",\n      animationIn: [\"animate__animated\", \"animate__fadeIn\"],\n      animationOut: [\"animate__animated\", \"animate__fadeOut\"],\n      dismiss: {\n        duration: 2000,\n        onScreen: false\n      }\n      });\n  }\n  const notifyLogin = () => {\n      store.addNotification({\n        title: \"Por favor faÃ§a login antes de finalizar a compra.\",\n        message: \" \",\n        type: \"warning\",\n        insert: \"top\",\n        container: \"top-left\",\n        animationIn: [\"animate__animated\", \"animate__fadeIn\"],\n        animationOut: [\"animate__animated\", \"animate__fadeOut\"],\n        dismiss: {\n          duration: 2000,\n          onScreen: false\n        }\n      });\n  }\n\n  const renderRentOrder = (rentOrder: RentOrder, idx: number) => {\n    return (<ChartRent removeRentOrder={props.removeRentOrder} rentOrder={rentOrder}/>);\n  }\n\n  const renderProduts = (cartProducts: Map<string, ProductModel>) =>{\n\n    const cartProductElements: ReactElement[] = [];\n\n    cartProducts.forEach((cartProduct) => {\n      cartProductElements.push(\n        <ChartProduct \n          img={cartProduct.img} \n          name={cartProduct.name} \n          price={cartProduct.price} \n          quantity={cartProduct.quantity}\n          id={cartProduct.id} \n          removeProduct={props.removeProduct} \n          minusProduct={props.minusProduct}\n          plusProduct={props.plusProduct}\n        />);\n    });\n\n    return(cartProductElements);\n  }\n\n  return(\n    <div className={styles.productDisplay}>\n      <ReactNotification/>\n      <h1>Seus Produtos</h1>\n\n      \n      <div className={styles.productList}>\n        {/* {props.cartProducts.size !== 0 && renderProduts(props.cartProducts)} */}\n        {props.cartProducts.size !== 0 && <ProductList products={renderProduts(props.cartProducts)} title={\"Compras\"} />}\n        {/* {props.rentOrders.length !== 0 && props.rentOrders.map(renderRentOrder)} */}\n\n        {props.rentOrders.length !== 0 && <ProductList products={props.rentOrders.map(renderRentOrder)} title={\"Alugueis\"}/>}\n        {props.cartProducts.size === 0 && props.rentOrders.length === 0 && <h2>VocÃª nÃ£o tem nenhum produto no carrinho :(</h2>}\n      </div>\n      \n      {(props.cartProducts.size !== 0 || props.rentOrders.length !== 0) && <h1>Total: {\"R$ \" + getFinalPrice().toFixed(2)}</h1>}\n      {(props.cartProducts.size !== 0 || props.rentOrders.length !== 0) &&\n        <div>\n          <Link to=\"/\"><button>Continuar comprando</button></Link>\n          {props.user !== null && <button onClick={placePurchaseOrder}>Finalizar compra</button>}\n          {props.user === null && <button onClick={notifyLogin}>Finalizar compra</button>}\n        </div>\n      }\n    </div>\n  );\n}\n\ninterface DispatchProps {\n  removeProduct: (id: string) => void;\n  minusProduct: (id: string) => void;\n\tplusProduct: (id: string) => void;\n  removeRentOrder: (rentOrderId: number) => void;\n  placePurchaseOrder:(user: User, order: Order) => void;\n  placeRentOrders:(rentOrders: RentOrder[], user: User) => void;\n  clearCart: () => void;\n}\n\ninterface StateProps{\n  cartProducts: Map<string, ProductModel>;\n  rentOrders: RentOrder[];\n  user: User | null;\n}\n\nconst mapStateToProps = (state: ApplicationState): StateProps => ({\n  cartProducts: state.cartProducts,\n  rentOrders: state.rentOrders,\n  user: state.user\n  \n});\n\nconst mapDispatchToProps = (dispatch: Dispatch): DispatchProps => ({\n  removeProduct:(id) => {dispatch(removeProductFromCartRequest(id))},\n  placePurchaseOrder:(user: User, order: Order)  => {dispatch(placePurchaseOrderRequest(user, order))},\n  clearCart: () => {dispatch(clearProductInCartRequest())},\n  placeRentOrders:(rentOrders: RentOrder[], user: User) => {dispatch(placeRentOrdersRequest(rentOrders, user))},\n  minusProduct: (id) => {dispatch(minusProductInCartRequest(id))},\n  plusProduct: (id) => {dispatch(plusProductInCartRequest(id))},\n  removeRentOrder:(rentOrderId) => {dispatch(removeRentOrderRequest(rentOrderId))}\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ChartPage);"]},"metadata":{},"sourceType":"module"}