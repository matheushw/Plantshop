{"ast":null,"code":"import produce from 'immer';\nimport { products } from '../mock-objects/products';\nexport const initialState = {\n  loading: {\n    user: false\n  },\n  user: null,\n  products: products,\n  cartProducts: [],\n  usersList: []\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"loadUsersRequest\":\n      return produce(state, draft => {\n        draft.loading.user = true;\n      });\n\n    case \"loadUsersSuccess\":\n      return produce(state, draft => {\n        draft.loading.user = false;\n        draft.user = action.user;\n      });\n\n    case \"loadUsersError\":\n      return produce(state, draft => {\n        draft.loading.user = false;\n      });\n\n    case \"addProductToChart\":\n      return produce(state, draft => {\n        draft.cartProducts = state.cartProducts.concat([action.product]);\n      });\n\n    case \"removeProductToChart\":\n      return produce(state, draft => {\n        // draft.cartProducts = state.cartProducts.filter((value) => value.id !== action.id);\n        draft.cartProducts = [];\n        let removed = false;\n        state.cartProducts.forEach(product => {\n          if (!removed && product.id === action.id) {\n            removed = true;\n          } else {\n            draft.cartProducts.push(product);\n          }\n        });\n      });\n\n    case \"logInUser\":\n      return produce(state, draft => {\n        const user = {\n          email: action.email,\n          password: action.password,\n          name: '',\n          address: '',\n          phoneNumber: ''\n        };\n        draft.user = user; //draft.usersList.push(draft.user); \n      });\n\n    case \"signUpUser\":\n      return produce(state, draft => {\n        const user = {\n          email: action.email,\n          password: action.password,\n          name: action.name,\n          address: action.address,\n          phoneNumber: action.phoneNumber\n        };\n        draft.user = user;\n        draft.usersList.push(draft.user);\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/matheuscunha/USP/Plantshop/ps/src/store/reducer.ts"],"names":["produce","products","initialState","loading","user","cartProducts","usersList","reducer","state","action","type","draft","concat","product","removed","forEach","id","push","email","password","name","address","phoneNumber"],"mappings":"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","sourcesContent":["import produce from 'immer';\nimport { products } from '../mock-objects/products';\nimport { ApplicationState, ApplicationAction, User } from './types';\n\nexport const initialState: ApplicationState = {\n  loading: {\n    user: false,\n  },\n  user: null,\n  products: products,\n  cartProducts: [],\n  usersList: [],\n}\n\nconst reducer = (state = initialState, action: ApplicationAction) => {\n  switch (action.type) {\n    case \"loadUsersRequest\":\n      return produce(state, draft => {\n        draft.loading.user = true;\n      });\n    case \"loadUsersSuccess\":\n      return produce(state, draft => {\n        draft.loading.user = false;\n        draft.user = action.user;\n      });\n    case \"loadUsersError\":\n      return produce(state, draft => {\n        draft.loading.user = false;\n      });\n    case \"addProductToChart\":\n      return produce(state, draft => {\n        draft.cartProducts = state.cartProducts.concat([action.product]);\n      });\n    case \"removeProductToChart\":\n      return produce(state, draft => {\n        // draft.cartProducts = state.cartProducts.filter((value) => value.id !== action.id);\n        draft.cartProducts = [];\n        let removed: boolean = false;\n        state.cartProducts.forEach((product) => {\n          if(!removed && product.id === action.id){\n            removed = true;\n          } else {\n            draft.cartProducts.push(product);\n          }\n        })\n      });\n    case \"logInUser\":\n      return produce(state, draft => {\n        const user: User = {\n            email: action.email,\n            password: action.password,\n            name: '',\n            address: '',\n            phoneNumber: '',\n        }\n        draft.user = user;\n        //draft.usersList.push(draft.user); \n      });\n    case \"signUpUser\":\n      return produce(state, draft => {\n        const user: User = {\n            email: action.email,\n            password: action.password,\n            name: action.name,\n            address: action.address,\n            phoneNumber: action.phoneNumber,\n        }\n        draft.user = user;\n        draft.usersList.push(draft.user); \n      });\n    default:\n      return state;\n  }\n}\n\nexport default reducer;"]},"metadata":{},"sourceType":"module"}