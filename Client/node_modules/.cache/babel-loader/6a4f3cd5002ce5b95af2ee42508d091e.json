{"ast":null,"code":"var _jsxFileName = \"/Users/matheuscunha/USP/Plantshop/ps/src/packages/cart/src/components/ChartPage/ChartPage.tsx\";\nimport { connect } from 'react-redux';\nimport { clearCart, placeOrder, removeProductToChart } from '../../../../../store/actions';\nimport ChartProduct from '../ChartProduct/ChartProduct';\nimport * as styles from './styles';\nimport ReactNotification, { store } from 'react-notifications-component';\nimport 'react-notifications-component/dist/theme.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ChartPage = props => {\n  const getFinalPrice = () => {\n    let finalPrice = 0.0;\n    props.cartProducts.forEach(product => {\n      finalPrice += parseFloat(product.price) * product.quantity;\n    });\n    return finalPrice;\n  };\n\n  const placeOrder = () => {\n    props.placeOrder();\n    props.clearCart();\n    store.addNotification({\n      title: \"Pedido feito com sucesso!\",\n      message: \" \",\n      type: \"success\",\n      insert: \"top\",\n      container: \"top-left\",\n      animationIn: [\"animate__animated\", \"animate__fadeIn\"],\n      animationOut: [\"animate__animated\", \"animate__fadeOut\"],\n      dismiss: {\n        duration: 2000,\n        onScreen: false\n      }\n    });\n  };\n\n  const renderProduts = cartProducts => {\n    const cartProductElements = [];\n    cartProducts.forEach(cartProduct => {\n      cartProductElements.push( /*#__PURE__*/_jsxDEV(ChartProduct, {\n        img: cartProduct.img,\n        name: cartProduct.name,\n        price: cartProduct.price,\n        id: cartProduct.id,\n        removeProduct: props.removeProduct\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this));\n    });\n    return cartProductElements;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.productDisplay,\n    children: [/*#__PURE__*/_jsxDEV(ReactNotification, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Seus Produtos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.productList,\n      children: [props.cartProducts.size !== 0 && renderProduts(props.cartProducts), props.cartProducts.size === 0 && /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Voc\\xEA n\\xE3o tem nenhum produto no carrinho :(\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 43\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), props.cartProducts.size !== 0 && /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Total: \", \"R$ \" + getFinalPrice().toFixed(2)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 41\n    }, this), props.cartProducts.size !== 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Continuar comprando\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: placeOrder,\n        children: \"Finalizar compra\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n\n_c = ChartPage;\n\nconst mapStateToProps = state => ({\n  cartProducts: state.cartProducts\n});\n\nconst mapDispatchToProps = dispatch => ({\n  removeProduct: id => {\n    dispatch(removeProductToChart(id));\n  },\n  placeOrder: () => {\n    dispatch(placeOrder());\n  },\n  clearCart: () => dispatch(clearCart())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ChartPage);\n\nvar _c;\n\n$RefreshReg$(_c, \"ChartPage\");","map":{"version":3,"sources":["/Users/matheuscunha/USP/Plantshop/ps/src/packages/cart/src/components/ChartPage/ChartPage.tsx"],"names":["connect","clearCart","placeOrder","removeProductToChart","ChartProduct","styles","ReactNotification","store","ChartPage","props","getFinalPrice","finalPrice","cartProducts","forEach","product","parseFloat","price","quantity","addNotification","title","message","type","insert","container","animationIn","animationOut","dismiss","duration","onScreen","renderProduts","cartProductElements","cartProduct","push","img","name","id","removeProduct","productDisplay","productList","size","toFixed","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import { connect } from 'react-redux'\nimport { Dispatch } from 'redux'\nimport { clearCart, placeOrder, removeProductToChart } from '../../../../../store/actions'\nimport { ApplicationState, ProductModel } from '../../../../../store/types'\nimport ChartProduct  from '../ChartProduct/ChartProduct'\nimport * as styles from './styles'\nimport ReactNotification, { store } from 'react-notifications-component';\nimport 'react-notifications-component/dist/theme.css';\nimport { ReactNode } from 'react'\n\nexport interface ChartPageProps{\n  cartProducts: Map<string, ProductModel>;\n  removeProduct: (id: string) => void;\n  placeOrder: () => void;\n  clearCart: () => void;\n}\n\nconst ChartPage: React.FC<ChartPageProps> = (props) => {\n\n  const getFinalPrice = () => {\n    let finalPrice: number = 0.0;\n\n    props.cartProducts.forEach((product) => {\n      finalPrice += parseFloat(product.price) * product.quantity;\n    });\n\n    return finalPrice;\n  }\n\n  const placeOrder = () => {\n\n    props.placeOrder();\n    props.clearCart();\n\n    store.addNotification({\n      title: \"Pedido feito com sucesso!\",\n      message: \" \",\n      type: \"success\",\n      insert: \"top\",\n      container: \"top-left\",\n      animationIn: [\"animate__animated\", \"animate__fadeIn\"],\n      animationOut: [\"animate__animated\", \"animate__fadeOut\"],\n      dismiss: {\n        duration: 2000,\n        onScreen: false\n      }\n      });\n  }\n  \n\n  const renderProduts = (cartProducts: Map<string, ProductModel>) =>{\n\n    const cartProductElements: ReactNode[] = [];\n\n    cartProducts.forEach((cartProduct) => {\n      cartProductElements.push(\n        <ChartProduct \n          img={cartProduct.img} \n          name={cartProduct.name} \n          price={cartProduct.price} \n          id={cartProduct.id} \n          removeProduct={props.removeProduct} \n        />);\n    });\n\n    return(cartProductElements);\n  }\n\n  return(\n    <div className={styles.productDisplay}>\n      <ReactNotification/>\n      <h1>Seus Produtos</h1>\n\n      <div className={styles.productList}>\n        {props.cartProducts.size !== 0 && renderProduts(props.cartProducts)}\n        {props.cartProducts.size === 0 && <h2>Você não tem nenhum produto no carrinho :(</h2>}\n      </div>\n\n      {props.cartProducts.size !== 0 && <h1>Total: {\"R$ \" + getFinalPrice().toFixed(2)}</h1>}\n    \n      {props.cartProducts.size !== 0 && \n        <div>\n          <button>Continuar comprando</button>\n          <button onClick={placeOrder}>Finalizar compra</button>\n        </div>\n      }\n    </div>\n  );\n}\n\ninterface DispatchProps {\n  removeProduct: (id: string) => void;\n  placeOrder: () => void;\n  clearCart: () => void;\n}\ninterface StateProps{\n  cartProducts: Map<string, ProductModel>;\n}\n\nconst mapStateToProps = (state: ApplicationState): StateProps => ({\n  cartProducts: state.cartProducts\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch): DispatchProps => ({\n  removeProduct:(id) => {dispatch(removeProductToChart(id))},\n  placeOrder:() => {dispatch(placeOrder())},\n  clearCart: () => (dispatch(clearCart())),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ChartPage);"]},"metadata":{},"sourceType":"module"}