{"ast":null,"code":"var _jsxFileName = \"/Users/matheuscunha/USP/Plantshop/src/packages/profile/src/components/ProfilePage/ProfilePage.tsx\",\n    _s = $RefreshSig$();\n\nimport { connect } from 'react-redux';\nimport PurchaseInfo from '../PurchaseInfo';\nimport * as styles from './styles';\nimport { editUserRequest, loadAllOrdersRequest } from '../../../../../store/actionCreators';\nimport { useForm } from '../../../../useForm';\nimport { useHistory } from 'react-router';\nimport RentInfo from '../RentInfo';\nimport { useEffect } from 'react';\nimport ReactNotification, { store } from 'react-notifications-component';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProfilePage = props => {\n  _s();\n\n  //Purchase\n  const renderOrders = (order, idx) => {\n    return /*#__PURE__*/_jsxDEV(PurchaseInfo, {\n      number: idx + 1,\n      date: order.date,\n      price: order.total,\n      productsOrders: order.productsOrders,\n      status: order.status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this);\n  };\n\n  const renderRentedproduct = (rentedProduct, idx) => {\n    return /*#__PURE__*/_jsxDEV(RentInfo, {\n      rentOrder: rentedProduct\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 4\n    }, this);\n  }; //Edit Profile\n\n\n  const history = useHistory();\n  useEffect(() => {\n    if (props.user) {\n      props.loadAllOrders(props.user);\n    }\n  }, [props.user]);\n  useEffect(() => {\n    if (props.editError) {\n      store.addNotification({\n        title: \"Este email já existe. Tente com outro!\",\n        message: \" \",\n        type: \"danger\",\n        insert: \"top\",\n        container: \"top-left\",\n        animationIn: [\"animate__animated\", \"animate__fadeIn\"],\n        animationOut: [\"animate__animated\", \"animate__fadeOut\"],\n        dismiss: {\n          duration: 2000,\n          onScreen: false\n        }\n      });\n      setTimeout(function () {\n        window.location.reload();\n      }, 1000);\n    }\n\n    if (props.editSuccess) {\n      store.addNotification({\n        title: \"Suas alterações foram salvas!\",\n        message: \" \",\n        type: \"success\",\n        insert: \"top\",\n        container: \"top-left\",\n        animationIn: [\"animate__animated\", \"animate__fadeIn\"],\n        animationOut: [\"animate__animated\", \"animate__fadeOut\"],\n        dismiss: {\n          duration: 2000,\n          onScreen: false\n        }\n      });\n    }\n  }, [props.editSuccess, props.editError]);\n  const initialState = {\n    user: props.user\n  };\n\n  async function editProfileCallback() {\n    const input = JSON.parse(JSON.stringify(values));\n    let fs = document.getElementsByTagName(\"fieldset\")[0];\n    let eb = document.getElementById(\"editButton\");\n\n    if (eb !== null && fs !== null) {\n      if (eb.innerHTML === \"Editar\") {\n        eb.innerHTML = \"Salvar mudanças\";\n        fs.disabled = false;\n      } else {\n        eb.innerHTML = \"Editar\";\n\n        if (props.user) {\n          props.editUserInfo(input.name ? input.name : props.user.name, input.address ? input.address : props.user.address, input.phoneNumber ? input.phoneNumber : props.user.phoneNumber, input.email ? input.email : props.user.email, props.user.id);\n        }\n\n        fs.disabled = true;\n      }\n\n      history.push('./profile');\n    }\n  }\n\n  const {\n    onChange,\n    onSubmit,\n    values\n  } = useForm(editProfileCallback, initialState);\n  return props.user && /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.profilePageWrapper,\n    children: [/*#__PURE__*/_jsxDEV(ReactNotification, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.infoDisplay,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Perfil\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.infos,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\" Dados da conta de \", props.user.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: onSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"fieldset\", {\n            disabled: true,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 124,\n                  columnNumber: 11\n                }, this), \"Nome: \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 125,\n                  columnNumber: 17\n                }, this), \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  name: \"name\",\n                  id: \"name\",\n                  onChange: onChange,\n                  defaultValue: props.user.name,\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 125,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 132,\n                  columnNumber: 11\n                }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 132,\n                  columnNumber: 16\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 10\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                children: [\"Endere\\xE7o: \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 136,\n                  columnNumber: 21\n                }, this), \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  name: \"address\",\n                  id: \"address\",\n                  defaultValue: props.user.address,\n                  onChange: onChange,\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 136,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 142,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 143,\n                  columnNumber: 11\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 10\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                children: [\"Telefone: \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 147,\n                  columnNumber: 21\n                }, this), \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  name: \"phoneNumber\",\n                  id: \"phoneNumber\",\n                  defaultValue: props.user.phoneNumber,\n                  onChange: onChange,\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 147,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 153,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 154,\n                  columnNumber: 11\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 146,\n                columnNumber: 10\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                children: [\"Email: \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 158,\n                  columnNumber: 18\n                }, this), \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"email\",\n                  name: \"email\",\n                  id: \"email\",\n                  defaultValue: props.user.email,\n                  onChange: onChange,\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 158,\n                  columnNumber: 24\n                }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 164,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 165,\n                  columnNumber: 11\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 10\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              id: \"editButton\",\n              type: \"submit\",\n              children: \"Editar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 8\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.purchaseList,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \" Meus pedidos\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [props.orders.map(renderOrders), props.rentedProducts.map(renderRentedproduct)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 3\n  }, this);\n};\n\n_s(ProfilePage, \"Y4IXrIUBT4wk0pEdNP4Rz71wlAY=\", false, function () {\n  return [useHistory, useForm];\n});\n\n_c = ProfilePage;\n\nconst mapStateToProps = state => ({\n  orders: state.orders,\n  user: state.user,\n  allUsers: state.usersList,\n  rentedProducts: state.rentedProducts,\n  editSuccess: state.success.editUser,\n  editError: state.error.editUser\n});\n\nconst mapDispatchToProps = dispatch => ({\n  editUserInfo: (name, address, phoneNumber, email, id) => {\n    dispatch(editUserRequest(name, address, phoneNumber, email, id));\n  },\n  loadAllOrders: user => {\n    dispatch(loadAllOrdersRequest(user));\n  }\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProfilePage);\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfilePage\");","map":{"version":3,"sources":["/Users/matheuscunha/USP/Plantshop/src/packages/profile/src/components/ProfilePage/ProfilePage.tsx"],"names":["connect","PurchaseInfo","styles","editUserRequest","loadAllOrdersRequest","useForm","useHistory","RentInfo","useEffect","ReactNotification","store","ProfilePage","props","renderOrders","order","idx","date","total","productsOrders","status","renderRentedproduct","rentedProduct","history","user","loadAllOrders","editError","addNotification","title","message","type","insert","container","animationIn","animationOut","dismiss","duration","onScreen","setTimeout","window","location","reload","editSuccess","initialState","editProfileCallback","input","JSON","parse","stringify","values","fs","document","getElementsByTagName","eb","getElementById","innerHTML","disabled","editUserInfo","name","address","phoneNumber","email","id","push","onChange","onSubmit","profilePageWrapper","infoDisplay","infos","purchaseList","orders","map","rentedProducts","mapStateToProps","state","allUsers","usersList","success","editUser","error","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import { connect } from 'react-redux';\nimport { Dispatch } from 'redux';\nimport { ApplicationState, Order , RentOrder, User} from '../../../../../store/types';\nimport PurchaseInfo from '../PurchaseInfo';\nimport * as styles from './styles'\nimport { editUserRequest, loadAllOrdersRequest } from '../../../../../store/actionCreators';\nimport { useForm } from '../../../../useForm';\nimport {useHistory} from 'react-router';\nimport RentInfo from '../RentInfo';\nimport { useEffect } from 'react';\nimport ReactNotification, { store } from 'react-notifications-component';\n\n\nexport interface ProfilePageProps{\n  orders: Order[],\n  user: User,\n  allUsers: User[],\n\trentedProducts: RentOrder[],\n\teditSuccess: boolean,\n\teditError: boolean,\n  editUserInfo: (name: string, address: string, phoneNumber: string, email: string, id: string\n    ) => void,\n\tloadAllOrders: (user: User) => void,\n}\n\nconst ProfilePage: React.FC<ProfilePageProps> = (props) => {\n  //Purchase\n  const renderOrders = (order: Order, idx: number) =>{\n    return(\n      <PurchaseInfo number = {(idx+1)} date = {order.date} price = {order.total} productsOrders={order.productsOrders} status={order.status} />\n    );\n  }\n\n\tconst renderRentedproduct = (rentedProduct: RentOrder, idx: number) => {\n\t\treturn (\n\t\t\t<RentInfo rentOrder={rentedProduct} />\n\t\t);\n\t}\n\n  //Edit Profile\n  const history = useHistory();\n\n\tuseEffect(() => {\n\t\tif(props.user){\n\t\t\tprops.loadAllOrders(props.user);\n\t\t}\n\t}, [props.user]);\n\t\n\tuseEffect(() => \n\t{\n\t\tif(props.editError){\n\t\t\tstore.addNotification({\n\t\t\t\ttitle: \"Este email já existe. Tente com outro!\",\n\t\t\t\tmessage: \" \",\n\t\t\t\ttype: \"danger\",\n\t\t\t\tinsert: \"top\",\n\t\t\t\tcontainer: \"top-left\",\n\t\t\t\tanimationIn: [\"animate__animated\", \"animate__fadeIn\"],\n\t\t\t\tanimationOut: [\"animate__animated\", \"animate__fadeOut\"],\n\t\t\t\tdismiss: {\n\t\t\t\t  duration: 2000,\n\t\t\t\t  onScreen: false\n\t\t\t\t}\n\t\t\t});\n\t\t\tsetTimeout(function (){\n\t\t\t\twindow.location.reload();\n\t\t\t}, 1000);\n\t\t\t\n\t\t}\n\t\tif(props.editSuccess){\n\t\t\tstore.addNotification({\n\t\t\t\ttitle: \"Suas alterações foram salvas!\",\n\t\t\t\tmessage: \" \",\n\t\t\t\ttype: \"success\",\n\t\t\t\tinsert: \"top\",\n\t\t\t\tcontainer: \"top-left\",\n\t\t\t\tanimationIn: [\"animate__animated\", \"animate__fadeIn\"],\n\t\t\t\tanimationOut: [\"animate__animated\", \"animate__fadeOut\"],\n\t\t\t\tdismiss: {\n\t\t\t\t\tduration: 2000,\n\t\t\t\t\tonScreen: false\n\t\t\t\t}\n\t\t\t});\t\n\t\t}\n\t}, [props.editSuccess, props.editError]);\n\n\tconst initialState = {\n\t\tuser: props.user,\n\t}\n\n\tasync function editProfileCallback(){\n\t\tconst input = JSON.parse(JSON.stringify(values))\n\t\tlet fs = document.getElementsByTagName(\"fieldset\")[0];\n\t\tlet eb = document.getElementById(\"editButton\");\n\t\tif(eb !== null && fs !== null){\n\t\t\tif(eb.innerHTML === \"Editar\"){\n\t\t\t\teb.innerHTML = \"Salvar mudanças\"\n\t\t\t\tfs.disabled = false\t\n\t\t\t}else{\n\t\t\t\teb.innerHTML = \"Editar\"\n\t\t\t\tif(props.user){\n\t\t\t\t\tprops.editUserInfo(input.name ? input.name : props.user.name , input.address ? input.address:props.user.address, input.phoneNumber ? input.phoneNumber:props.user.phoneNumber, input.email ? input.email:props.user.email, props.user.id)\n\t\t\t\t}\n\t\t\t\tfs.disabled = true\n\t\t\t}\n\t\t\thistory.push('./profile')\n\t\t}\n\t}\n\n\tconst { onChange, onSubmit, values} = useForm(editProfileCallback, initialState); \n\n\treturn ( props.user &&\n\t\t<div className={styles.profilePageWrapper}>\n\t\t\t<ReactNotification/>\n\t\t\t<div className={styles.infoDisplay}>\n\t\t\t\t<h1>Perfil</h1>\n\n\t\t\t\t<div className={styles.infos}>\n\t\t\t\t\t<h2> Dados da conta de {props.user.name}</h2>\n\t\t\t\t\t\t<form onSubmit={onSubmit}>\n\t\t\t\t\t\t\t<fieldset disabled={true}>\n\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t<label>\n\t\t\t\t\t\t\t\t\t\t<br/>\n\t\t\t\t\t\t\t\t\t\tNome: <br/> <input \n\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\tname=\"name\"\n\t\t\t\t\t\t\t\t\t\tid=\"name\" \n\t\t\t\t\t\t\t\t\t\tonChange={onChange} \n\t\t\t\t\t\t\t\t\t\tdefaultValue={props.user.name}\n\t\t\t\t\t\t\t\t\t\trequired/> \n\t\t\t\t\t\t\t\t\t\t<br/><br/>\n\t\t\t\t\t\t\t\t\t</label>\n\n\t\t\t\t\t\t\t\t\t<label>\n\t\t\t\t\t\t\t\t\t\tEndereço: <br/> <input \n\t\t\t\t\t\t\t\t\t\ttype=\"text\" \n\t\t\t\t\t\t\t\t\t\tname=\"address\" \n\t\t\t\t\t\t\t\t\t\tid=\"address\"\n\t\t\t\t\t\t\t\t\t\tdefaultValue={props.user.address}\n\t\t\t\t\t\t\t\t\t\tonChange={onChange}\n\t\t\t\t\t\t\t\t\t\trequired/><br/>\n\t\t\t\t\t\t\t\t\t\t<br/>\n\t\t\t\t\t\t\t\t\t</label>\n\n\t\t\t\t\t\t\t\t\t<label>\n\t\t\t\t\t\t\t\t\t\tTelefone: <br/> <input \n\t\t\t\t\t\t\t\t\t\ttype=\"text\" \n\t\t\t\t\t\t\t\t\t\tname=\"phoneNumber\" \n\t\t\t\t\t\t\t\t\t\tid=\"phoneNumber\"\n\t\t\t\t\t\t\t\t\t\tdefaultValue={props.user.phoneNumber}\n\t\t\t\t\t\t\t\t\t\tonChange={onChange}\n\t\t\t\t\t\t\t\t\t\trequired/><br/>\n\t\t\t\t\t\t\t\t\t\t<br/>\n\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t<label>\n\t\t\t\t\t\t\t\t\t\tEmail: <br/> <input \n\t\t\t\t\t\t\t\t\t\ttype=\"email\" \n\t\t\t\t\t\t\t\t\t\tname=\"email\" \n\t\t\t\t\t\t\t\t\t\tid=\"email\"\n\t\t\t\t\t\t\t\t\t\tdefaultValue={props.user.email}\n\t\t\t\t\t\t\t\t\t\tonChange={onChange}\n\t\t\t\t\t\t\t\t\t\trequired/><br/>\n\t\t\t\t\t\t\t\t\t\t<br/>\n\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</fieldset>\n\n\t\t\t\t\t\t\t<label>\n\t\t\t\t\t\t\t\t<button id=\"editButton\" type=\"submit\">Editar</button>\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t</form>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t<div className={styles.purchaseList}>\n\t\t\t\t<h1> Meus pedidos</h1>\n\t\t\t\t<div>\n\t\t\t\t\t{props.orders.map(renderOrders)}\n\t\t\t\t\t{props.rentedProducts.map(renderRentedproduct)}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n  );\n}\n\ninterface DispatchProps {\n  editUserInfo: (name: string, address: string, phoneNumber: string, email: string, id: string\n    ) => void,\n\tloadAllOrders: (user: User) => void\n}\n\ninterface StateProps{\n  orders: Order[];\n  user: User;\n  allUsers: User[];\n\trentedProducts: RentOrder[];\n\teditSuccess: boolean;\n\teditError: boolean;\n}\n\nconst mapStateToProps = (state: ApplicationState): StateProps => ({\n  orders: state.orders,\n  user: state.user!,\n  allUsers: state.usersList,\n  rentedProducts: state.rentedProducts,\n  editSuccess: state.success.editUser,\n  editError: state.error.editUser\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch): DispatchProps => ({\n  editUserInfo:(name, address, phoneNumber, email, id) => {dispatch(editUserRequest(name, address, phoneNumber, email, id))},\n\tloadAllOrders: (user) => {dispatch(loadAllOrdersRequest(user))},\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProfilePage);"]},"metadata":{},"sourceType":"module"}