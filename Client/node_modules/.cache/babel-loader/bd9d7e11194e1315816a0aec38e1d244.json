{"ast":null,"code":"var _jsxFileName = \"/Users/matheuscunha/USP/Plantshop/ps/src/packages/admin/src/components/InventoryPage/InventoryPage.tsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport ManageButton from '../../../../../base-components/ManageButton';\nimport InventoryList from '../InventoryList';\nimport * as styles from './styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst InventoryPage = props => {\n  const splitProducts = products => {\n    const productsMap = new Map();\n    products.forEach(product => {\n      if (productsMap.has(product.type)) {\n        const typeList = productsMap.get(product.type);\n        typeList.push(product);\n        productsMap.set(product.type, typeList);\n      } else {\n        productsMap.set(product.type, [product]);\n      }\n    });\n    return productsMap;\n  };\n\n  const renderProductTypeList = products => {\n    const lists = [];\n    products.forEach((productsType, title) => {\n      lists.push( /*#__PURE__*/_jsxDEV(InventoryList, {\n        title: title,\n        products: productsType\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 15\n      }, this));\n    });\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: lists\n    }, void 0, false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.mainPage,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Estoque\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/add-product-page\",\n      children: [/*#__PURE__*/_jsxDEV(ManageButton, {\n        text: \"Adicionar novo produto\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 32\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 3\n    }, this), renderProductTypeList(splitProducts(props.products))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 3\n  }, this);\n};\n\n_c = InventoryPage;\n\nconst mapStateToProps = state => ({\n  products: state.products\n});\n\nconst mapDispatchToProps = dispatch => ({});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(InventoryPage);\n\nvar _c;\n\n$RefreshReg$(_c, \"InventoryPage\");","map":{"version":3,"sources":["/Users/matheuscunha/USP/Plantshop/ps/src/packages/admin/src/components/InventoryPage/InventoryPage.tsx"],"names":["React","connect","Link","ManageButton","InventoryList","styles","InventoryPage","props","splitProducts","products","productsMap","Map","forEach","product","has","type","typeList","get","push","set","renderProductTypeList","lists","productsType","title","mainPage","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,YAAP,MAAyB,6CAAzB;AACA,OAAOC,aAAP,MAA0B,kBAA1B;AAEA,OAAO,KAAKC,MAAZ,MAAwB,UAAxB;;;;AAMA,MAAMC,aAA4C,GAAIC,KAAD,IAAW;AAE/D,QAAMC,aAAa,GAAIC,QAAD,IAA8B;AACnD,UAAMC,WAAwC,GAAG,IAAIC,GAAJ,EAAjD;AACAF,IAAAA,QAAQ,CAACG,OAAT,CAAkBC,OAAD,IAAa;AAC7B,UAAIH,WAAW,CAACI,GAAZ,CAAgBD,OAAO,CAACE,IAAxB,CAAJ,EAAkC;AACjC,cAAMC,QAAwB,GAAGN,WAAW,CAACO,GAAZ,CAAgBJ,OAAO,CAACE,IAAxB,CAAjC;AACAC,QAAAA,QAAQ,CAACE,IAAT,CAAcL,OAAd;AACAH,QAAAA,WAAW,CAACS,GAAZ,CAAgBN,OAAO,CAACE,IAAxB,EAA8BC,QAA9B;AACA,OAJD,MAIO;AACNN,QAAAA,WAAW,CAACS,GAAZ,CAAgBN,OAAO,CAACE,IAAxB,EAA8B,CAACF,OAAD,CAA9B;AACA;AACD,KARD;AAUA,WAAOH,WAAP;AACA,GAbD;;AAeA,QAAMU,qBAAqB,GAAIX,QAAD,IAA0C;AACvE,UAAMY,KAAkB,GAAG,EAA3B;AAEAZ,IAAAA,QAAQ,CAACG,OAAT,CAAiB,CAACU,YAAD,EAAeC,KAAf,KAAyB;AACzCF,MAAAA,KAAK,CAACH,IAAN,eAAW,QAAC,aAAD;AAAe,QAAA,KAAK,EAAEK,KAAtB;AAA6B,QAAA,QAAQ,EAAED;AAAvC;AAAA;AAAA;AAAA;AAAA,cAAX;AACA,KAFD;AAIA,wBACA;AAAA,gBACED;AADF,qBADA;AAKA,GAZD;;AAcA,sBACC;AAAK,IAAA,SAAS,EAAEhB,MAAM,CAACmB,QAAvB;AAAA,4BACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,eAEA,QAAC,IAAD;AAAM,MAAA,EAAE,EAAC,mBAAT;AAAA,8BAA6B,QAAC,YAAD;AAAc,QAAA,IAAI,EAAE;AAApB;AAAA;AAAA;AAAA;AAAA,cAA7B;AAAA;AAAA;AAAA;AAAA;AAAA,YAFA,EAGCJ,qBAAqB,CAACZ,aAAa,CAACD,KAAK,CAACE,QAAP,CAAd,CAHtB;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAOA,CAtCD;;KAAMH,a;;AA8CN,MAAMmB,eAAe,GAAIC,KAAD,KAA0C;AAC/DjB,EAAAA,QAAQ,EAAEiB,KAAK,CAACjB;AAD+C,CAA1C,CAAxB;;AAIA,MAAMkB,kBAAkB,GAAIC,QAAD,KAAwC,EAAxC,CAA3B;;AAEA,eAAe3B,OAAO,CAACwB,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CrB,aAA7C,CAAf","sourcesContent":["import React, { ReactNode } from 'react';\nimport { connect } from 'react-redux';\nimport { Dispatch } from 'redux';\nimport { Link } from 'react-router-dom';\nimport ManageButton from '../../../../../base-components/ManageButton';\nimport InventoryList from '../InventoryList';\nimport { ApplicationState, ProductModel } from '../../../../../store/types';\nimport * as styles from './styles'\n\nexport interface InventoryPageProps{\n  \tproducts: ProductModel[];\n}\n\nconst InventoryPage: React.FC <InventoryPageProps> = (props) => {\n  \n\tconst splitProducts = (products: ProductModel[]) => {\n\t\tconst productsMap: Map<string, ProductModel[]> = new Map();\n\t\tproducts.forEach((product) => {\n\t\t\tif (productsMap.has(product.type)){\n\t\t\t\tconst typeList: ProductModel[] = productsMap.get(product.type)!;\n\t\t\t\ttypeList.push(product);\n\t\t\t\tproductsMap.set(product.type, typeList);\n\t\t\t} else {\n\t\t\t\tproductsMap.set(product.type, [product]);\n\t\t\t}\n\t\t});\n\n\t\treturn productsMap;\n\t}\n\n\tconst renderProductTypeList = (products:Map<string, ProductModel[]>) => {\n\t\tconst lists: ReactNode[] = [];\n\n\t\tproducts.forEach((productsType, title) => {\n\t\t\tlists.push(<InventoryList title={title} products={productsType} />);\n\t\t});\n\n\t\treturn (\n\t\t<>\n\t\t\t{lists}\n\t\t</>\n\t\t)\n\t}\n\n\treturn(\n\t\t<div className={styles.mainPage}>\n\t\t<h1>Estoque</h1>\n\t\t<Link to=\"/add-product-page\"><ManageButton text={\"Adicionar novo produto\"} /> </Link>\n\t\t{renderProductTypeList(splitProducts(props.products))}\n\t\t</div>\n\t);\n}\n\ninterface DispatchProps {}\n\ninterface StateProps{\n  \tproducts: ProductModel[];\n}\n\nconst mapStateToProps = (state: ApplicationState): StateProps => ({\n  \tproducts: state.products\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch): DispatchProps => ({});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(InventoryPage);"]},"metadata":{},"sourceType":"module"}