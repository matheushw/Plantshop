{"ast":null,"code":"var _jsxFileName = \"/Users/matheuscunha/USP/Plantshop/src/packages/rent-page/src/components/RentPage/RentPage.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useEffect } from 'react';\nimport { useState } from 'react';\nimport { connect } from 'react-redux';\nimport RentProductList from '../RentProductsList';\nimport ReactNotification, { store } from 'react-notifications-component';\nimport * as styles from './styles';\nimport { NotificationType } from '../utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst RentPage = props => {\n  _s();\n\n  const [showNotification, setShowNotification] = useState(NotificationType.NONE);\n  useEffect(() => {\n    if (showNotification === NotificationType.FAILED) {\n      store.addNotification({\n        title: \"Data inválida\",\n        message: \" \",\n        type: \"warning\",\n        insert: \"top\",\n        container: \"top-left\",\n        animationIn: [\"animate__animated\", \"animate__fadeIn\"],\n        animationOut: [\"animate__animated\", \"animate__fadeOut\"],\n        dismiss: {\n          duration: 2000,\n          onScreen: false\n        }\n      });\n    } else if (showNotification === NotificationType.SUCCESSFUL) {\n      store.addNotification({\n        title: \"Aluguel adicionado ao carrinho!\",\n        message: \" \",\n        type: \"success\",\n        insert: \"top\",\n        container: \"top-left\",\n        animationIn: [\"animate__animated\", \"animate__fadeIn\"],\n        animationOut: [\"animate__animated\", \"animate__fadeOut\"],\n        dismiss: {\n          duration: 2000,\n          onScreen: false\n        }\n      });\n    }\n\n    setShowNotification(NotificationType.NONE);\n  }, [showNotification]);\n\n  const splitProducts = products => {\n    const productsMap = new Map();\n    products.forEach(product => {\n      if (productsMap.has(product.type)) {\n        const typeList = productsMap.get(product.type);\n        typeList.push(product);\n        productsMap.set(product.type, typeList);\n      } else {\n        productsMap.set(product.type, [product]);\n      }\n    });\n    return productsMap;\n  };\n\n  const renderProductTypeList = products => {\n    const lists = [];\n    products.forEach((productsType, title) => {\n      lists.push( /*#__PURE__*/_jsxDEV(RentProductList, {\n        setShowNotification: setShowNotification,\n        title: title,\n        products: productsType\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 18\n      }, this));\n    });\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: lists\n    }, void 0, false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.page,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Aluguel\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ReactNotification, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), renderProductTypeList(splitProducts(props.products))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n};\n\n_s(RentPage, \"Twqt1arasZIeJ6JD4KXPCt1W9bI=\");\n\n_c = RentPage;\n\nconst mapStateToProps = state => ({\n  products: state.products\n});\n\nconst mapDispatchToProps = dispatch => ({});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RentPage);\n\nvar _c;\n\n$RefreshReg$(_c, \"RentPage\");","map":{"version":3,"sources":["/Users/matheuscunha/USP/Plantshop/src/packages/rent-page/src/components/RentPage/RentPage.tsx"],"names":["React","useEffect","useState","connect","RentProductList","ReactNotification","store","styles","NotificationType","RentPage","props","showNotification","setShowNotification","NONE","FAILED","addNotification","title","message","type","insert","container","animationIn","animationOut","dismiss","duration","onScreen","SUCCESSFUL","splitProducts","products","productsMap","Map","forEach","product","has","typeList","get","push","set","renderProductTypeList","lists","productsType","page","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { ReactNode } from 'react'\nimport { useEffect } from 'react';\nimport { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Dispatch } from 'redux';\nimport { ApplicationState, ProductModel } from '../../../../../store/types';\nimport RentProductList from '../RentProductsList';\nimport ReactNotification, { store } from 'react-notifications-component';\nimport * as styles from './styles';\nimport { NotificationType } from '../utils';\nexport interface RentPageProps{\n  products: ProductModel[];\n}\n\nconst RentPage: React.FC<RentPageProps> = ( props ) => {\n  const [showNotification, setShowNotification] = useState<NotificationType>(NotificationType.NONE);\n\n  useEffect(()=>{\n    if(showNotification === NotificationType.FAILED){\n      store.addNotification({\n        title: \"Data inválida\",\n        message: \" \",\n        type: \"warning\",\n        insert: \"top\",\n        container: \"top-left\",\n        animationIn: [\"animate__animated\", \"animate__fadeIn\"],\n        animationOut: [\"animate__animated\", \"animate__fadeOut\"],\n        dismiss: {\n          duration: 2000,\n          onScreen: false\n        }\n      })\n    } else if(showNotification === NotificationType.SUCCESSFUL) {\n      store.addNotification({\n        title: \"Aluguel adicionado ao carrinho!\",\n        message: \" \",\n        type: \"success\",\n        insert: \"top\",\n        container: \"top-left\",\n        animationIn: [\"animate__animated\", \"animate__fadeIn\"],\n        animationOut: [\"animate__animated\", \"animate__fadeOut\"],\n        dismiss: {\n          duration: 2000,\n          onScreen: false\n        }\n      })\n    }\n    setShowNotification(NotificationType.NONE);\n  }, [showNotification]);\n\n  const splitProducts = (products: ProductModel[]) => {\n    const productsMap: Map<string, ProductModel[]> = new Map();\n    products.forEach((product) => {\n      if (productsMap.has(product.type)){\n        const typeList: ProductModel[] = productsMap.get(product.type)!;\n        typeList.push(product);\n        productsMap.set(product.type, typeList);\n      } else {\n        productsMap.set(product.type, [product]);\n      }\n    });\n\n    return productsMap;\n  }\n\n  const renderProductTypeList = (products:Map<string, ProductModel[]>) => {\n    const lists: ReactNode[] = [];\n\n    products.forEach((productsType, title) => {\n      lists.push(<RentProductList setShowNotification={setShowNotification} title={title} products={productsType} />);\n    });\n\n    return (\n      <>\n        {lists}\n      </>\n    )\n  }\n\n  return(\n    <div className={styles.page}>\n      <h1>Aluguel</h1>\n      <ReactNotification />\n      {renderProductTypeList(splitProducts(props.products))}\n    </div>\n  );\n}\n\ninterface DispatchProps {}\n\ninterface StateProps{\n  products: ProductModel[];\n}\n\nconst mapStateToProps = (state: ApplicationState): StateProps => ({\n  products: state.products,\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch): DispatchProps => ({});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RentPage);"]},"metadata":{},"sourceType":"module"}