{"ast":null,"code":"var _jsxFileName = \"/Users/matheuscunha/USP/Plantshop/src/packages/category/src/components/bouquetPage/BouquetPage.tsx\";\nimport React from 'react'; //import Product from '../../../../../base-components/product/src/components/Product/Product';\n\nimport ProductList from '../../../../../base-components/product-list/src/components/ProductList/ProductList';\nimport { connect } from 'react-redux';\nimport * as styles from '../styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst BouquetPage = props => {\n  const splitProducts = products => {\n    const productsMap = new Map();\n    products.forEach(product => {\n      if (productsMap.has(product.type)) {\n        const typeList = productsMap.get(product.type);\n        typeList.push(product);\n        productsMap.set(product.type, typeList);\n      } else {\n        productsMap.set(product.type, [product]);\n      }\n    });\n    return productsMap;\n  };\n\n  const titleType = type => {\n    switch (type) {\n      case 'Planta':\n        return 'Plantas';\n\n      case 'Flor':\n        return 'Flores';\n\n      case 'Buque':\n        return 'Buquês';\n\n      case 'Vaso':\n        return 'Vasos';\n\n      default:\n        return '';\n    }\n\n    ;\n  };\n\n  const renderProductTypeList = (products, type) => {\n    if (products.has(type)) {\n      return /*#__PURE__*/_jsxDEV(ProductList, {\n        products: products.get(type),\n        title: titleType(type)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"N\\xE3o h\\xE1 produtos deste tipo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 16\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.modelPage,\n    children: renderProductTypeList(splitProducts(props.products), \"Buque\")\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 3\n  }, this);\n};\n\n_c = BouquetPage;\n\nconst mapStateToProps = state => ({\n  products: state.products\n});\n\nconst mapDispatchToProps = dispatch => ({});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BouquetPage);\n\nvar _c;\n\n$RefreshReg$(_c, \"BouquetPage\");","map":{"version":3,"sources":["/Users/matheuscunha/USP/Plantshop/src/packages/category/src/components/bouquetPage/BouquetPage.tsx"],"names":["React","ProductList","connect","styles","BouquetPage","props","splitProducts","products","productsMap","Map","forEach","product","has","type","typeList","get","push","set","titleType","renderProductTypeList","modelPage","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,OAAOC,WAAP,MAAwB,oFAAxB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAGA,OAAO,KAAKC,MAAZ,MAAwB,WAAxB;;;AAMA,MAAMC,WAAuC,GAAIC,KAAD,IAAW;AAE1D,QAAMC,aAAa,GAAIC,QAAD,IAA8B;AACnD,UAAMC,WAAwC,GAAG,IAAIC,GAAJ,EAAjD;AACAF,IAAAA,QAAQ,CAACG,OAAT,CAAkBC,OAAD,IAAa;AAC7B,UAAIH,WAAW,CAACI,GAAZ,CAAgBD,OAAO,CAACE,IAAxB,CAAJ,EAAkC;AACjC,cAAMC,QAAwB,GAAGN,WAAW,CAACO,GAAZ,CAAgBJ,OAAO,CAACE,IAAxB,CAAjC;AACAC,QAAAA,QAAQ,CAACE,IAAT,CAAcL,OAAd;AACAH,QAAAA,WAAW,CAACS,GAAZ,CAAgBN,OAAO,CAACE,IAAxB,EAA8BC,QAA9B;AACA,OAJD,MAIO;AACNN,QAAAA,WAAW,CAACS,GAAZ,CAAgBN,OAAO,CAACE,IAAxB,EAA8B,CAACF,OAAD,CAA9B;AACA;AACD,KARD;AAUA,WAAOH,WAAP;AACA,GAbD;;AAeA,QAAMU,SAAS,GAAIL,IAAD,IAAiB;AAClC,YAAOA,IAAP;AACC,WAAK,QAAL;AACC,eAAO,SAAP;;AACD,WAAK,MAAL;AACC,eAAO,QAAP;;AACD,WAAK,OAAL;AACC,eAAO,QAAP;;AACD,WAAK,MAAL;AACC,eAAO,OAAP;;AACD;AACC,eAAO,EAAP;AAVF;;AAWC;AACD,GAbD;;AAeA,QAAMM,qBAAqB,GAAG,CAACZ,QAAD,EAAuCM,IAAvC,KAAuD;AAEpF,QAAGN,QAAQ,CAACK,GAAT,CAAaC,IAAb,CAAH,EAAsB;AACrB,0BAAO,QAAC,WAAD;AAAa,QAAA,QAAQ,EAAEN,QAAQ,CAACQ,GAAT,CAAaF,IAAb,CAAvB;AAA4C,QAAA,KAAK,EAAEK,SAAS,CAACL,IAAD;AAA5D;AAAA;AAAA;AAAA;AAAA,cAAP;AACA,KAFD,MAEK;AACJ,0BAAO;AAAA,+BAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAL;AAAA;AAAA;AAAA;AAAA,cAAP;AACA;AACD,GAPD;;AASA,sBACC;AAAK,IAAA,SAAS,EAAEV,MAAM,CAACiB,SAAvB;AAAA,cACED,qBAAqB,CAACb,aAAa,CAACD,KAAK,CAACE,QAAP,CAAd,EAAgC,OAAhC;AADvB;AAAA;AAAA;AAAA;AAAA,UADD;AAKA,CA9CD;;KAAMH,W;;AAkDN,MAAMiB,eAAe,GAAIC,KAAD,KAAgD;AACrEf,EAAAA,QAAQ,EAAEe,KAAK,CAACf;AADqD,CAAhD,CAAxB;;AAIA,MAAMgB,kBAAkB,GAAIC,QAAD,KAAwC,EAAxC,CAA3B;;AAEA,eAAetB,OAAO,CAACmB,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CnB,WAA7C,CAAf","sourcesContent":["import React from 'react';\n//import Product from '../../../../../base-components/product/src/components/Product/Product';\nimport ProductList from '../../../../../base-components/product-list/src/components/ProductList/ProductList';\nimport { connect } from 'react-redux';\nimport { Dispatch } from 'redux';\nimport { ApplicationState, ProductModel } from '../../../../../store/types';\nimport * as styles from '../styles';\n\nexport interface BouquetPageProps {\n  \tproducts: ProductModel[]\n}\n\nconst BouquetPage: React.FC<BouquetPageProps> = (props) => {\n\n\tconst splitProducts = (products: ProductModel[]) => {\n\t\tconst productsMap: Map<string, ProductModel[]> = new Map();\n\t\tproducts.forEach((product) => {\n\t\t\tif (productsMap.has(product.type)){\n\t\t\t\tconst typeList: ProductModel[] = productsMap.get(product.type)!;\n\t\t\t\ttypeList.push(product);\n\t\t\t\tproductsMap.set(product.type, typeList);\n\t\t\t} else {\n\t\t\t\tproductsMap.set(product.type, [product]);\n\t\t\t}\n\t\t});\n\n\t\treturn productsMap;\n\t};\n\n\tconst titleType = (type:string) => {\n\t\tswitch(type){\n\t\t\tcase 'Planta':\n\t\t\t\treturn 'Plantas';\n\t\t\tcase 'Flor':\n\t\t\t\treturn 'Flores';\n\t\t\tcase 'Buque':\n\t\t\t\treturn 'Buquês';\n\t\t\tcase 'Vaso':\n\t\t\t\treturn 'Vasos';\n\t\t\tdefault:\n\t\t\t\treturn '';\n\t\t};\n\t};\n\n\tconst renderProductTypeList = (products:Map<string, ProductModel[]>, type:string) => {\n\t\t\n\t\tif(products.has(type)){\n\t\t\treturn <ProductList products={products.get(type)!} title={titleType(type)} />  \n\t\t}else{\n\t\t\treturn <div><h2>Não há produtos deste tipo</h2></div>\n\t\t}\n\t};\n\n\treturn (\n\t\t<div className={styles.modelPage}>\n\t\t\t{renderProductTypeList(splitProducts(props.products), \"Buque\")}\n\t\t</div>\n\t);\n};\n\ninterface DispatchProps {}\n\nconst mapStateToProps = (state: ApplicationState): BouquetPageProps => ({\n  \tproducts: state.products\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch): DispatchProps => ({});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BouquetPage);\n"]},"metadata":{},"sourceType":"module"}