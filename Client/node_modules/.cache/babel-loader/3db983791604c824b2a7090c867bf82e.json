{"ast":null,"code":"import axios from \"axios\";\nconst endPoint = \"http://localhost:3001/\";\n\nclass ApiRequester {}\n\nApiRequester.tryToAuthenticate = async (email, password) => {\n  try {\n    const response = await axios(endPoint, {\n      method: 'get',\n      params: {\n        email: email,\n        password: password\n      }\n    });\n    const user = {\n      address: response.data['address'],\n      email: response.data['email'],\n      id: response.data['_id'],\n      name: response.data['name'],\n      password: response.data['password'],\n      phoneNumber: response.data['phoneNumber'],\n      role: response.data['role']\n    };\n    return user;\n  } catch (error) {\n    throw error;\n  }\n};\n\nApiRequester.tryToGetAllProducts = async () => {\n  try {\n    const response = await axios.get(endPoint);\n    const products = response.data.map(product => {\n      return {\n        description: product['description'],\n        id: product['_id'],\n        img: product['img'],\n        name: product['name'],\n        price: product['price'],\n        quantity: product['quantity'],\n        type: product['type']\n      };\n    });\n    return products;\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport default ApiRequester;","map":{"version":3,"sources":["/Users/matheuscunha/USP/Plantshop/src/store/apiRequester.ts"],"names":["axios","endPoint","ApiRequester","tryToAuthenticate","email","password","response","method","params","user","address","data","id","name","phoneNumber","role","error","tryToGetAllProducts","get","products","map","product","description","img","price","quantity","type"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAGA,MAAMC,QAAQ,GAAG,wBAAjB;;AAEA,MAAMC,YAAN,CAAmB;;AAAbA,Y,CAEUC,iB,GAAoB,OAAOC,KAAP,EAAsBC,QAAtB,KAA2C;AAC3E,MAAG;AACD,UAAMC,QAAQ,GAAG,MAAMN,KAAK,CAACC,QAAD,EAAY;AACtCM,MAAAA,MAAM,EAAE,KAD8B;AAEtCC,MAAAA,MAAM,EAAE;AACNJ,QAAAA,KAAK,EAAEA,KADD;AAENC,QAAAA,QAAQ,EAAEA;AAFJ;AAF8B,KAAZ,CAA5B;AAQA,UAAMI,IAAU,GAAG;AACjBC,MAAAA,OAAO,EAAEJ,QAAQ,CAACK,IAAT,CAAc,SAAd,CADQ;AAEjBP,MAAAA,KAAK,EAAEE,QAAQ,CAACK,IAAT,CAAc,OAAd,CAFU;AAGjBC,MAAAA,EAAE,EAAEN,QAAQ,CAACK,IAAT,CAAc,KAAd,CAHa;AAIjBE,MAAAA,IAAI,EAAEP,QAAQ,CAACK,IAAT,CAAc,MAAd,CAJW;AAKjBN,MAAAA,QAAQ,EAAEC,QAAQ,CAACK,IAAT,CAAc,UAAd,CALO;AAMjBG,MAAAA,WAAW,EAAER,QAAQ,CAACK,IAAT,CAAc,aAAd,CANI;AAOjBI,MAAAA,IAAI,EAACT,QAAQ,CAACK,IAAT,CAAc,MAAd;AAPY,KAAnB;AAUA,WAAOF,IAAP;AACD,GApBD,CAoBE,OAAMO,KAAN,EAAa;AACb,UAAMA,KAAN;AACD;AACF,C;;AA1BGd,Y,CA4BUe,mB,GAAsB,YAAY;AAC9C,MAAG;AACD,UAAMX,QAAQ,GAAG,MAAMN,KAAK,CAACkB,GAAN,CAAUjB,QAAV,CAAvB;AAEA,UAAMkB,QAAwB,GAAGb,QAAQ,CAACK,IAAT,CAAcS,GAAd,CAAmBC,OAAD,IAAkC;AACnF,aAAO;AACLC,QAAAA,WAAW,EAAED,OAAO,CAAC,aAAD,CADf;AAELT,QAAAA,EAAE,EAAES,OAAO,CAAC,KAAD,CAFN;AAGLE,QAAAA,GAAG,EAAEF,OAAO,CAAC,KAAD,CAHP;AAILR,QAAAA,IAAI,EAAEQ,OAAO,CAAC,MAAD,CAJR;AAKLG,QAAAA,KAAK,EAAEH,OAAO,CAAC,OAAD,CALT;AAMLI,QAAAA,QAAQ,EAAEJ,OAAO,CAAC,UAAD,CANZ;AAOLK,QAAAA,IAAI,EAAEL,OAAO,CAAC,MAAD;AAPR,OAAP;AASD,KAVgC,CAAjC;AAYA,WAAOF,QAAP;AACD,GAhBD,CAgBE,OAAMH,KAAN,EAAa;AACb,UAAMA,KAAN;AACD;AACF,C;;AAGH,eAAed,YAAf","sourcesContent":["import axios from \"axios\";\nimport { ProductModel, User } from \"./types\";\n\nconst endPoint = \"http://localhost:3001/\";\n\nclass ApiRequester {\n\n  public static tryToAuthenticate = async (email: string, password: string) => {\n    try{\n      const response = await axios(endPoint , {\n        method: 'get',\n        params: {\n          email: email,\n          password: password\n        }\n      });\n\n      const user: User = {\n        address: response.data['address'],\n        email: response.data['email'],\n        id: response.data['_id'],\n        name: response.data['name'],\n        password: response.data['password'],\n        phoneNumber: response.data['phoneNumber'],\n        role:response.data['role'],\n      }\n\n      return user;\n    } catch(error) {\n      throw error;\n    }\n  }\n\n  public static tryToGetAllProducts = async () => {\n    try{\n      const response = await axios.get(endPoint);\n\n      const products: ProductModel[] = response.data.map((product: any) : ProductModel  => {\n        return {\n          description: product['description'],\n          id: product['_id'],\n          img: product['img'],\n          name: product['name'],\n          price: product['price'],\n          quantity: product['quantity'],\n          type: product['type']\n        }\n      });\n\n      return products;\n    } catch(error) {\n      throw error;\n    }\n  }\n}\n\nexport default ApiRequester;"]},"metadata":{},"sourceType":"module"}