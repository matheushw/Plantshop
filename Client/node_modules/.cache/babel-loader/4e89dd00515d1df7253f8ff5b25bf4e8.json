{"ast":null,"code":"import { call, put, takeLatest } from 'redux-saga/effects';\nimport { loadUsersError, loadUsersSuccess } from './actionCreators';\nimport { ActionTypes } from './actionTypes';\nimport ApiRequester from './apiRequester';\n\n// worker Saga: will be fired on USER_FETCH_REQUESTED actions\nfunction* fetchUser(action) {\n  try {\n    const user = yield call(ApiRequester.tryToAuthenticate, action.email, action.password);\n    const bla = {\n      name: \"olar\",\n      address: \"aerfh\",\n      email: \"emailcunha\",\n      id: \"4\",\n      password: \"blabla\",\n      phoneNumber: \"bla\",\n      role: \"user\"\n    };\n    yield put(loadUsersSuccess(bla));\n  } catch (e) {\n    yield put(loadUsersError());\n  }\n}\n\nfunction* mySaga() {\n  yield takeLatest(ActionTypes.LOAD_USER_REQUEST, fetchUser);\n}\n\nexport default mySaga;","map":{"version":3,"sources":["/Users/matheuscunha/USP/Plantshop/src/store/sagas.ts"],"names":["call","put","takeLatest","loadUsersError","loadUsersSuccess","ActionTypes","ApiRequester","fetchUser","action","user","tryToAuthenticate","email","password","bla","name","address","id","phoneNumber","role","e","mySaga","LOAD_USER_REQUEST"],"mappings":"AAAA,SAASA,IAAT,EAAeC,GAAf,EAA+BC,UAA/B,QAAiD,oBAAjD;AACA,SAASC,cAAT,EAAyBC,gBAAzB,QAAiD,kBAAjD;AAEA,SAASC,WAAT,QAA4B,eAA5B;AACA,OAAOC,YAAP,MAAyB,gBAAzB;;AAGA;AAEA,UAAUC,SAAV,CAAoBC,MAApB,EAAoD;AACjD,MAAI;AACD,UAAMC,IAAI,GAAG,MAAMT,IAAI,CAACM,YAAY,CAACI,iBAAd,EAAiCF,MAAM,CAACG,KAAxC,EAA+CH,MAAM,CAACI,QAAtD,CAAvB;AACA,UAAMC,GAAS,GAAG;AAChBC,MAAAA,IAAI,EAAE,MADU;AAEhBC,MAAAA,OAAO,EAAE,OAFO;AAGhBJ,MAAAA,KAAK,EAAE,YAHS;AAIhBK,MAAAA,EAAE,EAAE,GAJY;AAKhBJ,MAAAA,QAAQ,EAAC,QALO;AAMhBK,MAAAA,WAAW,EAAC,KANI;AAOhBC,MAAAA,IAAI,EAAC;AAPW,KAAlB;AASA,UAAMjB,GAAG,CAACG,gBAAgB,CAACS,GAAD,CAAjB,CAAT;AACF,GAZD,CAYE,OAAOM,CAAP,EAAU;AACT,UAAMlB,GAAG,CAACE,cAAc,EAAf,CAAT;AACF;AACH;;AAED,UAAUiB,MAAV,GAAmB;AACjB,QAAMlB,UAAU,CAACG,WAAW,CAACgB,iBAAb,EAAgCd,SAAhC,CAAhB;AACD;;AAED,eAAea,MAAf","sourcesContent":["import { call, put, takeEvery, takeLatest } from 'redux-saga/effects'\nimport { loadUsersError, loadUsersSuccess } from './actionCreators';\nimport { LoadUsersRequest } from './actions';\nimport { ActionTypes } from './actionTypes';\nimport ApiRequester from './apiRequester'\nimport { User } from './types';\n\n// worker Saga: will be fired on USER_FETCH_REQUESTED actions\n\nfunction* fetchUser(action: LoadUsersRequest) : any {\n   try {\n      const user = yield call(ApiRequester.tryToAuthenticate, action.email, action.password);\n      const bla: User = {\n        name: \"olar\",\n        address: \"aerfh\",\n        email: \"emailcunha\",\n        id: \"4\",\n        password:\"blabla\",\n        phoneNumber:\"bla\",\n        role:\"user\",\n      };\n      yield put(loadUsersSuccess(bla));\n   } catch (e) {\n      yield put(loadUsersError());\n   }\n}\n\nfunction* mySaga() {\n  yield takeLatest(ActionTypes.LOAD_USER_REQUEST, fetchUser);\n}\n\nexport default mySaga;"]},"metadata":{},"sourceType":"module"}