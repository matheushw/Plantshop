{"ast":null,"code":"import axios from \"axios\";\nconst endPoint = \"http://localhost:3001\";\n\nclass ApiRequester {}\n\nApiRequester.authenticateUser = async (email, password) => {\n  try {\n    const response = await axios(endPoint + \"/user\", {\n      method: 'get',\n      params: {\n        email: email,\n        password: password\n      }\n    });\n    const user = {\n      address: response.data['address'],\n      email: response.data['email'],\n      id: response.data['_id'],\n      name: response.data['name'],\n      password: response.data['password'],\n      phoneNumber: response.data['phoneNumber'],\n      role: response.data['role']\n    };\n    return user;\n  } catch (error) {\n    throw error;\n  }\n};\n\nApiRequester.registerUser = async (name, address, phoneNumber, email, password) => {\n  try {\n    const response = await axios(endPoint + \"/user\", {\n      method: 'post',\n      params: {\n        name: name,\n        address: address,\n        phoneNumber: phoneNumber,\n        email: email,\n        password: password\n      },\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    console.log(response.data);\n    return response;\n  } catch (error) {\n    throw error;\n  }\n};\n\nApiRequester.getAllProducts = async () => {\n  try {\n    const response = await axios.get(endPoint + \"/product\");\n    const products = response.data.map(product => {\n      return {\n        description: product['description'],\n        id: product['_id'],\n        img: product['img'],\n        name: product['name'],\n        price: product['price'],\n        quantity: product['quantity'],\n        type: product['type']\n      };\n    });\n    return products;\n  } catch (error) {\n    throw error;\n  }\n};\n\nApiRequester.placePurchaseOrder = async (user, order) => {\n  try {\n    const orderDTO = { ...order,\n      userId: user.id\n    };\n    const response = await axios(endPoint + \"/purchaseOrderGroup\", {\n      method: 'post',\n      params: orderDTO\n    });\n    return response;\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport default ApiRequester;","map":{"version":3,"sources":["/Users/matheuscunha/USP/Plantshop/src/store/apiRequester.ts"],"names":["axios","endPoint","ApiRequester","authenticateUser","email","password","response","method","params","user","address","data","id","name","phoneNumber","role","error","registerUser","headers","console","log","getAllProducts","get","products","map","product","description","img","price","quantity","type","placePurchaseOrder","order","orderDTO","userId"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAGA,MAAMC,QAAQ,GAAG,uBAAjB;;AAEA,MAAMC,YAAN,CAAmB;;AAAbA,Y,CAEUC,gB,GAAmB,OAAOC,KAAP,EAAsBC,QAAtB,KAA2C;AAC1E,MAAG;AACD,UAAMC,QAAQ,GAAG,MAAMN,KAAK,CAACC,QAAQ,GAAG,OAAZ,EAAqB;AAC/CM,MAAAA,MAAM,EAAE,KADuC;AAE/CC,MAAAA,MAAM,EAAE;AACNJ,QAAAA,KAAK,EAAEA,KADD;AAENC,QAAAA,QAAQ,EAAEA;AAFJ;AAFuC,KAArB,CAA5B;AAOA,UAAMI,IAAU,GAAG;AACjBC,MAAAA,OAAO,EAAEJ,QAAQ,CAACK,IAAT,CAAc,SAAd,CADQ;AAEjBP,MAAAA,KAAK,EAAEE,QAAQ,CAACK,IAAT,CAAc,OAAd,CAFU;AAGjBC,MAAAA,EAAE,EAAEN,QAAQ,CAACK,IAAT,CAAc,KAAd,CAHa;AAIjBE,MAAAA,IAAI,EAAEP,QAAQ,CAACK,IAAT,CAAc,MAAd,CAJW;AAKjBN,MAAAA,QAAQ,EAAEC,QAAQ,CAACK,IAAT,CAAc,UAAd,CALO;AAMjBG,MAAAA,WAAW,EAAER,QAAQ,CAACK,IAAT,CAAc,aAAd,CANI;AAOjBI,MAAAA,IAAI,EAACT,QAAQ,CAACK,IAAT,CAAc,MAAd;AAPY,KAAnB;AAUA,WAAOF,IAAP;AACD,GAnBD,CAmBE,OAAMO,KAAN,EAAa;AACb,UAAMA,KAAN;AACD;AACF,C;;AAzBGd,Y,CA2BUe,Y,GAAe,OAC3BJ,IAD2B,EAE3BH,OAF2B,EAG3BI,WAH2B,EAI3BV,KAJ2B,EAK3BC,QAL2B,KAKN;AACrB,MAAG;AACD,UAAMC,QAAQ,GAAG,MAAMN,KAAK,CAACC,QAAQ,GAAG,OAAZ,EAAqB;AAC/CM,MAAAA,MAAM,EAAE,MADuC;AAE/CC,MAAAA,MAAM,EAAE;AACNK,QAAAA,IAAI,EAAEA,IADA;AAENH,QAAAA,OAAO,EAAEA,OAFH;AAGNI,QAAAA,WAAW,EAAEA,WAHP;AAINV,QAAAA,KAAK,EAAEA,KAJD;AAKNC,QAAAA,QAAQ,EAAEA;AALJ,OAFuC;AAS/Ca,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT;AATsC,KAArB,CAA5B;AAaAC,IAAAA,OAAO,CAACC,GAAR,CAAYd,QAAQ,CAACK,IAArB;AACA,WAAOL,QAAP;AACD,GAhBD,CAgBE,OAAOU,KAAP,EAAc;AACd,UAAMA,KAAN;AACD;AACF,C;;AApDGd,Y,CAsDUmB,c,GAAiB,YAAY;AACzC,MAAG;AACD,UAAMf,QAAQ,GAAG,MAAMN,KAAK,CAACsB,GAAN,CAAUrB,QAAQ,GAAG,UAArB,CAAvB;AAEA,UAAMsB,QAAwB,GAAGjB,QAAQ,CAACK,IAAT,CAAca,GAAd,CAAmBC,OAAD,IAAkC;AACnF,aAAO;AACLC,QAAAA,WAAW,EAAED,OAAO,CAAC,aAAD,CADf;AAELb,QAAAA,EAAE,EAAEa,OAAO,CAAC,KAAD,CAFN;AAGLE,QAAAA,GAAG,EAAEF,OAAO,CAAC,KAAD,CAHP;AAILZ,QAAAA,IAAI,EAAEY,OAAO,CAAC,MAAD,CAJR;AAKLG,QAAAA,KAAK,EAAEH,OAAO,CAAC,OAAD,CALT;AAMLI,QAAAA,QAAQ,EAAEJ,OAAO,CAAC,UAAD,CANZ;AAOLK,QAAAA,IAAI,EAAEL,OAAO,CAAC,MAAD;AAPR,OAAP;AASD,KAVgC,CAAjC;AAYA,WAAOF,QAAP;AACD,GAhBD,CAgBE,OAAMP,KAAN,EAAa;AACb,UAAMA,KAAN;AACD;AACF,C;;AA1EGd,Y,CA4EU6B,kB,GAAqB,OAAOtB,IAAP,EAAmBuB,KAAnB,KAAoC;AACrE,MAAG;AACD,UAAMC,QAAQ,GAAG,EAAC,GAAGD,KAAJ;AAAWE,MAAAA,MAAM,EAAEzB,IAAI,CAACG;AAAxB,KAAjB;AACA,UAAMN,QAAQ,GAAG,MAAMN,KAAK,CAACC,QAAQ,GAAG,qBAAZ,EAAmC;AAC7DM,MAAAA,MAAM,EAAE,MADqD;AAE7DC,MAAAA,MAAM,EAAEyB;AAFqD,KAAnC,CAA5B;AAIA,WAAO3B,QAAP;AACD,GAPD,CAOE,OAAMU,KAAN,EAAa;AACb,UAAMA,KAAN;AACD;AACF,C;;AAGH,eAAed,YAAf","sourcesContent":["import axios from \"axios\";\nimport { Order, ProductModel, ProductOrder, User } from \"./types\";\n\nconst endPoint = \"http://localhost:3001\";\n\nclass ApiRequester {\n\n  public static authenticateUser = async (email: string, password: string) => {\n    try{\n      const response = await axios(endPoint + \"/user\", {\n        method: 'get',\n        params: {\n          email: email,\n          password: password\n        }\n      });\n      const user: User = {\n        address: response.data['address'],\n        email: response.data['email'],\n        id: response.data['_id'],\n        name: response.data['name'],\n        password: response.data['password'],\n        phoneNumber: response.data['phoneNumber'],\n        role:response.data['role'],\n      }\n\n      return user;\n    } catch(error) {\n      throw error;\n    }\n  }\n\n  public static registerUser = async (\n    name: string,\n    address: string,\n    phoneNumber: string,\n    email: string,\n    password: string) => {\n    try{\n      const response = await axios(endPoint + \"/user\", {\n        method: 'post',\n        params: {\n          name: name,\n          address: address,\n          phoneNumber: phoneNumber,\n          email: email,\n          password: password\n        },\n        headers: {\n          'Content-Type': 'application/json'\n        },\n      });\n      console.log(response.data); \n      return response;\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  public static getAllProducts = async () => {\n    try{\n      const response = await axios.get(endPoint + \"/product\");\n\n      const products: ProductModel[] = response.data.map((product: any) : ProductModel  => {\n        return {\n          description: product['description'],\n          id: product['_id'],\n          img: product['img'],\n          name: product['name'],\n          price: product['price'],\n          quantity: product['quantity'],\n          type: product['type']\n        }\n      });\n\n      return products;\n    } catch(error) {\n      throw error;\n    }\n  }\n\n  public static placePurchaseOrder = async (user: User, order: Order) => {\n    try{\n      const orderDTO = {...order, userId: user.id};\n      const response = await axios(endPoint + \"/purchaseOrderGroup\", {\n        method: 'post',\n        params: orderDTO,\n      });\n      return response;\n    } catch(error) {\n      throw error;\n    }\n  }\n}\n\nexport default ApiRequester;"]},"metadata":{},"sourceType":"module"}