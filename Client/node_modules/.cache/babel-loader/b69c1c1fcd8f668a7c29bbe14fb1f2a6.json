{"ast":null,"code":"var _jsxFileName = \"/Users/matheuscunha/USP/Plantshop/src/packages/admin/src/components/AddAdminPage/AddAdminPage.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport * as styles from './styles';\nimport { addAdminRequest, addAdminReset } from '../../../../../store/actionCreators';\nimport { connect } from 'react-redux';\nimport { useForm } from '../../../../useForm';\nimport { useHistory } from 'react-router';\nimport ReactNotification, { store } from 'react-notifications-component';\nimport 'react-notifications-component/dist/theme.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddAdminPage = props => {\n  _s();\n\n  const history = useHistory();\n  const initialState = {\n    name: '',\n    address: '',\n    phoneNumber: '',\n    email: '',\n    password: ''\n  };\n  useEffect(() => {\n    if (props.addAdminError && !props.addAdminLoading) {\n      // Error: user not registered\t\n      store.addNotification({\n        title: \"Email jÃ¡ cadastrado, por favor utilize outro!\",\n        message: \" \",\n        type: \"danger\",\n        insert: \"top\",\n        container: \"top-left\",\n        animationIn: [\"animate__animated\", \"animate__fadeIn\"],\n        animationOut: [\"animate__animated\", \"animate__fadeOut\"],\n        dismiss: {\n          duration: 2000,\n          onScreen: false\n        }\n      });\n    } else if (props.addAdminSuccess) {\n      // Success: user registered\n      store.addNotification({\n        title: \"Administrador adicionado com sucesso!\",\n        message: \" \",\n        type: \"success\",\n        insert: \"top\",\n        container: \"top-left\",\n        animationIn: [\"animate__animated\", \"animate__fadeIn\"],\n        animationOut: [\"animate__animated\", \"animate__fadeOut\"],\n        dismiss: {\n          duration: 2000,\n          onScreen: false\n        }\n      });\n      setTimeout(function () {\n        history.push('admin-page');\n      }, 2000); // Reseting loading, error adn success for signUp\n\n      props.addAdminReset();\n    }\n  }, [props.addAdminError, props.addAdminLoading, props.addAdminSuccess]);\n\n  async function addAdminCallback() {\n    const input = JSON.parse(JSON.stringify(values));\n    props.addAdmin(input.name, input.address, input.phoneNumber, input.email, input.password);\n  }\n\n  const {\n    onChange,\n    onSubmit,\n    values\n  } = useForm(addAdminCallback, initialState);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.registerForm,\n    children: [/*#__PURE__*/_jsxDEV(ReactNotification, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \" Adicionar novo administrador \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmit,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Nome: \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 12\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"name\",\n            id: \"name\",\n            placeholder: \"Jose da Silva Souza\",\n            onChange: onChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 18\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 6\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Endere\\xE7o: \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 16\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"address\",\n            id: \"address\",\n            placeholder: \"Rua 1, 123, S\\xE3o Paulo, SP\",\n            onChange: onChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 22\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 16\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Telefone: \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 16\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"phoneNumber\",\n            id: \"phoneNumber\",\n            placeholder: \"(11)987456932\",\n            onChange: onChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 22\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 16\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Email: \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            name: \"email\",\n            id: \"email\",\n            placeholder: \"seuemail@email.com\",\n            onChange: onChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 16\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Senha: \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 13\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            name: \"password\",\n            id: \"password\",\n            onChange: onChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 16\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Cadastrar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 6\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 4\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 7\n  }, this);\n};\n\n_s(AddAdminPage, \"fw5cx8bhaynJgcycrUn1DqptffU=\", false, function () {\n  return [useHistory, useForm];\n});\n\n_c = AddAdminPage;\n\nconst mapStateToProps = state => ({\n  user: state.user,\n  allUsers: state.usersList,\n  addAdminError: state.error.addAdmin,\n  addAdminLoading: state.loading.addAdmin,\n  addAdminSuccess: state.success.addAdmin\n});\n\nconst mapDispatchToProps = dispatch => ({\n  addAdmin: (name, address, phoneNumber, email, password) => {\n    dispatch(addAdminRequest(name, address, phoneNumber, email, password));\n  },\n  addAdminReset: () => {\n    dispatch(addAdminReset());\n  }\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddAdminPage);\n\nvar _c;\n\n$RefreshReg$(_c, \"AddAdminPage\");","map":{"version":3,"sources":["/Users/matheuscunha/USP/Plantshop/src/packages/admin/src/components/AddAdminPage/AddAdminPage.tsx"],"names":["React","useEffect","styles","addAdminRequest","addAdminReset","connect","useForm","useHistory","ReactNotification","store","AddAdminPage","props","history","initialState","name","address","phoneNumber","email","password","addAdminError","addAdminLoading","addNotification","title","message","type","insert","container","animationIn","animationOut","dismiss","duration","onScreen","addAdminSuccess","setTimeout","push","addAdminCallback","input","JSON","parse","stringify","values","addAdmin","onChange","onSubmit","registerForm","mapStateToProps","state","user","allUsers","usersList","error","loading","success","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react'\nimport * as styles from './styles'\nimport { ApplicationState, User } from '../../../../../store/types';\nimport { addAdminRequest, addAdminReset } from '../../../../../store/actionCreators';\nimport { Dispatch } from 'redux';\nimport { connect } from 'react-redux';\nimport { useForm } from '../../../../useForm';\nimport {useHistory} from 'react-router';\nimport ReactNotification, { store } from 'react-notifications-component';\nimport 'react-notifications-component/dist/theme.css';\n\n\nexport interface AddAdminPageProps {\n  user: User | null,\n  allUsers: User[],\n  addAdminError: boolean,\n\taddAdminLoading: boolean,\n\taddAdminSuccess: boolean,\n\taddAdmin: (name: string, address: string, phoneNumber: string, email: string, password: string) => void,\n\taddAdminReset: () => void\n}\n\nconst AddAdminPage: React.FC<AddAdminPageProps> = (props) => {\n\tconst history = useHistory();\n\t  \n\tconst initialState = {\n\t\tname: '',\n\t\taddress: '',\n\t\tphoneNumber: '',\n\t\temail: '',\n\t\tpassword: '',\n\t};\n\n  useEffect(() => {\n\t\tif ( props.addAdminError && !props.addAdminLoading ) { // Error: user not registered\t\n\n      store.addNotification({\n        title: \"Email jÃ¡ cadastrado, por favor utilize outro!\",\n        message: \" \",\n        type: \"danger\",\n        insert: \"top\",\n        container: \"top-left\",\n        animationIn: [\"animate__animated\", \"animate__fadeIn\"],\n        animationOut: [\"animate__animated\", \"animate__fadeOut\"],\n        dismiss: {\n          duration: 2000,\n          onScreen: false\n        }\n\t\t\t});\n\n\t\t} else if ( props.addAdminSuccess ) { // Success: user registered\n\t\t\t\n      store.addNotification({\n        title: \"Administrador adicionado com sucesso!\",\n        message: \" \",\n        type: \"success\",\n        insert: \"top\",\n        container: \"top-left\",\n        animationIn: [\"animate__animated\", \"animate__fadeIn\"],\n        animationOut: [\"animate__animated\", \"animate__fadeOut\"],\n        dismiss: {\n          duration: 2000,\n          onScreen: false\n        }\n      })\n      setTimeout(function (){\n        history.push('admin-page')\n      }, 2000);\n\n      // Reseting loading, error adn success for signUp\n      props.addAdminReset();\n\n\t\t}\n\t} ,[props.addAdminError, props.addAdminLoading, props.addAdminSuccess]);\n\n\tasync function addAdminCallback(){\n\t\tconst input = JSON.parse(JSON.stringify(values));\n\t\tprops.addAdmin(input.name, input.address, input.phoneNumber, input.email, input.password);\n\t}\n\n\tconst { onChange, onSubmit, values} = useForm(addAdminCallback, initialState); \n\n  \treturn (\n      <div className={styles.registerForm}>\n        <ReactNotification/>\n\t\t<h1> Adicionar novo administrador </h1>\n        <br/>\n        <form onSubmit={onSubmit}>\n\t\t\t<div>\n\t\t\t\t<label>\n\t\t\t\t\tNome: <br/> <input \n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tname=\"name\"\n\t\t\t\t\tid=\"name\" \n\t\t\t\t\tplaceholder=\"Jose da Silva Souza\"\n\t\t\t\t\tonChange={onChange} \n\t\t\t\t\trequired/> \n\t\t\t\t\t<br/><br/>\n\t\t\t\t</label>\n\t\t\t\t<label>\n\t\t\t\t\tEndereÃ§o: <br/> <input \n\t\t\t\t\ttype=\"text\" \n\t\t\t\t\tname=\"address\" \n\t\t\t\t\tid=\"address\"\n\t\t\t\t\tplaceholder=\"Rua 1, 123, SÃ£o Paulo, SP\" \n\t\t\t\t\tonChange={onChange}\n\t\t\t\t\trequired/><br/>\n            \t\t<br/>\n\t\t\t\t</label>\n\t\t\t\t<label>\n\t\t\t\t\tTelefone: <br/> <input \n\t\t\t\t\ttype=\"text\" \n\t\t\t\t\tname=\"phoneNumber\" \n\t\t\t\t\tid=\"phoneNumber\"\n\t\t\t\t\tplaceholder=\"(11)987456932\" \n\t\t\t\t\tonChange={onChange}\n\t\t\t\t\trequired/><br/>\n            \t\t<br/>\n\t\t\t\t</label>\n\t\t\t\t<label>\n\t\t\t\t\tEmail: <br/> <input \n\t\t\t\t\ttype=\"email\" \n\t\t\t\t\tname=\"email\" \n\t\t\t\t\tid=\"email\"\n\t\t\t\t\tplaceholder=\"seuemail@email.com\" \n\t\t\t\t\tonChange={onChange}\n\t\t\t\t\trequired/><br/>\n            \t\t<br/>\n\t\t\t\t</label>\n\t\t\t\t<label>\n\t\t\t\t\tSenha: <br/> <input \n\t\t\t\t\ttype=\"password\" \n\t\t\t\t\tname=\"password\"\n\t\t\t\t\tid=\"password\"\n\t\t\t\t\tonChange={onChange}\n\t\t\t\t\trequired/><br/><br/>\n\t\t\t\t</label>\n\t\t\t\t<label>\n\t\t\t\t\t<button type=\"submit\">Cadastrar</button>\n\t\t\t\t</label>\n\t\t\t</div>\n        </form>\n    </div>\n  );\n}\n\ninterface DispatchProps {\n\taddAdmin: (\n\t\tname: string, address: string, phoneNumber: string, email: string, password: string\n\t\t) \n\t\t=> void;\n\taddAdminReset: () => void;\n}\n\ninterface StateProps {\n\tuser: User | null;\n\tallUsers: User[];\n  addAdminError: boolean;\n\taddAdminLoading: boolean;\n\taddAdminSuccess: boolean;\n}\n\nconst mapStateToProps = (state: ApplicationState): StateProps => ({\n  user: state.user,\n  allUsers: state.usersList,\n  addAdminError: state.error.addAdmin,\n\taddAdminLoading: state.loading.addAdmin,\n\taddAdminSuccess: state.success.addAdmin,\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch): DispatchProps => ({\n\taddAdmin:(name, address, phoneNumber, email, password) => {dispatch(addAdminRequest(name, address, phoneNumber, email, password))},\n  addAdminReset: () => {dispatch(addAdminReset())}\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddAdminPage);\n"]},"metadata":{},"sourceType":"module"}