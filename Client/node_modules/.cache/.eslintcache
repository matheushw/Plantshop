[{"/Users/matheuscunha/USP/Plantshop/src/index.tsx":"1","/Users/matheuscunha/USP/Plantshop/src/store/reducer.ts":"2","/Users/matheuscunha/USP/Plantshop/src/App.tsx":"3","/Users/matheuscunha/USP/Plantshop/src/packages/home/src/components/HomePage/HomePage.tsx":"4","/Users/matheuscunha/USP/Plantshop/src/base-components/navigation/index.ts":"5","/Users/matheuscunha/USP/Plantshop/src/mock-objects/products.ts":"6","/Users/matheuscunha/USP/Plantshop/src/mock-objects/usersList.ts":"7","/Users/matheuscunha/USP/Plantshop/src/packages/home/src/components/HomePage/styles.ts":"8","/Users/matheuscunha/USP/Plantshop/src/packages/category/src/components/plantPage/PlantPage.tsx":"9","/Users/matheuscunha/USP/Plantshop/src/base-components/product/src/components/DetailProductPage/DetailProductPage.tsx":"10","/Users/matheuscunha/USP/Plantshop/src/packages/category/src/components/flowerPage/FlowerPage.tsx":"11","/Users/matheuscunha/USP/Plantshop/src/packages/category/src/components/bouquetPage/BouquetPage.tsx":"12","/Users/matheuscunha/USP/Plantshop/src/packages/category/src/components/potPage/PotPage.tsx":"13","/Users/matheuscunha/USP/Plantshop/src/base-components/product/src/components/Product/Product.tsx":"14","/Users/matheuscunha/USP/Plantshop/src/base-components/product-list/src/components/ProductList/ProductList.tsx":"15","/Users/matheuscunha/USP/Plantshop/src/base-components/navigation/Navigation.tsx":"16","/Users/matheuscunha/USP/Plantshop/src/packages/cart/src/components/ChartPage/index.ts":"17","/Users/matheuscunha/USP/Plantshop/src/packages/rent-page/src/components/RentPage/index.ts":"18","/Users/matheuscunha/USP/Plantshop/src/packages/authentication/src/components/LoginPage/index.ts":"19","/Users/matheuscunha/USP/Plantshop/src/packages/authentication/src/components/RegisterPage/index.ts":"20","/Users/matheuscunha/USP/Plantshop/src/packages/admin/src/components/AdminPage/index.ts":"21","/Users/matheuscunha/USP/Plantshop/src/packages/admin/src/components/InventoryPage/index.ts":"22","/Users/matheuscunha/USP/Plantshop/src/packages/admin/src/components/AddAdminPage/index.ts":"23","/Users/matheuscunha/USP/Plantshop/src/packages/admin/src/components/AddProductPage/index.ts":"24","/Users/matheuscunha/USP/Plantshop/src/packages/profile/src/components/ProfilePage/index.ts":"25","/Users/matheuscunha/USP/Plantshop/src/base-components/ManageArrow/index.ts":"26","/Users/matheuscunha/USP/Plantshop/src/packages/category/src/components/styles.ts":"27","/Users/matheuscunha/USP/Plantshop/src/base-components/product/src/components/DetailProductPage/styles.ts":"28","/Users/matheuscunha/USP/Plantshop/src/store/actions.ts":"29","/Users/matheuscunha/USP/Plantshop/src/base-components/product/src/components/Product/styles.ts":"30","/Users/matheuscunha/USP/Plantshop/src/base-components/product-list/src/components/ProductList/styles.ts":"31","/Users/matheuscunha/USP/Plantshop/src/base-components/navigation/styles.ts":"32","/Users/matheuscunha/USP/Plantshop/src/packages/rent-page/src/components/RentPage/RentPage.tsx":"33","/Users/matheuscunha/USP/Plantshop/src/packages/admin/src/components/AddAdminPage/AddAdminPage.tsx":"34","/Users/matheuscunha/USP/Plantshop/src/packages/admin/src/components/InventoryPage/InventoryPage.tsx":"35","/Users/matheuscunha/USP/Plantshop/src/packages/admin/src/components/AddProductPage/AddProductPage.tsx":"36","/Users/matheuscunha/USP/Plantshop/src/packages/authentication/src/components/LoginPage/LoginPage.tsx":"37","/Users/matheuscunha/USP/Plantshop/src/packages/cart/src/components/ChartPage/ChartPage.tsx":"38","/Users/matheuscunha/USP/Plantshop/src/packages/profile/src/components/ProfilePage/ProfilePage.tsx":"39","/Users/matheuscunha/USP/Plantshop/src/packages/authentication/src/components/RegisterPage/RegisterPage.tsx":"40","/Users/matheuscunha/USP/Plantshop/src/packages/admin/src/components/AdminPage/AdminPage.tsx":"41","/Users/matheuscunha/USP/Plantshop/src/base-components/ManageArrow/ManageArrow.tsx":"42","/Users/matheuscunha/USP/Plantshop/src/base-components/ManageButton/index.ts":"43","/Users/matheuscunha/USP/Plantshop/src/packages/useForm.ts":"44","/Users/matheuscunha/USP/Plantshop/src/packages/rent-page/src/components/utils.ts":"45","/Users/matheuscunha/USP/Plantshop/src/packages/admin/src/components/AddAdminPage/styles.ts":"46","/Users/matheuscunha/USP/Plantshop/src/packages/rent-page/src/components/RentPage/styles.ts":"47","/Users/matheuscunha/USP/Plantshop/src/packages/cart/src/components/ChartPage/styles.ts":"48","/Users/matheuscunha/USP/Plantshop/src/packages/admin/src/components/AddProductPage/styles.ts":"49","/Users/matheuscunha/USP/Plantshop/src/packages/authentication/src/components/LoginPage/styles.ts":"50","/Users/matheuscunha/USP/Plantshop/src/packages/admin/src/components/InventoryPage/styles.ts":"51","/Users/matheuscunha/USP/Plantshop/src/packages/authentication/src/components/RegisterPage/styles.ts":"52","/Users/matheuscunha/USP/Plantshop/src/packages/profile/src/components/ProfilePage/styles.ts":"53","/Users/matheuscunha/USP/Plantshop/src/packages/admin/src/components/AdminPage/styles.ts":"54","/Users/matheuscunha/USP/Plantshop/src/packages/cart/src/components/ChartProduct/ChartProduct.tsx":"55","/Users/matheuscunha/USP/Plantshop/src/packages/cart/src/components/ChartRent/ChartRent.tsx":"56","/Users/matheuscunha/USP/Plantshop/src/base-components/ManageButton/ManageButton.tsx":"57","/Users/matheuscunha/USP/Plantshop/src/packages/rent-page/src/components/RentProductsList/index.ts":"58","/Users/matheuscunha/USP/Plantshop/src/packages/profile/src/components/RentInfo/index.ts":"59","/Users/matheuscunha/USP/Plantshop/src/packages/admin/src/components/InventoryList/index.ts":"60","/Users/matheuscunha/USP/Plantshop/src/packages/admin/src/components/Card/index.ts":"61","/Users/matheuscunha/USP/Plantshop/src/packages/cart/src/components/ProductList/index.ts":"62","/Users/matheuscunha/USP/Plantshop/src/packages/profile/src/components/PurchaseInfo/index.ts":"63","/Users/matheuscunha/USP/Plantshop/src/packages/cart/src/components/ChartProduct/styles.ts":"64","/Users/matheuscunha/USP/Plantshop/src/packages/cart/src/components/ChartRent/styles.ts":"65","/Users/matheuscunha/USP/Plantshop/src/packages/cart/src/components/ChartRent/utils.ts":"66","/Users/matheuscunha/USP/Plantshop/src/base-components/ManageButton/styles.ts":"67","/Users/matheuscunha/USP/Plantshop/src/packages/admin/src/components/InventoryList/InventoryList.tsx":"68","/Users/matheuscunha/USP/Plantshop/src/packages/profile/src/components/RentInfo/RentInfo.tsx":"69","/Users/matheuscunha/USP/Plantshop/src/packages/admin/src/components/Card/Card.tsx":"70","/Users/matheuscunha/USP/Plantshop/src/packages/cart/src/components/ProductList/ProductList.tsx":"71","/Users/matheuscunha/USP/Plantshop/src/packages/rent-page/src/components/RentProductsList/RentProductsList.tsx":"72","/Users/matheuscunha/USP/Plantshop/src/packages/profile/src/components/PurchaseInfo/PurchaseInfo.tsx":"73","/Users/matheuscunha/USP/Plantshop/src/packages/cart/src/components/ProductList/styles.ts":"74","/Users/matheuscunha/USP/Plantshop/src/packages/profile/src/components/RentInfo/styles.ts":"75","/Users/matheuscunha/USP/Plantshop/src/packages/admin/src/components/Card/styles.ts":"76","/Users/matheuscunha/USP/Plantshop/src/packages/admin/src/components/InventoryList/styles.ts":"77","/Users/matheuscunha/USP/Plantshop/src/packages/rent-page/src/components/RentProductsList/styles.ts":"78","/Users/matheuscunha/USP/Plantshop/src/packages/profile/src/components/PurchaseInfo/styles.ts":"79","/Users/matheuscunha/USP/Plantshop/src/packages/admin/src/components/InventoryItem/index.ts":"80","/Users/matheuscunha/USP/Plantshop/src/packages/rent-page/src/components/RentProduct/index.ts":"81","/Users/matheuscunha/USP/Plantshop/src/packages/admin/src/components/InventoryItem/InventoryItem.tsx":"82","/Users/matheuscunha/USP/Plantshop/src/packages/rent-page/src/components/RentProduct/RentProduct.tsx":"83","/Users/matheuscunha/USP/Plantshop/src/base-components/utils.ts":"84","/Users/matheuscunha/USP/Plantshop/src/packages/admin/src/components/InventoryItem/styles.ts":"85","/Users/matheuscunha/USP/Plantshop/src/packages/rent-page/src/components/RentProduct/styles.ts":"86","/Users/matheuscunha/USP/Plantshop/src/store/sagas.ts":"87","/Users/matheuscunha/USP/Plantshop/src/store/apiRequester.ts":"88","/Users/matheuscunha/USP/Plantshop/src/store/actionTypes.ts":"89","/Users/matheuscunha/USP/Plantshop/src/store/actionCreators.ts":"90","/Users/matheuscunha/USP/Plantshop/src/store/types.ts":"91"},{"size":895,"mtime":1626639849941,"results":"92","hashOfConfig":"93"},{"size":11787,"mtime":1627248325642,"results":"94","hashOfConfig":"93"},{"size":3868,"mtime":1627250783434,"results":"95","hashOfConfig":"93"},{"size":2401,"mtime":1627243312399,"results":"96","hashOfConfig":"93"},{"size":38,"mtime":1624733016166,"results":"97","hashOfConfig":"93"},{"size":2662,"mtime":1625182621373,"results":"98","hashOfConfig":"93"},{"size":257,"mtime":1626939032223,"results":"99","hashOfConfig":"93"},{"size":124,"mtime":1625097669644,"results":"100","hashOfConfig":"93"},{"size":2100,"mtime":1625182621379,"results":"101","hashOfConfig":"93"},{"size":3005,"mtime":1626938618824,"results":"102","hashOfConfig":"93"},{"size":2015,"mtime":1625182621379,"results":"103","hashOfConfig":"93"},{"size":1911,"mtime":1625182621378,"results":"104","hashOfConfig":"93"},{"size":2093,"mtime":1625182621379,"results":"105","hashOfConfig":"93"},{"size":628,"mtime":1625182621371,"results":"106","hashOfConfig":"93"},{"size":887,"mtime":1625182621368,"results":"107","hashOfConfig":"93"},{"size":2303,"mtime":1626939032221,"results":"108","hashOfConfig":"93"},{"size":37,"mtime":1624733016179,"results":"109","hashOfConfig":"93"},{"size":36,"mtime":1624733016186,"results":"110","hashOfConfig":"93"},{"size":37,"mtime":1624733016174,"results":"111","hashOfConfig":"93"},{"size":40,"mtime":1624733016177,"results":"112","hashOfConfig":"93"},{"size":37,"mtime":1624826616213,"results":"113","hashOfConfig":"93"},{"size":41,"mtime":1624832056763,"results":"114","hashOfConfig":"93"},{"size":40,"mtime":1625097669632,"results":"115","hashOfConfig":"93"},{"size":42,"mtime":1625097669633,"results":"116","hashOfConfig":"93"},{"size":39,"mtime":1624733016184,"results":"117","hashOfConfig":"93"},{"size":39,"mtime":1625097669623,"results":"118","hashOfConfig":"93"},{"size":125,"mtime":1625097669641,"results":"119","hashOfConfig":"93"},{"size":524,"mtime":1624815108811,"results":"120","hashOfConfig":"93"},{"size":7661,"mtime":1626620695235,"results":"121","hashOfConfig":"122"},{"size":315,"mtime":1625097669629,"results":"123","hashOfConfig":"93"},{"size":170,"mtime":1624733016170,"results":"124","hashOfConfig":"93"},{"size":708,"mtime":1625097669626,"results":"125","hashOfConfig":"93"},{"size":2998,"mtime":1626837794569,"results":"126","hashOfConfig":"93"},{"size":4743,"mtime":1627243312392,"results":"127","hashOfConfig":"93"},{"size":2924,"mtime":1627243312396,"results":"128","hashOfConfig":"93"},{"size":6412,"mtime":1627243312393,"results":"129","hashOfConfig":"93"},{"size":3626,"mtime":1627250783434,"results":"130","hashOfConfig":"93"},{"size":7993,"mtime":1626932515425,"results":"131","hashOfConfig":"93"},{"size":5860,"mtime":1627243312401,"results":"132","hashOfConfig":"93"},{"size":4779,"mtime":1627249737227,"results":"133","hashOfConfig":"93"},{"size":1220,"mtime":1625182621374,"results":"134","hashOfConfig":"93"},{"size":522,"mtime":1625097669622,"results":"135","hashOfConfig":"93"},{"size":40,"mtime":1624833018814,"results":"136","hashOfConfig":"93"},{"size":980,"mtime":1626813712574,"results":"137","hashOfConfig":"93"},{"size":98,"mtime":1625176347570,"results":"138","hashOfConfig":"93"},{"size":542,"mtime":1625097669633,"results":"139","hashOfConfig":"93"},{"size":79,"mtime":1625106540900,"results":"140","hashOfConfig":"93"},{"size":298,"mtime":1625179271652,"results":"141","hashOfConfig":"93"},{"size":682,"mtime":1625097669633,"results":"142","hashOfConfig":"93"},{"size":535,"mtime":1624742706334,"results":"143","hashOfConfig":"93"},{"size":84,"mtime":1624833271972,"results":"144","hashOfConfig":"93"},{"size":542,"mtime":1624815108814,"results":"145","hashOfConfig":"93"},{"size":1162,"mtime":1626927902148,"results":"146","hashOfConfig":"93"},{"size":265,"mtime":1624827142830,"results":"147","hashOfConfig":"93"},{"size":1065,"mtime":1625182916013,"results":"148","hashOfConfig":"93"},{"size":1147,"mtime":1625179731057,"results":"149","hashOfConfig":"93"},{"size":363,"mtime":1625182621365,"results":"150","hashOfConfig":"93"},{"size":44,"mtime":1625105750657,"results":"151","hashOfConfig":"93"},{"size":36,"mtime":1625181596726,"results":"152","hashOfConfig":"93"},{"size":41,"mtime":1624835719968,"results":"153","hashOfConfig":"93"},{"size":32,"mtime":1624826395670,"results":"154","hashOfConfig":"93"},{"size":39,"mtime":1625178332586,"results":"155","hashOfConfig":"93"},{"size":40,"mtime":1624733016185,"results":"156","hashOfConfig":"93"},{"size":333,"mtime":1625182935456,"results":"157","hashOfConfig":"93"},{"size":333,"mtime":1625179212081,"results":"158","hashOfConfig":"93"},{"size":304,"mtime":1625182313390,"results":"159","hashOfConfig":"93"},{"size":196,"mtime":1624832833339,"results":"160","hashOfConfig":"93"},{"size":890,"mtime":1625182621376,"results":"161","hashOfConfig":"93"},{"size":829,"mtime":1625184114497,"results":"162","hashOfConfig":"93"},{"size":504,"mtime":1625182621375,"results":"163","hashOfConfig":"93"},{"size":745,"mtime":1625178990466,"results":"164","hashOfConfig":"93"},{"size":1116,"mtime":1626633272617,"results":"165","hashOfConfig":"93"},{"size":854,"mtime":1626921883706,"results":"166","hashOfConfig":"93"},{"size":128,"mtime":1625178295032,"results":"167","hashOfConfig":"93"},{"size":318,"mtime":1626926306802,"results":"168","hashOfConfig":"93"},{"size":495,"mtime":1624831625275,"results":"169","hashOfConfig":"93"},{"size":128,"mtime":1624835950928,"results":"170","hashOfConfig":"93"},{"size":128,"mtime":1625105578247,"results":"171","hashOfConfig":"93"},{"size":318,"mtime":1626926303399,"results":"172","hashOfConfig":"93"},{"size":41,"mtime":1624832157399,"results":"173","hashOfConfig":"93"},{"size":39,"mtime":1624733016187,"results":"174","hashOfConfig":"93"},{"size":1963,"mtime":1627243312394,"results":"175","hashOfConfig":"93"},{"size":3713,"mtime":1627247773754,"results":"176","hashOfConfig":"93"},{"size":285,"mtime":1625112345458,"results":"177","hashOfConfig":"93"},{"size":260,"mtime":1624834742187,"results":"178","hashOfConfig":"93"},{"size":484,"mtime":1625183954637,"results":"179","hashOfConfig":"93"},{"size":6278,"mtime":1627243312406,"results":"180","hashOfConfig":"93"},{"size":6458,"mtime":1627251862873,"results":"181","hashOfConfig":"93"},{"size":3742,"mtime":1627243312403,"results":"182","hashOfConfig":"93"},{"size":10994,"mtime":1627243312402,"results":"183","hashOfConfig":"93"},{"size":1692,"mtime":1627243312407,"results":"184","hashOfConfig":"93"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},"cwffup",{"filePath":"188","messages":"189","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"187"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207","usedDeprecatedRules":"187"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},"127u7f6",{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"257","usedDeprecatedRules":"187"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"260","usedDeprecatedRules":"187"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"263","usedDeprecatedRules":"187"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"266","messages":"267","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"268","usedDeprecatedRules":"187"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"271","usedDeprecatedRules":"187"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"274","usedDeprecatedRules":"187"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"295","messages":"296","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"301","messages":"302","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"303","messages":"304","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"307","messages":"308","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"309","messages":"310","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"311","messages":"312","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"313","messages":"314","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"315","messages":"316","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"317","messages":"318","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"319","messages":"320","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"321","messages":"322","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"323","messages":"324","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"325","messages":"326","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"327","messages":"328","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"329","messages":"330","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"331","messages":"332","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"333","messages":"334","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"335","messages":"336","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"337","messages":"338","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"339","messages":"340","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"341","messages":"342","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"343","messages":"344","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"345","messages":"346","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"347","messages":"348","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"349","messages":"350","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"351","messages":"352","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"353","messages":"354","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"355","messages":"356","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"357","messages":"358","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"359","messages":"360","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"361","messages":"362","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"363","messages":"364","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"365","messages":"366","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"367","messages":"368","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"369","usedDeprecatedRules":"187"},{"filePath":"370","messages":"371","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"372","messages":"373","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"374","messages":"375","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"376","messages":"377","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},"/Users/matheuscunha/USP/Plantshop/src/index.tsx",[],["378","379"],"/Users/matheuscunha/USP/Plantshop/src/store/reducer.ts",["380"],"import produce, { enableMapSet } from 'immer';\nimport { mockedUsers } from '../mock-objects/usersList';\nimport { ApplicationState, initialPossibleState } from './types';\nimport { ApplicationAction } from './actions';\nimport { ActionTypes } from './actionTypes';\n\nexport const initialState: ApplicationState = {\n  loading: initialPossibleState,\n  error: initialPossibleState,\n  success: initialPossibleState,\n  user: null,\n  products: [],\n  cartProducts: new Map(),\n  rentOrders: [],\n  rentedProducts: [],\n  usersList: mockedUsers,\n  orders: [],\n}\n\nconst reducer = (state = initialState, action: ApplicationAction) => {\n  enableMapSet();\n  \n  switch (action.type) {\n    case ActionTypes.LOAD_USER_REQUEST:\n      return produce(state, draft => {\n        draft.loading.user = true;\n      });\n    case ActionTypes.LOAD_USER_SUCCESS:\n      return produce(state, draft => {\n      draft.loading.user = false;\n      draft.error.user = false;\n      localStorage.setItem('@plantshop/email', action.user.email);\n      localStorage.setItem('@plantshop/password', action.user.password);\n      draft.user = action.user;\n    });\n    case ActionTypes.LOAD_USER_ERROR:\n      return produce(state, draft => {\n        draft.loading.user = false;\n        draft.error.user = true;\n      });\n    case ActionTypes.LOAD_USER_RESET:\n      return produce(state, draft => {\n        draft.loading.user = false;\n        draft.error.user = false;\n      });\n    case ActionTypes.LOAD_ALL_PRODUCTS_REQUEST:\n      return produce(state, draft => {\n        draft.loading.allProducts = true;\n        draft.error.allProducts = false;\n      });\n      case ActionTypes.LOAD_ALL_PRODUCTS_SUCCESS:\n        return produce(state, draft => {\n        draft.loading.allProducts = false;\n        draft.error.allProducts = false;\n        draft.products = action.products;\n      });\n    case ActionTypes.LOAD_ALL_PRODUCTS_ERROR:\n      return produce(state, draft => {\n        draft.loading.allProducts = false;\n        draft.error.allProducts = true;\n      });\n    case ActionTypes.ADD_PRODUCT_TO_CART_REQUEST:\n      return produce(state, draft => {\n        if(state.cartProducts.has(action.product.id)){\n          const selectedProduct = state.cartProducts.get(action.product.id)!;\n          draft.cartProducts.set(action.product.id, {...selectedProduct, quantity: selectedProduct.quantity + 1})\n        } else {\n          draft.cartProducts.set(action.product.id, action.product);\n        }\n      });\n    case ActionTypes.REMOVE_PRODUCT_FROM_CART_RQUEST:\n      return produce(state, draft => {\n        if(state.cartProducts.has(action.id)){\n          const selectedProduct = state.cartProducts.get(action.id)!;\n          draft.cartProducts.delete(action.id);          \n        }\n      });\n    case ActionTypes.PLACE_PURCHASE_ORDER_REQUEST:\n      return produce(state, draft => {\n        draft.loading.placePurchaseOrder = true;\n        draft.error.placePurchaseOrder = false;\n        draft.success.placePurchaseOrder = false;\n      });\n    case ActionTypes.PLACE_PURCHASE_ORDER_SUCCESS:\n      return produce(state, draft => {\n        draft.loading.placePurchaseOrder = false;\n        draft.error.placePurchaseOrder = false;\n        draft.success.placePurchaseOrder = true;\n        draft.cartProducts = new Map();\n      });\n    case ActionTypes.PLACE_PURCHASE_ORDER_ERROR:\n      return produce(state, draft => {\n        draft.loading.placePurchaseOrder = false;\n        draft.error.placePurchaseOrder = true;\n        draft.success.placePurchaseOrder = false;\n      });\n    case ActionTypes.PLACE_PURCHASE_ORDER_NOT_ASKED:\n      return produce(state, draft => {\n        draft.loading.placePurchaseOrder = false;\n        draft.error.placePurchaseOrder = false;\n        draft.success.placePurchaseOrder = false;\n      });\n    case ActionTypes.CLEAR_PRODUCT_IN_CART_REQUEST:\n      return produce(state, draft => {\n        draft.cartProducts = new Map();\n        draft.rentOrders = [];\n      });\n    case ActionTypes.REMOVE_RENT_ORDER_REQUEST:\n      return produce(state, draft => {\n        draft.rentOrders = [];\n        state.rentOrders.forEach((order) => {\n          if(order.orderId !== action.orderId) {\n            draft.rentOrders.push(order);\n          }\n        });\n      });\n    case ActionTypes.SIGN_UP_USER_REQUEST:\n      return produce(state, draft => {\n        draft.loading.signUp = true;\n      });\n    case ActionTypes.SIGN_UP_USER_SUCCESS:\n      return produce(state, draft => {\n        draft.loading.signUp = false;\n        draft.success.signUp = true; \n      });\n    case ActionTypes.SIGN_UP_USER_ERROR:\n      return produce(state, draft => {\n        draft.loading.signUp = false;\n        draft.error.signUp = true;\n      });\n    case ActionTypes.SIGN_UP_USER_RESET:\n      return produce(state, draft => {\n        draft.loading.signUp = false;\n        draft.error.signUp = false;\n        draft.success.signUp = false;\n      });\n    case ActionTypes.ADD_INVENTORY_REQUEST:\n      return produce(state, draft => {\n        draft.loading.addInventory = true;\n      });\n    case ActionTypes.ADD_INVENTORY_SUCCESS:\n      return produce(state, draft => {\n        draft.loading.addInventory = false;\n        draft.success.addInventory = true;\n      });\n    case ActionTypes.ADD_INVENTORY_ERROR:\n      return produce(state, draft => {\n        draft.loading.addInventory = false;\n        draft.error.addInventory = true;\n      });\n    case ActionTypes.REMOVE_INVENTORY_REQUEST:\n      return produce(state, draft => {\n        draft.loading.removeInventory = true;\n      });\n    case ActionTypes.REMOVE_INVENTORY_SUCCESS:\n      return produce(state, draft => {\n        draft.loading.removeInventory = false;\n        draft.success.removeInventory = true;\n      });\n    case ActionTypes.REMOVE_INVENTORY_ERROR:\n      return produce(state, draft => {\n        draft.loading.removeInventory = false;\n        draft.error.removeInventory = true;\n      });\n    case ActionTypes.INVENTORY_RESET:\n      return produce(state, draft => {\n        draft.loading.removeInventory = false;\n        draft.success.removeInventory = false;\n        draft.error.removeInventory = false;\n        draft.loading.addInventory = false;\n        draft.success.addInventory = false;\n        draft.error.addInventory = false;\n        draft.loading.removeProduct = false;\n        draft.error.removeProduct = false;\n        draft.success.removeProduct = false;\n      }); \n    case ActionTypes.RENT_PRODUCT_REQUEST:\n      return produce(state, draft => {\n        draft.rentOrders.push(action.rentOrder);\n      });\n    case ActionTypes.PLACE_RENT_ORDERS_REQUEST:\n      return produce(state, draft => {\n        draft.error.placeRentOrders = false;\n        draft.success.placeRentOrders = false;\n        draft.loading.placeRentOrders = true;\n      });\n    case ActionTypes.PLACE_RENT_ORDERS_SUCCESS:\n      return produce(state, draft => {\n        draft.error.placeRentOrders = false;\n        draft.success.placeRentOrders = true;\n        draft.loading.placeRentOrders = false;\n        draft.rentOrders = [];\n      });\n    case ActionTypes.PLACE_RENT_ORDERS_ERROR:\n      return produce(state, draft => {\n        draft.error.placeRentOrders = true;\n        draft.success.placeRentOrders = false;\n        draft.loading.placeRentOrders = false;\n      });\n    case ActionTypes.LOAD_ALL_ORDERS_REQUEST:\n      return produce(state, draft => {\n        draft.error.loadAllOrders = false;\n        draft.success.loadAllOrders = false;\n        draft.loading.loadAllOrders = true;\n      });\n    case ActionTypes.LOAD_ALL_ORDERS_SUCCESS:\n      return produce(state, draft => {\n        draft.error.loadAllOrders = false;\n        draft.success.loadAllOrders = true;\n        draft.loading.loadAllOrders = false;\n        draft.orders = action.purchaseOrders;\n        draft.rentedProducts = action.rentOrders;\n      });\n    case ActionTypes.LOAD_ALL_ORDERS_ERROR:\n      return produce(state, draft => {\n        draft.error.loadAllOrders = true;\n        draft.success.loadAllOrders = false;\n        draft.loading.loadAllOrders = false;\n      });\n    case ActionTypes.REMOVE_PRODUCT_REQUEST:\n      return produce(state, draft => {\n        draft.loading.removeProduct = true;\n    }); \n    case ActionTypes.REMOVE_PRODUCT_SUCCESS:\n      return produce(state, draft => {\n        draft.loading.removeProduct = false;\n        draft.success.removeProduct = true;\n    }); \n    case ActionTypes.REMOVE_PRODUCT_ERROR:\n      return produce(state, draft => {\n        draft.loading.removeProduct = false;\n        draft.error.removeProduct = true;\n    }); \n    case ActionTypes.EDIT_USER_REQUEST:\n      return produce(state, draft => {\n        draft.loading.editUser = true;\n        draft.success.editUser = false;\n        draft.error.editUser = false;\n      });\n    case ActionTypes.EDIT_USER_SUCCESS:\n      return produce(state, draft => {\n        draft.loading.editUser = false;\n        draft.success.editUser = true;\n      });\n    case ActionTypes.EDIT_USER_ERROR:\n      return produce(state, draft => {\n        draft.loading.editUser = false;\n        draft.error.editUser = true;\n      });\n    case ActionTypes.MINUS_PRODUCT_IN_CART_REQUEST:\n      return produce(state, draft => {\n        if(state.cartProducts.has(action.id)){\n          const selectedProduct = state.cartProducts.get(action.id)!;\n          if(selectedProduct.quantity === 1){\n            draft.cartProducts.delete(action.id);\n          }else if(selectedProduct.quantity > 1){\n            draft.cartProducts.set(action.id, {...selectedProduct, quantity: selectedProduct.quantity - 1})\n          }\n        }\n      });\n    case ActionTypes.PLUS_PRODUCT_IN_CART_REQUEST:\n      return produce(state, draft => {\n        state.products.forEach(product => {\n          if(state.cartProducts.has(action.id)){\n            const selectedProduct = state.cartProducts.get(action.id)!;\n            if(product.id === action.id && product.quantity - selectedProduct.quantity > 0){\n              draft.cartProducts.set(action.id, {...selectedProduct, quantity: selectedProduct.quantity + 1})\n            }\n          }\n        });\n      });\n    case ActionTypes.ADD_ADMIN_REQUEST:\n      return produce(state, draft => {\n        draft.loading.addAdmin = true;\n      });\n    case ActionTypes.ADD_ADMIN_SUCCESS:\n      return produce(state, draft => {\n        draft.loading.addAdmin = false;\n        draft.success.addAdmin = true;\n      });\n    case ActionTypes.ADD_ADMIN_ERROR:\n      return produce(state, draft => {\n        draft.loading.addAdmin = false;\n        draft.error.addAdmin = true;\n      });\n    case ActionTypes.ADD_ADMIN_RESET:\n      return produce(state, draft => {\n        draft.loading.addAdmin = false;\n        draft.success.addAdmin = false;\n        draft.error.addAdmin = false;\n      });\n    case ActionTypes.ADD_PRODUCT_REQUEST:\n      return produce(state, draft => {\n        draft.loading.addProduct = true;\n      });\n    case ActionTypes.ADD_PRODUCT_SUCCESS:\n      return produce(state, draft => {\n        draft.loading.addProduct = false;\n        draft.success.addProduct = true;\n      });\n    case ActionTypes.ADD_PRODUCT_ERROR:\n      return produce(state, draft => {\n        draft.loading.addProduct = false;\n        draft.error.addProduct = true;\n      });\n    case ActionTypes.ADD_PRODUCT_RESET:\n      return produce(state, draft => {\n        draft.loading.addProduct = false;\n        draft.error.addProduct = false;\n        draft.success.addProduct = false;\n      });\n    case ActionTypes.LOG_OUT_REQUEST:\n      return produce(state, draft => {\n        localStorage.removeItem('@plantshop/email');\n        localStorage.removeItem('@plantshop/password');\n        draft.loading.user = false;\n        draft.error.user = false;\n        draft.user = null;\n      });\n    default:\n      return state;\n  }\n}\n\nexport default reducer;","/Users/matheuscunha/USP/Plantshop/src/App.tsx",["381"],"/Users/matheuscunha/USP/Plantshop/src/packages/home/src/components/HomePage/HomePage.tsx",[],"/Users/matheuscunha/USP/Plantshop/src/base-components/navigation/index.ts",[],"/Users/matheuscunha/USP/Plantshop/src/mock-objects/products.ts",[],"/Users/matheuscunha/USP/Plantshop/src/mock-objects/usersList.ts",[],"/Users/matheuscunha/USP/Plantshop/src/packages/home/src/components/HomePage/styles.ts",[],"/Users/matheuscunha/USP/Plantshop/src/packages/category/src/components/plantPage/PlantPage.tsx",[],"/Users/matheuscunha/USP/Plantshop/src/base-components/product/src/components/DetailProductPage/DetailProductPage.tsx",["382","383"],"import React from 'react';\nimport * as styles from './styles';\nimport { useParams } from \"react-router-dom\";\nimport { ApplicationState, ProductModel } from '../../../../../store/types';\nimport { Dispatch } from 'redux';\nimport { connect } from 'react-redux';\nimport { addProductToChartRequest, loadAllProductsRequest } from '../../../../../store/actionCreators';\nimport ReactNotification, { store } from 'react-notifications-component'\nimport { useEffect } from 'react';\n\nexport interface DetailProductPageProps {\n\tproducts: ProductModel[];\n\tcartProducts: Map<string, ProductModel>;\n\taddProduct: (product: ProductModel) => void;\n\tloadAllProducts: () => void;\n}\n\ninterface ReceivedProps{\n  \tid: string;\n}\n\nconst DetailProductPage: React.FC<DetailProductPageProps> = (props) => {\n\tconst productProps  = useParams<ReceivedProps>();\n\tconst selectedCartProduct = props.cartProducts.get(productProps.id);\n\tlet selectedProduct = props.products.find((product) => product.id === productProps.id);\n\n\tuseEffect(() => {\n\t\tprops.loadAllProducts();\n\t}, []);\n\n\tuseEffect(() => {\n\t\tselectedProduct = props.products.find((product) => product.id === productProps.id);\n\t}, [props.products]);\n\n\tconst addProduct = () => {\n\t\tif((selectedCartProduct === undefined || selectedCartProduct!.quantity < selectedProduct!.quantity) && selectedProduct!.quantity > 0){\n\t\t\tconst productToAdd: ProductModel = {...selectedProduct!, quantity: 1};\n\t\t\tprops.addProduct(productToAdd);\n\t\t\tstore.addNotification({\n\t\t\t\ttitle: \"Produto adicionado no carrinho!\",\n\t\t\t\tmessage: \" \",\n\t\t\t\ttype: \"success\",\n\t\t\t\tinsert: \"top\",\n\t\t\t\tcontainer: \"top-left\",\n\t\t\t\tanimationIn: [\"animate__animated\", \"animate__fadeIn\"],\n\t\t\t\tanimationOut: [\"animate__animated\", \"animate__fadeOut\"],\n\t\t\t\tdismiss: {\n\t\t\t\tduration: 2000,\n\t\t\t\tonScreen: false\n\t\t\t\t}\n\t\t\t});\n\t\t}\n  }\n\n  \treturn ( selectedProduct?\n\t\t<div className={styles.product}>\n\t\t\t<ReactNotification/>\n\t\t\t<h1>{selectedProduct?.name}</h1>\n\t\t\t<img className={styles.productImage} src={selectedProduct?.img} alt=\"\"/>\n\t\t\t<h3 className={styles.title}>{selectedProduct?.name + \" - Quantidade disponível: \" + selectedProduct?.quantity}</h3>\n\t\t\t{selectedProduct?.description}\n\t\t\t<h2 className={styles.price}>R${selectedProduct?.price}</h2>\n\t\t\t<button className={\"material-icons-outlined \" + styles.cartIcon} onClick={addProduct}> add_shopping_cart </button>\n\t\t</div> :\n\t\t<div></div>\n  );\n};\n\ninterface DispatchProps {\n  \taddProduct: (product: ProductModel) => void;\n\t\tloadAllProducts: () => void;\n}\ninterface StateProps{\n\tproducts: ProductModel[];\n\tcartProducts: Map<string, ProductModel>;\n}\n\nconst mapStateToProps = (state: ApplicationState): StateProps => ({\n    products: state.products,\n    cartProducts: state.cartProducts,\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch): DispatchProps => ({\n  \taddProduct:(product) => {dispatch(addProductToChartRequest(product))},\n  \tloadAllProducts:() => {dispatch(loadAllProductsRequest())}\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DetailProductPage);","/Users/matheuscunha/USP/Plantshop/src/packages/category/src/components/flowerPage/FlowerPage.tsx",[],"/Users/matheuscunha/USP/Plantshop/src/packages/category/src/components/bouquetPage/BouquetPage.tsx",[],"/Users/matheuscunha/USP/Plantshop/src/packages/category/src/components/potPage/PotPage.tsx",[],"/Users/matheuscunha/USP/Plantshop/src/base-components/product/src/components/Product/Product.tsx",[],"/Users/matheuscunha/USP/Plantshop/src/base-components/product-list/src/components/ProductList/ProductList.tsx",[],"/Users/matheuscunha/USP/Plantshop/src/base-components/navigation/Navigation.tsx",[],"/Users/matheuscunha/USP/Plantshop/src/packages/cart/src/components/ChartPage/index.ts",[],"/Users/matheuscunha/USP/Plantshop/src/packages/rent-page/src/components/RentPage/index.ts",[],"/Users/matheuscunha/USP/Plantshop/src/packages/authentication/src/components/LoginPage/index.ts",[],"/Users/matheuscunha/USP/Plantshop/src/packages/authentication/src/components/RegisterPage/index.ts",[],"/Users/matheuscunha/USP/Plantshop/src/packages/admin/src/components/AdminPage/index.ts",[],"/Users/matheuscunha/USP/Plantshop/src/packages/admin/src/components/InventoryPage/index.ts",[],"/Users/matheuscunha/USP/Plantshop/src/packages/admin/src/components/AddAdminPage/index.ts",[],"/Users/matheuscunha/USP/Plantshop/src/packages/admin/src/components/AddProductPage/index.ts",[],"/Users/matheuscunha/USP/Plantshop/src/packages/profile/src/components/ProfilePage/index.ts",[],"/Users/matheuscunha/USP/Plantshop/src/base-components/ManageArrow/index.ts",[],"/Users/matheuscunha/USP/Plantshop/src/packages/category/src/components/styles.ts",[],"/Users/matheuscunha/USP/Plantshop/src/base-components/product/src/components/DetailProductPage/styles.ts",[],"/Users/matheuscunha/USP/Plantshop/src/store/actions.ts",[],["384","385"],"/Users/matheuscunha/USP/Plantshop/src/base-components/product/src/components/Product/styles.ts",[],"/Users/matheuscunha/USP/Plantshop/src/base-components/product-list/src/components/ProductList/styles.ts",[],"/Users/matheuscunha/USP/Plantshop/src/base-components/navigation/styles.ts",[],"/Users/matheuscunha/USP/Plantshop/src/packages/rent-page/src/components/RentPage/RentPage.tsx",[],"/Users/matheuscunha/USP/Plantshop/src/packages/admin/src/components/AddAdminPage/AddAdminPage.tsx",["386"],"import React, { useEffect } from 'react'\nimport * as styles from './styles'\nimport { ApplicationState, User } from '../../../../../store/types';\nimport { addAdminRequest, addAdminReset } from '../../../../../store/actionCreators';\nimport { Dispatch } from 'redux';\nimport { connect } from 'react-redux';\nimport { useForm } from '../../../../useForm';\nimport {useHistory} from 'react-router';\nimport ReactNotification, { store } from 'react-notifications-component';\nimport 'react-notifications-component/dist/theme.css';\n\n\nexport interface AddAdminPageProps {\n  user: User | null,\n  allUsers: User[],\n  addAdminError: boolean,\n\taddAdminLoading: boolean,\n\taddAdminSuccess: boolean,\n\taddAdmin: (name: string, address: string, phoneNumber: string, email: string, password: string) => void,\n\taddAdminReset: () => void\n}\n\nconst AddAdminPage: React.FC<AddAdminPageProps> = (props) => {\n\tconst history = useHistory();\n\t  \n\tconst initialState = {\n\t\tname: '',\n\t\taddress: '',\n\t\tphoneNumber: '',\n\t\temail: '',\n\t\tpassword: '',\n\t};\n\n  useEffect(() => {\n\t\tif ( props.addAdminError && !props.addAdminLoading ) { // Error: user not registered\t\n\n      store.addNotification({\n        title: \"Email já cadastrado, por favor utilize outro!\",\n        message: \" \",\n        type: \"danger\",\n        insert: \"top\",\n        container: \"top-left\",\n        animationIn: [\"animate__animated\", \"animate__fadeIn\"],\n        animationOut: [\"animate__animated\", \"animate__fadeOut\"],\n        dismiss: {\n          duration: 2000,\n          onScreen: false\n        }\n\t\t\t});\n\n\t\t} else if ( props.addAdminSuccess ) { // Success: user registered\n\t\t\t\n      store.addNotification({\n        title: \"Administrador adicionado com sucesso!\",\n        message: \" \",\n        type: \"success\",\n        insert: \"top\",\n        container: \"top-left\",\n        animationIn: [\"animate__animated\", \"animate__fadeIn\"],\n        animationOut: [\"animate__animated\", \"animate__fadeOut\"],\n        dismiss: {\n          duration: 2000,\n          onScreen: false\n        }\n      })\n      setTimeout(function (){\n        history.push('admin-page')\n      }, 2000);\n\n      // Reseting loading, error adn success for signUp\n      props.addAdminReset();\n\n\t\t}\n\t} ,[props.addAdminError, props.addAdminLoading, props.addAdminSuccess]);\n\n\tasync function addAdminCallback(){\n\t\tconst input = JSON.parse(JSON.stringify(values));\n\t\tprops.addAdmin(input.name, input.address, input.phoneNumber, input.email, input.password);\n\t}\n\n\tconst { onChange, onSubmit, values} = useForm(addAdminCallback, initialState); \n\n  \treturn (\n      <div className={styles.registerForm}>\n        <ReactNotification/>\n\t\t<h1> Adicionar novo administrador </h1>\n        <br/>\n        <form onSubmit={onSubmit}>\n\t\t\t<div>\n\t\t\t\t<label>\n\t\t\t\t\tNome: <br/> <input \n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tname=\"name\"\n\t\t\t\t\tid=\"name\" \n\t\t\t\t\tplaceholder=\"Jose da Silva Souza\"\n\t\t\t\t\tonChange={onChange} \n\t\t\t\t\trequired/> \n\t\t\t\t\t<br/><br/>\n\t\t\t\t</label>\n\t\t\t\t<label>\n\t\t\t\t\tEndereço: <br/> <input \n\t\t\t\t\ttype=\"text\" \n\t\t\t\t\tname=\"address\" \n\t\t\t\t\tid=\"address\"\n\t\t\t\t\tplaceholder=\"Rua 1, 123, São Paulo, SP\" \n\t\t\t\t\tonChange={onChange}\n\t\t\t\t\trequired/><br/>\n            \t\t<br/>\n\t\t\t\t</label>\n\t\t\t\t<label>\n\t\t\t\t\tTelefone: <br/> <input \n\t\t\t\t\ttype=\"text\" \n\t\t\t\t\tname=\"phoneNumber\" \n\t\t\t\t\tid=\"phoneNumber\"\n\t\t\t\t\tplaceholder=\"(11)987456932\" \n\t\t\t\t\tonChange={onChange}\n\t\t\t\t\trequired/><br/>\n            \t\t<br/>\n\t\t\t\t</label>\n\t\t\t\t<label>\n\t\t\t\t\tEmail: <br/> <input \n\t\t\t\t\ttype=\"email\" \n\t\t\t\t\tname=\"email\" \n\t\t\t\t\tid=\"email\"\n\t\t\t\t\tplaceholder=\"seuemail@email.com\" \n\t\t\t\t\tonChange={onChange}\n\t\t\t\t\trequired/><br/>\n            \t\t<br/>\n\t\t\t\t</label>\n\t\t\t\t<label>\n\t\t\t\t\tSenha: <br/> <input \n\t\t\t\t\ttype=\"password\" \n\t\t\t\t\tname=\"password\"\n\t\t\t\t\tid=\"password\"\n\t\t\t\t\tonChange={onChange}\n\t\t\t\t\trequired/><br/><br/>\n\t\t\t\t</label>\n\t\t\t\t<label>\n\t\t\t\t\t<button type=\"submit\">Cadastrar</button>\n\t\t\t\t</label>\n\t\t\t</div>\n        </form>\n    </div>\n  );\n}\n\ninterface DispatchProps {\n\taddAdmin: (\n\t\tname: string, address: string, phoneNumber: string, email: string, password: string\n\t\t) \n\t\t=> void;\n\taddAdminReset: () => void;\n}\n\ninterface StateProps {\n\tuser: User | null;\n\tallUsers: User[];\n  addAdminError: boolean;\n\taddAdminLoading: boolean;\n\taddAdminSuccess: boolean;\n}\n\nconst mapStateToProps = (state: ApplicationState): StateProps => ({\n  user: state.user,\n  allUsers: state.usersList,\n  addAdminError: state.error.addAdmin,\n\taddAdminLoading: state.loading.addAdmin,\n\taddAdminSuccess: state.success.addAdmin,\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch): DispatchProps => ({\n\taddAdmin:(name, address, phoneNumber, email, password) => {dispatch(addAdminRequest(name, address, phoneNumber, email, password))},\n  addAdminReset: () => {dispatch(addAdminReset())}\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddAdminPage);\n","/Users/matheuscunha/USP/Plantshop/src/packages/admin/src/components/InventoryPage/InventoryPage.tsx",["387"],"import React, { ReactNode } from 'react';\nimport {useEffect} from 'react';\nimport { connect } from 'react-redux';\nimport { Dispatch } from 'redux';\nimport { Link } from 'react-router-dom';\nimport ManageButton from '../../../../../base-components/ManageButton';\nimport InventoryList from '../InventoryList';\nimport { ApplicationState, ProductModel, PossibleStates } from '../../../../../store/types';\nimport { loadAllProductsRequest, inventoryReset} from \"../../../../../store/actionCreators\";\nimport * as styles from './styles'\n\nexport interface InventoryPageProps{\n  products: ProductModel[];\n  success: PossibleStates;\n  errors: PossibleStates;\n  loadings: PossibleStates;\n\tloadInventory: () => void;\n  resetInventory: () => void;\n}\n\nconst InventoryPage: React.FC <InventoryPageProps> = (props) => {\n  useEffect(() => {\n\t\tif(\n      (props.success.addInventory && !props.loadings.addInventory && !props.errors.addInventory ) \n      || \n      (props.success.removeInventory && !props.loadings.removeInventory && !props.errors.removeInventory ) \n      ||\n      (props.success.removeProduct && !props.loadings.removeProduct && !props.errors.removeProduct ) \n    ){\n      props.loadInventory();\n      props.resetInventory();\n    }  \n\t}, [props.success.addInventory, props.success.removeInventory, props.success.removeProduct]);\n\n\tconst splitProducts = (products: ProductModel[]) => {\n\t\tconst productsMap: Map<string, ProductModel[]> = new Map();\n\t\tproducts.forEach((product) => {\n\t\t\tif (productsMap.has(product.type)){\n\t\t\t\tconst typeList: ProductModel[] = productsMap.get(product.type)!;\n\t\t\t\ttypeList.push(product);\n\t\t\t\tproductsMap.set(product.type, typeList);\n\t\t\t} else {\n\t\t\t\tproductsMap.set(product.type, [product]);\n\t\t\t}\n\t\t});\n\n\t\treturn productsMap;\n\t}\n\n\tconst renderProductTypeList = (products:Map<string, ProductModel[]>) => {\n\t\tconst lists: ReactNode[] = [];\n\n\t\tproducts.forEach((productsType, title) => {\n\t\t\tlists.push(<InventoryList title={title} products={productsType} />);\n\t\t});\n\n\t\treturn (\n\t\t<>\n\t\t\t{lists}\n\t\t</>\n\t\t)\n\t}\n\n\treturn(\n\t\t<div className={styles.mainPage}>\n\t\t<h1>Estoque</h1>\n\t\t<Link to=\"/add-product-page\"><ManageButton text={\"Adicionar novo produto\"} /> </Link>\n\t\t{renderProductTypeList(splitProducts(props.products))}\n\t\t</div>\n\t);\n}\n\ninterface DispatchProps {\n  loadInventory: () => void;\n  resetInventory: () => void;\n}\n\ninterface StateProps{\n  \tproducts: ProductModel[];\n    success: PossibleStates;\n    errors: PossibleStates;\n    loadings: PossibleStates;\n}\n\nconst mapStateToProps = (state: ApplicationState): StateProps => ({\n  \tproducts: state.products,\n    success: state.success,\n  errors: state.error,\n  loadings: state.error,\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch): DispatchProps => ({\n  loadInventory: () => {dispatch(loadAllProductsRequest())},\n  resetInventory: () => {dispatch(inventoryReset())}\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(InventoryPage);","/Users/matheuscunha/USP/Plantshop/src/packages/admin/src/components/AddProductPage/AddProductPage.tsx",["388"],"import React, { useEffect} from 'react'\nimport * as styles from './styles'\nimport { ApplicationState } from '../../../../../store/types';\nimport { addProductRequest, addProductReset } from '../../../../../store/actionCreators';\nimport { Dispatch } from 'redux';\nimport { connect } from 'react-redux';\nimport { useForm } from '../../../../useForm';\nimport {useHistory} from 'react-router';\nimport ReactNotification, { store } from 'react-notifications-component';\nimport 'react-notifications-component/dist/theme.css';\n\nexport interface AddProductPageProps {\n  addProductLoading: boolean,\n  addProductError: boolean,\n  addProductSuccess: boolean,\n  addProduct: (\n    img: string,\n    name: string,\n    price: string,\n    quantity: number,\n    category: string,\n    description: string) => void,\n  addProductReset: () => void,\n}\n\nconst AddProductPage: React.FC<AddProductPageProps> = (props) => {\n    const history = useHistory();\n    \n    const initialState = {\n        img: '',\n        name: '',\n        price: '',\n        quantity: 1,\n        category: '',\n        description: '',\n    };\n\n    useEffect(() => {\n      if ( props.addProductError && !props.addProductLoading) { // Error: user not registered\t\n  \n        store.addNotification({\n          title: \"Já existe um produto com este nome!\",\n          message: \" \",\n          type: \"danger\",\n          insert: \"top\",\n          container: \"top-left\",\n          animationIn: [\"animate__animated\", \"animate__fadeIn\"],\n          animationOut: [\"animate__animated\", \"animate__fadeOut\"],\n          dismiss: {\n            duration: 2000,\n            onScreen: false\n          }\n        });\n  \n      } else if ( props.addProductSuccess ) { // Success: user registered\n        \n        store.addNotification({\n          title: \"Produto adicionado com sucesso!\",\n          message: \" \",\n          type: \"success\",\n          insert: \"top\",\n          container: \"top-left\",\n          animationIn: [\"animate__animated\", \"animate__fadeIn\"],\n          animationOut: [\"animate__animated\", \"animate__fadeOut\"],\n          dismiss: {\n            duration: 2000,\n            onScreen: false\n          }\n        })\n        setTimeout(function (){\n          history.push('admin-page')\n        }, 2000);\n  \n        props.addProductReset();\n  \n      }\n    }, [props.addProductError, props.addProductLoading, props.addProductSuccess]);\n\n    async function addProductCallback(){\n      const input = JSON.parse(JSON.stringify(values));\n\t\t  props.addProduct(input.image, input.name, input.price, input.quantity, input.category, input.description);\n    }\n    \n    const { onChange, onChangeSelect, onSubmit, values} = useForm(addProductCallback, initialState); \n\n    return (\n        <div className={styles.registerForm}>\n          <ReactNotification/>\n          <h1> Adicionar novo produto </h1>\n          <br/>\n          <form onSubmit={onSubmit}>\n              <div>\n                  <label>\n                      Nome: <br/> <input \n                      type=\"text\"\n                      name=\"name\"\n                      id=\"name\" \n                      placeholder=\"Planta X\"\n                      onChange={onChange} \n                      required/> \n                      <br/><br/>\n                  </label>\n                  <label>\n                      Imagem: <br/> <input \n                      type=\"text\" \n                      name=\"image\" \n                      id=\"image\"\n                      placeholder=\"URL\" \n                      onChange={onChange}\n                      required/><br/>\n                      <br/>\n                  </label>\n                  <label>\n                      Preço: <br/> <input \n                      type=\"text\" \n                      name=\"price\" \n                      id=\"price\"\n                      placeholder=\"19.99\" \n                      onChange={onChange}\n                      required/><br/>\n                      <br/>\n                  </label>\n                  <label>\n                      Quantidade: <br/> <input \n                      type=\"number\" \n                      name=\"quantity\" \n                      id=\"quantity\"\n                      defaultValue={1}\n                      min={1}\n                      onChange={onChange}\n                      required/><br/>\n                      <br/>\n                  </label>\n                  <label>\n                      Tipo: <br/> <select \n                      id=\"category\"\n                      name=\"category\"\n                      onChange={onChangeSelect}\n                      required>\n                        <option value=\"Planta\"> Planta </option>\n                        <option value=\"Flor\"> Flor</option>\n                        <option value=\"Buque\">Buquê</option>\n                        <option value=\"Vaso\">Vaso</option>        \n                      </select>\n                      <br/><br/>\n                  </label>\n                  <label>\n                      Descrição: <br/> \n                      <input \n                        type=\"text\"\n                        id=\"description\"\n                        name=\"description\" \n                        placeholder=\"A Planta X é ótima para...\"\n                        onChange={onChange} \n                      required/>\n                      <br/><br/>\n                  </label>\n                  <label>\n                      <button type=\"submit\">Adicionar Produto</button>\n                  </label>\n              </div>\n          </form>\n      </div>\n    );\n}\n\ninterface DispatchProps{\n  addProduct: (\n    img: string,\n    name: string,\n    price: string,\n    quantity: number,\n    category: string,\n    description: string) => void;\n  addProductReset: () => void;\n}\n\ninterface StateProps{\n  addProductLoading: boolean;\n  addProductError: boolean;\n  addProductSuccess: boolean;\n}\n\nconst mapStateToProps = (state: ApplicationState): StateProps => ({\n  addProductLoading: state.loading.addProduct,\n  addProductError: state.error.addProduct,\n  addProductSuccess: state.success.addProduct\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch): DispatchProps => ({\n  addProduct: (img, name, price, quantity, category, description) => \n    {dispatch(addProductRequest(img, name, price, quantity, category, description))},\n  addProductReset: () => {dispatch(addProductReset())}\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddProductPage);\n","/Users/matheuscunha/USP/Plantshop/src/packages/authentication/src/components/LoginPage/LoginPage.tsx",["389"],"/Users/matheuscunha/USP/Plantshop/src/packages/cart/src/components/ChartPage/ChartPage.tsx",["390"],"import { connect } from 'react-redux'\nimport { Dispatch } from 'redux'\nimport { Link } from 'react-router-dom'\nimport { clearProductInCartRequest, minusProductInCartRequest, placePurchaseOrderNotAsked, placePurchaseOrderRequest, placeRentOrdersNotAsked, placeRentOrdersRequest, plusProductInCartRequest, removeProductFromCartRequest, removeRentOrderRequest } from '../../../../../store/actionCreators'\nimport { ApplicationState, Order, PossibleStates, ProductModel, ProductOrder, RentOrder, User} from '../../../../../store/types'\nimport ChartProduct  from '../ChartProduct/ChartProduct'\nimport * as styles from './styles'\nimport ReactNotification, { store } from 'react-notifications-component'\nimport 'react-notifications-component/dist/theme.css'\nimport ChartRent from '../ChartRent/ChartRent'\nimport ProductList from '../ProductList'\nimport { ReactElement } from 'react'\nimport { useEffect } from 'react'\n\nexport interface ChartPageProps{\n  user: User | null;\n  cartProducts: Map<string, ProductModel>;\n  rentOrders: RentOrder[];\n  loadings: PossibleStates;\n  errors: PossibleStates;\n  success: PossibleStates;\n  removeProduct: (id: string) => void;\n  removeRentOrder: (rentOrderId: number) => void;\n  minusProduct: (id: string) => void;\n\tplusProduct: (id: string) => void;\n  placePurchaseOrder:(user: User, order: Order) => void;\n  placePurchaseNotAsked:() => void;\n  placeRentOrders:(rentOrders: RentOrder[], user: User) => void;\n  placeRentNotAsked:() => void;\n  clearCart: () => void;\n}\n\nconst ChartPage: React.FC<ChartPageProps> = (props) => {\n\n  useEffect(() => {\n    if(props.success.placePurchaseOrder){\n      props.placePurchaseNotAsked();\n    } else if (props.success.placeRentOrders){\n      props.placeRentNotAsked();\n    }\n  }, [props.success]);\n\n  const getFinalPrice = () => {\n    let finalPrice: number = 0.0;\n\n    props.cartProducts.forEach((product) => {\n      finalPrice += parseFloat(product.price) * product.quantity;\n    });\n\n    props.rentOrders.forEach((rentOrder) => finalPrice += parseFloat(rentOrder.total));\n\n    return finalPrice;\n  }\n\n  const placePurchaseOrder = () => {\n\n    if(props.cartProducts.size !== 0){\n      let totalPrice: number = 0;\n      let productsOrders: ProductOrder[] = [];\n      \n      props.cartProducts.forEach((product) => {\n        totalPrice += parseFloat(product.price) * product.quantity;\n\n        const newProductOrder: ProductOrder = {\n          id: product.id, \n          name: product.name, \n          price: product.price, \n          quantity: product.quantity\n        }\n\n        // draft.products.forEach((value, idx) => {\n        //   if(value.id === product.id){\n        //     draft.products[idx].quantity -= product.quantity;\n        //   }\n        // })\n\n        productsOrders.push(newProductOrder);\n      });\n      \n      var day = new Date();\n      var dd = day.getDate().toString();\n      var mm = (day.getMonth()+1).toString();\n      var yyyy = (day.getFullYear()).toString();\n      if(parseInt(dd) < 10){\n        dd = '0' + dd;\n      } \n      if(parseInt(mm)<10){\n        mm = '0' + mm;\n      } \n\n      const newOrder: Order = {\n        productsOrders: productsOrders,\n        date: dd + \"/\" + mm + \"/\" + yyyy,\n        total: totalPrice.toFixed(2),\n        status: \"Preparando para envio!\",\n      }\n\n      props.placePurchaseOrder(props.user!, newOrder);\n    }\n\n    if(props.rentOrders.length !== 0) {\n      props.placeRentOrders(props.rentOrders, props.user!);\n    }\n\n    // props.clearCart();\n\n    store.addNotification({\n      title: \"Pedido feito com sucesso!\",\n      message: \" \",\n      type: \"success\",\n      insert: \"top\",\n      container: \"top-left\",\n      animationIn: [\"animate__animated\", \"animate__fadeIn\"],\n      animationOut: [\"animate__animated\", \"animate__fadeOut\"],\n      dismiss: {\n        duration: 2000,\n        onScreen: false\n      }\n      });\n  }\n  const notifyLogin = () => {\n      store.addNotification({\n        title: \"Por favor faça login antes de finalizar a compra.\",\n        message: \" \",\n        type: \"warning\",\n        insert: \"top\",\n        container: \"top-left\",\n        animationIn: [\"animate__animated\", \"animate__fadeIn\"],\n        animationOut: [\"animate__animated\", \"animate__fadeOut\"],\n        dismiss: {\n          duration: 2000,\n          onScreen: false\n        }\n      });\n  }\n\n  const renderRentOrder = (rentOrder: RentOrder, idx: number) => {\n    return (<ChartRent removeRentOrder={props.removeRentOrder} rentOrder={rentOrder}/>);\n  }\n\n  const renderProduts = (cartProducts: Map<string, ProductModel>) =>{\n\n    const cartProductElements: ReactElement[] = [];\n\n    cartProducts.forEach((cartProduct) => {\n      cartProductElements.push(\n        <ChartProduct \n          img={cartProduct.img} \n          name={cartProduct.name} \n          price={cartProduct.price} \n          quantity={cartProduct.quantity}\n          id={cartProduct.id} \n          removeProduct={props.removeProduct} \n          minusProduct={props.minusProduct}\n          plusProduct={props.plusProduct}\n        />);\n    });\n\n    return(cartProductElements);\n  }\n\n  return(\n    <div className={styles.productDisplay}>\n      <ReactNotification/>\n      <h1>Seus Produtos</h1>\n\n      \n      <div className={styles.productList}>\n        {/* {props.cartProducts.size !== 0 && renderProduts(props.cartProducts)} */}\n        {props.cartProducts.size !== 0 && <ProductList products={renderProduts(props.cartProducts)} title={\"Compras\"} />}\n        {/* {props.rentOrders.length !== 0 && props.rentOrders.map(renderRentOrder)} */}\n\n        {props.rentOrders.length !== 0 && <ProductList products={props.rentOrders.map(renderRentOrder)} title={\"Alugueis\"}/>}\n        {props.cartProducts.size === 0 && props.rentOrders.length === 0 && <h2>Você não tem nenhum produto no carrinho :(</h2>}\n      </div>\n      \n      {(props.cartProducts.size !== 0 || props.rentOrders.length !== 0) && <h1>Total: {\"R$ \" + getFinalPrice().toFixed(2)}</h1>}\n      {(props.cartProducts.size !== 0 || props.rentOrders.length !== 0) &&\n        <div>\n          <Link to=\"/\"><button>Continuar comprando</button></Link>\n          {props.user !== null && <button onClick={placePurchaseOrder}>Finalizar compra</button>}\n          {props.user === null && <button onClick={notifyLogin}>Finalizar compra</button>}\n        </div>\n      }\n    </div>\n  );\n}\n\ninterface DispatchProps {\n  removeProduct: (id: string) => void;\n  minusProduct: (id: string) => void;\n\tplusProduct: (id: string) => void;\n  removeRentOrder: (rentOrderId: number) => void;\n  placePurchaseOrder:(user: User, order: Order) => void;\n  placeRentOrders:(rentOrders: RentOrder[], user: User) => void;\n  placePurchaseNotAsked:() => void;\n  placeRentNotAsked:() => void;\n  clearCart: () => void;\n}\n\ninterface StateProps{\n  loadings: PossibleStates;\n  errors: PossibleStates;\n  success: PossibleStates;\n  cartProducts: Map<string, ProductModel>;\n  rentOrders: RentOrder[];\n  user: User | null;\n}\n\nconst mapStateToProps = (state: ApplicationState): StateProps => ({\n  cartProducts: state.cartProducts,\n  rentOrders: state.rentOrders,\n  user: state.user,\n  loadings: state.loading,\n  errors: state.error,\n  success: state.success\n  \n});\n\nconst mapDispatchToProps = (dispatch: Dispatch): DispatchProps => ({\n  removeProduct:(id) => {dispatch(removeProductFromCartRequest(id))},\n  placePurchaseOrder:(user: User, order: Order)  => {dispatch(placePurchaseOrderRequest(user, order))},\n  clearCart: () => {dispatch(clearProductInCartRequest())},\n  placeRentOrders:(rentOrders: RentOrder[], user: User) => {dispatch(placeRentOrdersRequest(rentOrders, user))},\n  minusProduct: (id) => {dispatch(minusProductInCartRequest(id))},\n  plusProduct: (id) => {dispatch(plusProductInCartRequest(id))},\n  removeRentOrder:(rentOrderId) => {dispatch(removeRentOrderRequest(rentOrderId))},\n  placePurchaseNotAsked:() => {dispatch(placePurchaseOrderNotAsked())},\n  placeRentNotAsked:() => {dispatch(placeRentOrdersNotAsked())}\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ChartPage);","/Users/matheuscunha/USP/Plantshop/src/packages/profile/src/components/ProfilePage/ProfilePage.tsx",["391"],"import { connect } from 'react-redux';\nimport { Dispatch } from 'redux';\nimport { ApplicationState, Order , RentOrder, User} from '../../../../../store/types';\nimport PurchaseInfo from '../PurchaseInfo';\nimport * as styles from './styles'\nimport { editUserRequest, loadAllOrdersRequest } from '../../../../../store/actionCreators';\nimport { useForm } from '../../../../useForm';\nimport {useHistory} from 'react-router';\nimport RentInfo from '../RentInfo';\nimport { useEffect } from 'react';\nimport ReactNotification, { store } from 'react-notifications-component';\n\n\nexport interface ProfilePageProps{\n  orders: Order[],\n  user: User,\n  allUsers: User[],\n\trentedProducts: RentOrder[],\n\teditSuccess: boolean,\n\teditError: boolean,\n  editUserInfo: (name: string, address: string, phoneNumber: string, email: string, id: string\n    ) => void,\n\tloadAllOrders: (user: User) => void,\n}\n\nconst ProfilePage: React.FC<ProfilePageProps> = (props) => {\n  //Purchase\n  const renderOrders = (order: Order, idx: number) =>{\n    return(\n      <PurchaseInfo number = {(idx+1)} date = {order.date} price = {order.total} productsOrders={order.productsOrders} status={order.status} />\n    );\n  }\n\n\tconst renderRentedproduct = (rentedProduct: RentOrder, idx: number) => {\n\t\treturn (\n\t\t\t<RentInfo rentOrder={rentedProduct} />\n\t\t);\n\t}\n\n  //Edit Profile\n  const history = useHistory();\n\n\tuseEffect(() => {\n\t\tif(props.user){\n\t\t\tprops.loadAllOrders(props.user);\n\t\t}\n\t}, [props.user]);\n\t\n\tuseEffect(() => \n\t{\n\t\tif(props.editError){\n\t\t\tstore.addNotification({\n\t\t\t\ttitle: \"Este email já existe. Tente com outro!\",\n\t\t\t\tmessage: \" \",\n\t\t\t\ttype: \"danger\",\n\t\t\t\tinsert: \"top\",\n\t\t\t\tcontainer: \"top-left\",\n\t\t\t\tanimationIn: [\"animate__animated\", \"animate__fadeIn\"],\n\t\t\t\tanimationOut: [\"animate__animated\", \"animate__fadeOut\"],\n\t\t\t\tdismiss: {\n\t\t\t\t  duration: 2000,\n\t\t\t\t  onScreen: false\n\t\t\t\t}\n\t\t\t});\n\t\t\tsetTimeout(function (){\n\t\t\t\twindow.location.reload();\n\t\t\t}, 1000);\n\t\t\t\n\t\t}\n\t\tif(props.editSuccess){\n\t\t\tstore.addNotification({\n\t\t\t\ttitle: \"Suas alterações foram salvas!\",\n\t\t\t\tmessage: \" \",\n\t\t\t\ttype: \"success\",\n\t\t\t\tinsert: \"top\",\n\t\t\t\tcontainer: \"top-left\",\n\t\t\t\tanimationIn: [\"animate__animated\", \"animate__fadeIn\"],\n\t\t\t\tanimationOut: [\"animate__animated\", \"animate__fadeOut\"],\n\t\t\t\tdismiss: {\n\t\t\t\t\tduration: 2000,\n\t\t\t\t\tonScreen: false\n\t\t\t\t}\n\t\t\t});\t\n\t\t}\n\t}, [props.editSuccess, props.editError]);\n\n\tconst initialState = {\n\t\tuser: props.user,\n\t}\n\n\tasync function editProfileCallback(){\n\t\tconst input = JSON.parse(JSON.stringify(values))\n\t\tlet fs = document.getElementsByTagName(\"fieldset\")[0];\n\t\tlet eb = document.getElementById(\"editButton\");\n\t\tif(eb !== null && fs !== null){\n\t\t\tif(eb.innerHTML === \"Editar\"){\n\t\t\t\teb.innerHTML = \"Salvar mudanças\"\n\t\t\t\tfs.disabled = false\t\n\t\t\t}else{\n\t\t\t\teb.innerHTML = \"Editar\"\n\t\t\t\tif(props.user){\n\t\t\t\t\tprops.editUserInfo(input.name ? input.name : props.user.name , input.address ? input.address:props.user.address, input.phoneNumber ? input.phoneNumber:props.user.phoneNumber, input.email ? input.email:props.user.email, props.user.id)\n\t\t\t\t}\n\t\t\t\tfs.disabled = true\n\t\t\t}\n\t\t\thistory.push('./profile')\n\t\t}\n\t}\n\n\tconst { onChange, onSubmit, values} = useForm(editProfileCallback, initialState); \n\n\treturn ( props.user &&\n\t\t<div className={styles.profilePageWrapper}>\n\t\t\t<ReactNotification/>\n\t\t\t<div className={styles.infoDisplay}>\n\t\t\t\t<h1>Perfil</h1>\n\n\t\t\t\t<div className={styles.infos}>\n\t\t\t\t\t<h2> Dados da conta de {props.user.name}</h2>\n\t\t\t\t\t\t<form onSubmit={onSubmit}>\n\t\t\t\t\t\t\t<fieldset disabled={true}>\n\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t<label>\n\t\t\t\t\t\t\t\t\t\t<br/>\n\t\t\t\t\t\t\t\t\t\tNome: <br/> <input \n\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\tname=\"name\"\n\t\t\t\t\t\t\t\t\t\tid=\"name\" \n\t\t\t\t\t\t\t\t\t\tonChange={onChange} \n\t\t\t\t\t\t\t\t\t\tdefaultValue={props.user.name}\n\t\t\t\t\t\t\t\t\t\trequired/> \n\t\t\t\t\t\t\t\t\t\t<br/><br/>\n\t\t\t\t\t\t\t\t\t</label>\n\n\t\t\t\t\t\t\t\t\t<label>\n\t\t\t\t\t\t\t\t\t\tEndereço: <br/> <input \n\t\t\t\t\t\t\t\t\t\ttype=\"text\" \n\t\t\t\t\t\t\t\t\t\tname=\"address\" \n\t\t\t\t\t\t\t\t\t\tid=\"address\"\n\t\t\t\t\t\t\t\t\t\tdefaultValue={props.user.address}\n\t\t\t\t\t\t\t\t\t\tonChange={onChange}\n\t\t\t\t\t\t\t\t\t\trequired/><br/>\n\t\t\t\t\t\t\t\t\t\t<br/>\n\t\t\t\t\t\t\t\t\t</label>\n\n\t\t\t\t\t\t\t\t\t<label>\n\t\t\t\t\t\t\t\t\t\tTelefone: <br/> <input \n\t\t\t\t\t\t\t\t\t\ttype=\"text\" \n\t\t\t\t\t\t\t\t\t\tname=\"phoneNumber\" \n\t\t\t\t\t\t\t\t\t\tid=\"phoneNumber\"\n\t\t\t\t\t\t\t\t\t\tdefaultValue={props.user.phoneNumber}\n\t\t\t\t\t\t\t\t\t\tonChange={onChange}\n\t\t\t\t\t\t\t\t\t\trequired/><br/>\n\t\t\t\t\t\t\t\t\t\t<br/>\n\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t<label>\n\t\t\t\t\t\t\t\t\t\tEmail: <br/> <input \n\t\t\t\t\t\t\t\t\t\ttype=\"email\" \n\t\t\t\t\t\t\t\t\t\tname=\"email\" \n\t\t\t\t\t\t\t\t\t\tid=\"email\"\n\t\t\t\t\t\t\t\t\t\tdefaultValue={props.user.email}\n\t\t\t\t\t\t\t\t\t\tonChange={onChange}\n\t\t\t\t\t\t\t\t\t\trequired/><br/>\n\t\t\t\t\t\t\t\t\t\t<br/>\n\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</fieldset>\n\n\t\t\t\t\t\t\t<label>\n\t\t\t\t\t\t\t\t<button id=\"editButton\" type=\"submit\">Editar</button>\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t</form>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t<div className={styles.purchaseList}>\n\t\t\t\t<h1> Meus pedidos</h1>\n\t\t\t\t<div>\n\t\t\t\t\t{props.orders.map(renderOrders)}\n\t\t\t\t\t{props.rentedProducts.map(renderRentedproduct)}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n  );\n}\n\ninterface DispatchProps {\n  editUserInfo: (name: string, address: string, phoneNumber: string, email: string, id: string\n    ) => void,\n\tloadAllOrders: (user: User) => void\n}\n\ninterface StateProps{\n  orders: Order[];\n  user: User;\n  allUsers: User[];\n\trentedProducts: RentOrder[];\n\teditSuccess: boolean;\n\teditError: boolean;\n}\n\nconst mapStateToProps = (state: ApplicationState): StateProps => ({\n  orders: state.orders,\n  user: state.user!,\n  allUsers: state.usersList,\n  rentedProducts: state.rentedProducts,\n  editSuccess: state.success.editUser,\n  editError: state.error.editUser\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch): DispatchProps => ({\n  editUserInfo:(name, address, phoneNumber, email, id) => {dispatch(editUserRequest(name, address, phoneNumber, email, id))},\n\tloadAllOrders: (user) => {dispatch(loadAllOrdersRequest(user))},\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProfilePage);","/Users/matheuscunha/USP/Plantshop/src/packages/authentication/src/components/RegisterPage/RegisterPage.tsx",["392"],"import React, { useEffect } from 'react'\nimport { Link } from \"react-router-dom\"\nimport * as styles from './styles'\nimport { ApplicationState, User } from '../../../../../store/types';\nimport { signUpUserRequest, signUpUserReset } from '../../../../../store/actionCreators';\nimport { Dispatch } from 'redux';\nimport { connect } from 'react-redux';\nimport { useForm } from '../../../../useForm';\nimport {useHistory} from 'react-router';\nimport ReactNotification, { store } from 'react-notifications-component';\nimport 'react-notifications-component/dist/theme.css';\n\nexport interface RegisterPageProps {\n  user: User | null,\n\tallUsers: User[],\n\tuserError: boolean,\n\tuserLoading: boolean,\n\tuserSuccess: boolean,\n\tregisterUser: (name: string, address: string, phoneNumber: string, email: string, password: string) => void,\n  registerUserReset: () => void\n}\n\nconst RegisterPage: React.FC<RegisterPageProps> = (props) => {\n\tconst history = useHistory();\n  \n\tconst initialState = {\n\t\tname: '',\n\t\taddress: '',\n\t\tphoneNumber: '',\n\t\temail: '',\n\t\tpassword: '',\n\t};\n\n\tuseEffect(() => {\n\t\tif ( props.userError ) { // Error: user not registered\t\n\n      store.addNotification({\n        title: \"Email já cadastrado, por favor utilize outro!\",\n        message: \" \",\n        type: \"danger\",\n        insert: \"top\",\n        container: \"top-left\",\n        animationIn: [\"animate__animated\", \"animate__fadeIn\"],\n        animationOut: [\"animate__animated\", \"animate__fadeOut\"],\n        dismiss: {\n          duration: 2000,\n          onScreen: false\n        }\n\t\t\t});\n\t\t\tprops.registerUserReset();\n\t\t} else if ( props.userSuccess ) { // Success: user registered\n\t\t\t\n      store.addNotification({\n\t\t\t\ttitle: \"Registrado com sucesso! Por favor, faça login.\",\n\t\t\t\tmessage: \" \",\n\t\t\t\ttype: \"success\",\n\t\t\t\tinsert: \"top\",\n\t\t\t\tcontainer: \"top-left\",\n\t\t\t\tanimationIn: [\"animate__animated\", \"animate__fadeIn\"],\n\t\t\t\tanimationOut: [\"animate__animated\", \"animate__fadeOut\"],\n\t\t\t\tdismiss: {\n\t\t\t\t\tduration: 2000,\n\t\t\t\t\tonScreen: false\n\t\t\t\t}\n\t\t\t});\n\t\t\tsetTimeout(function (){\n\t\t\t\thistory.push('/login-page');\n\t\t\t}, 2000);\n      // Reseting loading, error adn success for signUp\n\t  \tprops.registerUserReset();\n\t\t}\n\t\t\n\t}, [props.userError, props.userSuccess]);\n\n\tasync function registerUserCallback(){\n\t\tconst input = JSON.parse(JSON.stringify(values));\n\t\tprops.registerUser(input.name, input.address, input.phoneNumber, input.email, input.password);\n  };\n\n\tconst { onChange, onSubmit, values} = useForm(registerUserCallback, initialState); \n\n  \treturn (\n      <div className={styles.registerForm}>\n        <ReactNotification/>\n\t\t<h1> Cadastro </h1>\n        <br/>\n        <h2> Já tem conta? <Link to='/login-page'>Faça login</Link></h2>\n        <form onSubmit={onSubmit}>\n\t\t\t<div>\n\t\t\t\t<label>\n\t\t\t\t\tNome: <br/> <input \n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tname=\"name\"\n\t\t\t\t\tid=\"name\" \n\t\t\t\t\tplaceholder=\"Jose da Silva Souza\"\n\t\t\t\t\tonChange={onChange} \n\t\t\t\t\trequired/> \n\t\t\t\t\t<br/><br/>\n\t\t\t\t</label>\n\t\t\t\t<label>\n\t\t\t\t\tEndereço: <br/> <input \n\t\t\t\t\ttype=\"text\" \n\t\t\t\t\tname=\"address\" \n\t\t\t\t\tid=\"address\"\n\t\t\t\t\tplaceholder=\"Rua 1, 123, São Paulo, SP\" \n\t\t\t\t\tonChange={onChange}\n\t\t\t\t\trequired/><br/>\n            \t\t<br/>\n\t\t\t\t</label>\n\t\t\t\t<label>\n\t\t\t\t\tTelefone: <br/> <input \n\t\t\t\t\ttype=\"text\" \n\t\t\t\t\tname=\"phoneNumber\" \n\t\t\t\t\tid=\"phoneNumber\"\n\t\t\t\t\tplaceholder=\"(11)987456932\" \n\t\t\t\t\tonChange={onChange}\n\t\t\t\t\trequired/><br/>\n            \t\t<br/>\n\t\t\t\t</label>\n\t\t\t\t<label>\n\t\t\t\t\tEmail: <br/> <input \n\t\t\t\t\ttype=\"email\" \n\t\t\t\t\tname=\"email\" \n\t\t\t\t\tid=\"email\"\n\t\t\t\t\tplaceholder=\"seuemail@email.com\" \n\t\t\t\t\tonChange={onChange}\n\t\t\t\t\trequired/><br/>\n            \t\t<br/>\n\t\t\t\t</label>\n\t\t\t\t<label>\n\t\t\t\t\tSenha: <br/> <input \n\t\t\t\t\ttype=\"password\" \n\t\t\t\t\tname=\"password\"\n\t\t\t\t\tid=\"password\"\n\t\t\t\t\tminLength={6}\n\t\t\t\t\tonChange={onChange}\n\t\t\t\t\trequired/><br/><br/>\n\t\t\t\t</label>\n\t\t\t\t<label>\n\t\t\t\t\t<button type=\"submit\">Cadastrar</button>\n\t\t\t\t</label>\n\t\t\t</div>\n        </form>\n    </div>\n  );\n}\n\ninterface DispatchProps {\n\tregisterUser: (\n\t\tname: string, address: string, phoneNumber: string, email: string, password: string\n\t\t) \n\t\t=> void;\n  registerUserReset: () => void;\n}\n\ninterface StateProps {\n\tuser: User | null;\n\tuserError: boolean;\n\tuserLoading: boolean;\n\tuserSuccess: boolean;\n\tallUsers: User[];\n}\n\nconst mapStateToProps = (state: ApplicationState): StateProps => ({\n  user: state.user,\n  userError: state.error.signUp,\n\tuserLoading: state.loading.signUp,\n\tuserSuccess: state.success.signUp,\n  allUsers: state.usersList\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch): DispatchProps => ({\n\tregisterUser:(name, address, phoneNumber, email, password) => {dispatch(signUpUserRequest(name, address, phoneNumber, email, password))},\n  registerUserReset: () => { dispatch(signUpUserReset()) }\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RegisterPage);\n","/Users/matheuscunha/USP/Plantshop/src/packages/admin/src/components/AdminPage/AdminPage.tsx",[],"/Users/matheuscunha/USP/Plantshop/src/base-components/ManageArrow/ManageArrow.tsx",[],"/Users/matheuscunha/USP/Plantshop/src/base-components/ManageButton/index.ts",[],"/Users/matheuscunha/USP/Plantshop/src/packages/useForm.ts",[],"/Users/matheuscunha/USP/Plantshop/src/packages/rent-page/src/components/utils.ts",[],"/Users/matheuscunha/USP/Plantshop/src/packages/admin/src/components/AddAdminPage/styles.ts",[],"/Users/matheuscunha/USP/Plantshop/src/packages/rent-page/src/components/RentPage/styles.ts",[],"/Users/matheuscunha/USP/Plantshop/src/packages/cart/src/components/ChartPage/styles.ts",[],"/Users/matheuscunha/USP/Plantshop/src/packages/admin/src/components/AddProductPage/styles.ts",[],"/Users/matheuscunha/USP/Plantshop/src/packages/authentication/src/components/LoginPage/styles.ts",[],"/Users/matheuscunha/USP/Plantshop/src/packages/admin/src/components/InventoryPage/styles.ts",[],"/Users/matheuscunha/USP/Plantshop/src/packages/authentication/src/components/RegisterPage/styles.ts",[],"/Users/matheuscunha/USP/Plantshop/src/packages/profile/src/components/ProfilePage/styles.ts",[],"/Users/matheuscunha/USP/Plantshop/src/packages/admin/src/components/AdminPage/styles.ts",[],"/Users/matheuscunha/USP/Plantshop/src/packages/cart/src/components/ChartProduct/ChartProduct.tsx",[],"/Users/matheuscunha/USP/Plantshop/src/packages/cart/src/components/ChartRent/ChartRent.tsx",[],"/Users/matheuscunha/USP/Plantshop/src/base-components/ManageButton/ManageButton.tsx",[],"/Users/matheuscunha/USP/Plantshop/src/packages/rent-page/src/components/RentProductsList/index.ts",[],"/Users/matheuscunha/USP/Plantshop/src/packages/profile/src/components/RentInfo/index.ts",[],"/Users/matheuscunha/USP/Plantshop/src/packages/admin/src/components/InventoryList/index.ts",[],"/Users/matheuscunha/USP/Plantshop/src/packages/admin/src/components/Card/index.ts",[],"/Users/matheuscunha/USP/Plantshop/src/packages/cart/src/components/ProductList/index.ts",[],"/Users/matheuscunha/USP/Plantshop/src/packages/profile/src/components/PurchaseInfo/index.ts",[],"/Users/matheuscunha/USP/Plantshop/src/packages/cart/src/components/ChartProduct/styles.ts",[],"/Users/matheuscunha/USP/Plantshop/src/packages/cart/src/components/ChartRent/styles.ts",[],"/Users/matheuscunha/USP/Plantshop/src/packages/cart/src/components/ChartRent/utils.ts",[],"/Users/matheuscunha/USP/Plantshop/src/base-components/ManageButton/styles.ts",[],"/Users/matheuscunha/USP/Plantshop/src/packages/admin/src/components/InventoryList/InventoryList.tsx",[],"/Users/matheuscunha/USP/Plantshop/src/packages/profile/src/components/RentInfo/RentInfo.tsx",[],"/Users/matheuscunha/USP/Plantshop/src/packages/admin/src/components/Card/Card.tsx",[],"/Users/matheuscunha/USP/Plantshop/src/packages/cart/src/components/ProductList/ProductList.tsx",[],"/Users/matheuscunha/USP/Plantshop/src/packages/rent-page/src/components/RentProductsList/RentProductsList.tsx",[],"/Users/matheuscunha/USP/Plantshop/src/packages/profile/src/components/PurchaseInfo/PurchaseInfo.tsx",[],"/Users/matheuscunha/USP/Plantshop/src/packages/cart/src/components/ProductList/styles.ts",[],"/Users/matheuscunha/USP/Plantshop/src/packages/profile/src/components/RentInfo/styles.ts",[],"/Users/matheuscunha/USP/Plantshop/src/packages/admin/src/components/Card/styles.ts",[],"/Users/matheuscunha/USP/Plantshop/src/packages/admin/src/components/InventoryList/styles.ts",[],"/Users/matheuscunha/USP/Plantshop/src/packages/rent-page/src/components/RentProductsList/styles.ts",[],"/Users/matheuscunha/USP/Plantshop/src/packages/profile/src/components/PurchaseInfo/styles.ts",[],"/Users/matheuscunha/USP/Plantshop/src/packages/admin/src/components/InventoryItem/index.ts",[],"/Users/matheuscunha/USP/Plantshop/src/packages/rent-page/src/components/RentProduct/index.ts",[],"/Users/matheuscunha/USP/Plantshop/src/packages/admin/src/components/InventoryItem/InventoryItem.tsx",[],"/Users/matheuscunha/USP/Plantshop/src/packages/rent-page/src/components/RentProduct/RentProduct.tsx",[],"/Users/matheuscunha/USP/Plantshop/src/base-components/utils.ts",[],"/Users/matheuscunha/USP/Plantshop/src/packages/admin/src/components/InventoryItem/styles.ts",[],"/Users/matheuscunha/USP/Plantshop/src/packages/rent-page/src/components/RentProduct/styles.ts",[],"/Users/matheuscunha/USP/Plantshop/src/store/sagas.ts",["393"],"import { all, call, put, takeLatest } from 'redux-saga/effects'\nimport { \n  loadAllOrdersError, loadAllOrdersSuccess, \n  loadAllProductsError, loadAllProductsSuccess, \n  loadUsersError, loadUsersSuccess, \n  placePurchaseOrderError, placePurchaseOrderSuccess, \n  placeRentOrdersError, placeRentOrdersSuccess, \n  signUpUserError, signUpUserSuccess,\n  addAdminError, addAdminSuccess,\n  addProductError, addProductSuccess,\n  removeProductError, removeProductSuccess,\n  addInventoryError, addInventorySuccess,\n  removeInventoryError, removeInventorySuccess,\n  editUserError, editUserSuccess\n\n} from './actionCreators';\nimport { LoadAllOrdersRequest, LoadUsersRequest, PlacePurchaseOrderRequest, PlaceRentOrdersRequest, SignUpUserRequest, AddAdminRequest, AddProductRequest, RemoveProductRequest, AddInventoryRequest, RemoveInventoryRequest, EditUserRequest} from './actions';\nimport { ActionTypes } from './actionTypes';\nimport ApiRequester from './apiRequester'\nimport { RentOrder } from './types';\n\n// Worker Saga: will be fired on USER_FETCH_REQUESTED actions\n\nfunction* fetchUser(action: LoadUsersRequest) : any {\n  try {\n    const user = yield call(ApiRequester.authenticateUser, action.email, action.password);\n    yield put(user.name === undefined ? loadUsersError() : loadUsersSuccess(user));\n  } catch (e) {\n    yield put(loadUsersError());\n  }\n}\n\nfunction* editUserSagas(action: EditUserRequest) : any {\n  try {\n    const response = yield call(ApiRequester.editUser, action.name, action.address, action.phoneNumber, action.email, action.id);\n    yield put(response.status === 404 ? editUserError() : editUserSuccess());\n  } catch (e) {\n    yield put(editUserError());\n  }\n}\n\nfunction* signUpUserSagas(action: SignUpUserRequest) : any {\n  try {\n    const response = yield call(ApiRequester.registerUser, action.name, action.address, action.phoneNumber, action.email, action.password);\n    yield put(response.status === 404 ? signUpUserError() : signUpUserSuccess());\n  } catch (e) {\n    yield put(signUpUserError());\n  }\n}\n\nfunction* addAdminSagas(action: AddAdminRequest) : any {\n  try {\n    const response = yield call(ApiRequester.addAdmin, action.name, action.address, action.phoneNumber, action.email, action.password);\n    yield put(response.status === 404 ? addAdminError() : addAdminSuccess());\n  } catch (e) {\n    yield put(addAdminError());\n  }\n}\n\nfunction* addProductSagas(action: AddProductRequest) : any {\n  try {\n    const response = yield call(ApiRequester.addProduct, action.name, action.category, action.quantity, action.img, action.price, action.description);\n    yield put(response === 404 ? addProductError() : addProductSuccess());\n  } catch (e) {\n    yield put(addProductError());\n  }\n}\n\nfunction* removeProductSagas(action: RemoveProductRequest) : any {\n  try {\n    const response = yield call(ApiRequester.removeProduct, action.productId);\n    yield put(response === 404 ? removeProductError() : removeProductSuccess());\n  } catch (e) {\n    yield put(removeProductError());\n  }\n}\n\nfunction* addInventorySagas(action: AddInventoryRequest) : any {\n  try {\n    const product = yield call(ApiRequester.addInventory, action.productId);\n    yield put(product === 404 ? addInventoryError() : addInventorySuccess(product));\n  } catch (e) {\n    yield put(addInventoryError());\n  }\n}\n\nfunction* removeInventorySagas(action: RemoveInventoryRequest) : any {\n  try {\n    const response = yield call(ApiRequester.removeInventory, action.productId);\n    yield put(response === 404 ? removeInventoryError() : removeInventorySuccess());\n  } catch (e) {\n    yield put(removeInventoryError());\n  }\n}\n\n\nfunction* loadAllProductsSagas() : any {\n  try {\n    const products = yield call(ApiRequester.getAllProducts);\n    yield put(products.length === 0 ? loadAllProductsError() : loadAllProductsSuccess(products));\n  } catch (e) {\n    yield put(loadAllProductsError());\n  }\n}\n\nfunction* placePurchaseOrderSagas(action: PlacePurchaseOrderRequest) : any {\n  try {\n    const response = yield call(ApiRequester.placePurchaseOrder, action.user, action.order);\n    yield put(response?.status=== 200? placePurchaseOrderSuccess() : placePurchaseOrderError());\n  } catch (e) {\n    yield put(placePurchaseOrderError());\n  }\n}\n\nfunction* placeRentOrdersSagas(action: PlaceRentOrdersRequest) : any {\n  try {\n    const response = yield call(ApiRequester.placeRentOrders, action.user, action.rentOrders);\n    yield put(response?.status=== 200? placeRentOrdersSuccess() : placeRentOrdersError());\n  } catch (e) {\n    yield put(placeRentOrdersError());\n  }\n}\n\nfunction* loadAllOrdersSagas(action: LoadAllOrdersRequest) : any {\n  try {\n    const purchaseOrders = yield call(ApiRequester.getAllPurchaseOrders, action.user);\n    const rentOrders = yield call(ApiRequester.getAllRentOrders, action.user);\n\n    let rentOrdersDTO: RentOrder[] = [];\n\n    if(rentOrders?.status === 200){ \n      rentOrdersDTO = rentOrders.data?.map((rentOrder: any) => <RentOrder> {\n        ...rentOrder, startDate: new Date(rentOrder.startDate), endDate: new Date(rentOrder.endDate)\n      });\n    }\n\n    yield put(\n      purchaseOrders?.status === 200 && rentOrders?.status=== 200? \n        loadAllOrdersSuccess(purchaseOrders.data, rentOrdersDTO) : loadAllOrdersError()\n    );\n  } catch (e) {\n    yield put(loadAllOrdersError());\n  }\n}\n\nfunction* mySaga() {\n  yield all([\n    takeLatest(ActionTypes.LOAD_USER_REQUEST, fetchUser),\n    takeLatest(ActionTypes.EDIT_USER_REQUEST, editUserSagas),\n    takeLatest(ActionTypes.LOAD_ALL_PRODUCTS_REQUEST, loadAllProductsSagas),\n    takeLatest(ActionTypes.SIGN_UP_USER_REQUEST, signUpUserSagas),\n    takeLatest(ActionTypes.PLACE_PURCHASE_ORDER_REQUEST, placePurchaseOrderSagas),\n    takeLatest(ActionTypes.PLACE_RENT_ORDERS_REQUEST, placeRentOrdersSagas),\n    takeLatest(ActionTypes.LOAD_ALL_ORDERS_REQUEST, loadAllOrdersSagas),\n    takeLatest(ActionTypes.SIGN_UP_USER_REQUEST, signUpUserSagas),\n    takeLatest(ActionTypes.ADD_ADMIN_REQUEST, addAdminSagas),\n    takeLatest(ActionTypes.ADD_PRODUCT_REQUEST, addProductSagas),\n    takeLatest(ActionTypes.REMOVE_PRODUCT_REQUEST, removeProductSagas),\n    takeLatest(ActionTypes.ADD_INVENTORY_REQUEST, addInventorySagas),\n    takeLatest(ActionTypes.REMOVE_INVENTORY_REQUEST, removeInventorySagas)\n  ]);\n}\n\nexport default mySaga;","/Users/matheuscunha/USP/Plantshop/src/store/apiRequester.ts",[],"/Users/matheuscunha/USP/Plantshop/src/store/actionTypes.ts",[],"/Users/matheuscunha/USP/Plantshop/src/store/actionCreators.ts",[],"/Users/matheuscunha/USP/Plantshop/src/store/types.ts",[],{"ruleId":"394","replacedBy":"395"},{"ruleId":"396","replacedBy":"397"},{"ruleId":"398","severity":1,"message":"399","line":74,"column":17,"nodeType":"400","messageId":"401","endLine":74,"endColumn":32},{"ruleId":"402","severity":1,"message":"403","line":41,"column":5,"nodeType":"404","endLine":41,"endColumn":7,"suggestions":"405"},{"ruleId":"402","severity":1,"message":"403","line":29,"column":5,"nodeType":"404","endLine":29,"endColumn":7,"suggestions":"406"},{"ruleId":"402","severity":1,"message":"407","line":32,"column":21,"nodeType":"408","endLine":32,"endColumn":85},{"ruleId":"394","replacedBy":"409"},{"ruleId":"396","replacedBy":"410"},{"ruleId":"402","severity":1,"message":"411","line":74,"column":5,"nodeType":"404","endLine":74,"endColumn":72,"suggestions":"412"},{"ruleId":"402","severity":1,"message":"403","line":33,"column":5,"nodeType":"404","endLine":33,"endColumn":93,"suggestions":"413"},{"ruleId":"402","severity":1,"message":"411","line":77,"column":8,"nodeType":"404","endLine":77,"endColumn":81,"suggestions":"414"},{"ruleId":"402","severity":1,"message":"411","line":68,"column":5,"nodeType":"404","endLine":68,"endColumn":41,"suggestions":"415"},{"ruleId":"402","severity":1,"message":"403","line":41,"column":6,"nodeType":"404","endLine":41,"endColumn":21,"suggestions":"416"},{"ruleId":"402","severity":1,"message":"403","line":47,"column":5,"nodeType":"404","endLine":47,"endColumn":17,"suggestions":"417"},{"ruleId":"402","severity":1,"message":"411","line":73,"column":5,"nodeType":"404","endLine":73,"endColumn":41,"suggestions":"418"},{"ruleId":"419","severity":1,"message":"420","line":132,"column":64,"nodeType":"421","messageId":"422","endLine":134,"endColumn":8},"no-native-reassign",["423"],"no-negated-in-lhs",["424"],"@typescript-eslint/no-unused-vars","'selectedProduct' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["425"],["426"],"Assignments to the 'selectedProduct' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression",["423"],["424"],"React Hook useEffect has missing dependencies: 'history' and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["427"],["428"],["429"],["430"],["431"],["432"],["433"],"@typescript-eslint/consistent-type-assertions","Use 'as RentOrder' instead of '<RentOrder>'.","TSTypeAssertion","as","no-global-assign","no-unsafe-negation",{"desc":"434","fix":"435"},{"desc":"434","fix":"436"},{"desc":"437","fix":"438"},{"desc":"439","fix":"440"},{"desc":"441","fix":"442"},{"desc":"443","fix":"444"},{"desc":"445","fix":"446"},{"desc":"447","fix":"448"},{"desc":"449","fix":"450"},"Update the dependencies array to be: [props]",{"range":"451","text":"452"},{"range":"453","text":"452"},"Update the dependencies array to be: [history, props, props.addAdminError, props.addAdminLoading, props.addAdminSuccess]",{"range":"454","text":"455"},"Update the dependencies array to be: [props, props.success.addInventory, props.success.removeInventory, props.success.removeProduct]",{"range":"456","text":"457"},"Update the dependencies array to be: [history, props, props.addProductError, props.addProductLoading, props.addProductSuccess]",{"range":"458","text":"459"},"Update the dependencies array to be: [history, props, props.userError, props.userLoading]",{"range":"460","text":"461"},"Update the dependencies array to be: [props, props.success]",{"range":"462","text":"463"},"Update the dependencies array to be: [props, props.user]",{"range":"464","text":"465"},"Update the dependencies array to be: [history, props, props.userError, props.userSuccess]",{"range":"466","text":"467"},[2024,2026],"[props]",[1039,1041],[2192,2259],"[history, props, props.addAdminError, props.addAdminLoading, props.addAdminSuccess]",[1234,1322],"[props, props.success.addInventory, props.success.removeInventory, props.success.removeProduct]",[2292,2365],"[history, props, props.addProductError, props.addProductLoading, props.addProductSuccess]",[1932,1968],"[history, props, props.userError, props.userLoading]",[1744,1759],"[props, props.success]",[1444,1456],"[props, props.user]",[2179,2215],"[history, props, props.userError, props.userSuccess]"]